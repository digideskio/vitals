/* vitals v5.0.0 (http://vitalsjs.com)
 * Copyright (c) 2014-2017 Adam A Smith <adam@imaginate.life>
 * The Apache License (http://vitalsjs.com/license) */
'use strict';
(function(__THIS,__VOID){var VERSION="5.0.0";var ENV={HAS_EXPORTS:true,HAS_MODULE:true,HAS_GLOBAL:true,HAS_WINDOW:false,HAS_DEFINE:false,HAS_SELF:false,HAS_THIS:false,ROOT:global};var ROOT=ENV.ROOT;var ARR=ROOT["Array"];var ARR_PROTO=ARR["prototype"];var ERR=ROOT["Error"];var FUN=ROOT["Function"];var FUN_PROTO=FUN["prototype"];var NIL=null;var NO=false;var NUM=ROOT["Number"];var NUM_PROTO=NUM["prototype"];var OBJ=ROOT["Object"];var OBJ_PROTO=OBJ["prototype"];var RANGE_ERR=ROOT["RangeError"];var REGX=
ROOT["RegExp"];var REGX_PROTO=REGX["prototype"];var STR=ROOT["String"];var STR_PROTO=STR["prototype"];var TYPE_ERR=ROOT["TypeError"];var VOID=__VOID;var YES=true;var BUFF=ROOT["Buffer"];var CP=require("child_process");var FS=require("fs");var PATH=require("path");var $objStr=function $objStrPrivateScope(){function $objStr(source){return _objToStr["call"](source)}var _objToStr=OBJ_PROTO["toString"];return $objStr}();var $own=function $ownPrivateScope(){function $own(source,key){return _hasOwnProp["call"](source,
key)}var _hasOwnProp=OBJ_PROTO["hasOwnProperty"];return $own}();var $is=function $isPrivateScope(){function isNull(val){return val===NIL}function isUndefined(val){return val===VOID}function isBoolean(val){return typeof val==="boolean"}function isString(val){return typeof val==="string"}function isNonEmptyString(val){return!!val&&typeof val==="string"}function isNumber(val){return typeof val==="number"&&val===val&&isFinite(val)}function isNonZeroNumber(val){return!!val&&typeof val==="number"&&val===
val&&isFinite(val)}function isNan(val){return val!==val}function isObject(val){return!!val&&typeof val==="object"}function isObjectOrFunction(val){if(!val)return false;switch(typeof val){case "object":case "function":return true;default:return false}}function isFunction(val){return!!val&&typeof val==="function"}function isArray(val){return isObject(val)&&$objStr(val)==="[object Array]"}function isRegExp(val){return isObject(val)&&$objStr(val)==="[object RegExp]"}function isDate(val){return isObject(val)&&
$objStr(val)==="[object Date]"}function isError(val){return isObject(val)&&$objStr(val)==="[object Error]"}function isArguments(val){return isObject(val)&&$objStr(val)==="[object Arguments]"}function isArrayOrArguments(val){if(!isObject(val))return false;switch($objStr(val)){case "[object Array]":case "[object Arguments]":return true;default:return false}}var isBuffer=BUFF["isBuffer"];function isDomDocument(val){return isObject(val)&&"nodeType"in val&&val["nodeType"]===9}function isDomElement(val){return isObject(val)&&
"nodeType"in val&&val["nodeType"]===1}function isArrayLike(val){var len;if(isArray(val))return true;len=val["length"];return isNumber(len)&&isWholeNumber(len)&&len>=0}function isEmpty(val){var key;if(!val)return YES;if(typeof val==="function")return val["length"]===0;if(typeof val!=="object")return NO;if($objStr(val)==="[object Array]")return val["length"]===0;for(key in val)if($own(val,key))return NO;return YES}var _EOL=/^(?:cr|lf|crlf)$/i;function isEndOfLine(val){return _EOL["test"](val)}var _FLAGS=
function _FLAGS_PrivateScope(){var pattern;var source;var flags;flags="img";if("sticky"in REGX_PROTO)flags+="y";if("unicode"in REGX_PROTO)flags+="u";source="^(?:"+"[\\+\\-]["+flags+"\\+\\-]*"+"|"+"["+flags+"]*"+")$";pattern=new REGX(source);pattern.FLAGS=flags;pattern.SRC="/"+source+"/";return pattern}();function isRegExpFlags(val){return _FLAGS["test"](val)}isRegExpFlags.FLAGS=_FLAGS.FLAGS;isRegExpFlags.SRC=_FLAGS.SRC;var isExtensible=function $isExtensiblePolyfillPrivateScope(){var objectIsExtensible;
if(!("isExtensible"in OBJ)||!isFunction(OBJ["isExtensible"]))return function isExtensible(src){return false};objectIsExtensible=OBJ["isExtensible"];try{objectIsExtensible(function(){});return objectIsExtensible}catch(e){return function isExtensible(src){return typeof src==="object"&&objectIsExtensible(src)}}}();var isFrozen=function $isFrozenPolyfillPrivateScope(){var objectIsFrozen;if(!("isFrozen"in OBJ)||!isFunction(OBJ["isFrozen"]))return function isFrozen(src){return false};objectIsFrozen=OBJ["isFrozen"];
try{objectIsFrozen(function(){});return objectIsFrozen}catch(e){return function isFrozen(src){return typeof src==="object"&&objectIsFrozen(src)}}}();var isSealed=function $isSealedPolyfillPrivateScope(){var objectIsSealed;if(!("isSealed"in OBJ)||!isFunction(OBJ["isSealed"]))return function isSealed(src){return false};objectIsSealed=OBJ["isSealed"];try{objectIsSealed(function(){});return objectIsSealed}catch(e){return function isSealed(src){return typeof src==="object"&&objectIsSealed(src)}}}();function isWholeNumber(val){return!(val%
1)}function isOddNumber(val){return!!(val%2)}function isEvenNumber(val){return!(val%2)}var _getStats=FS["statSync"];function isDirectory(path){if(!path||!isString(path))return NO;try{return _getStats(path)["isDirectory"]()}catch(e){return NO}}function isFile(path){if(!path||!isString(path))return NO;try{return _getStats(path)["isFile"]()}catch(e){return NO}}var $is={nil:isNull,void:isUndefined,bool:isBoolean,str:isString,_str:isNonEmptyString,num:isNumber,_num:isNonZeroNumber,nan:isNan,obj:isObject,
_obj:isObjectOrFunction,fun:isFunction,arr:isArray,_arr:isArrayOrArguments,args:isArguments,regx:isRegExp,date:isDate,err:isError,buff:isBuffer,doc:isDomDocument,elem:isDomElement,arrish:isArrayLike,empty:isEmpty,eol:isEndOfLine,flags:isRegExpFlags,extend:isExtensible,frozen:isFrozen,sealed:isSealed,whole:isWholeNumber,odd:isOddNumber,even:isEvenNumber,dir:isDirectory,file:isFile};return $is}();function $mkStr(val){if($is.str(val))return val;if($is.obj(val)||$is.fun(val)){if(!("toString"in val)||
!$is.fun(val["toString"]))return STR(val);val=val["toString"]();return $is.str(val)?val:STR(val)}return $is.void(val)?"undefined":$is.nil(val)?"null":$is.bool(val)?val?"true":"false":$is.nan(val)?"NaN":STR(val)}var $print=function $printPrivateScope(){function $print(val,depth){depth=depth||0;return $is._obj(val)?$is.regx(val)?val["toString"]():_mapToStr(val,depth):_primToStr(val)}var _INDENT="    ";var _MAP_TYPE=/^\[object ([a-zA-Z0-9_\$]+)\]$/;var _LAST_SEP=/,\n$/;function _emptyHashMap(val){var key;
for(key in val)if($own(val,key))return false;return true}function _escStr(val){val=val["replace"](/\\/g,"\\\\");val=val["replace"](/\n/g,"\\n");val=val["replace"](/\r/g,"\\r");val=val["replace"](/\t/g,"\\t");val=val["replace"](/\v/g,"\\v");val=val["replace"](/\0/g,"\\0");val=val["replace"](/\b/g,"\\b");val=val["replace"](/\f/g,"\\f");return val}function _getMapType(val){var type;if($is.fun(val)){type="Function";if(val["name"])type+="("+val["name"]+")";return type}type=$objStr(val);return _MAP_TYPE["test"](type)?
type["replace"](_MAP_TYPE,"$1"):"UnknownObjectType"}function _mkIndent(depth){var indent;if(indent<1)return"";indent="";while(depth--)indent+=_INDENT;return indent}function _primToStr(val){if($is.bool(val))return val?"true":"false";if($is.nil(val))return"null";if($is.void(val))return"undefined";if($is.nan(val))return"NaN";if($is.str(val))return'"'+_escStr(val)+'"';return $mkStr(val)}function _arrToStr(val,depth){var result;var indent;var len;var i;len=val["length"];if(len<1)return"[]";indent=_mkIndent(depth);
depth+=1;result="[\n";i=-1;while(++i<len){result+=indent+i+": ";result+=$print(val[i],depth)+",\n"}result=result["replace"](_LAST_SEP,"\n");return result+"]"}function _keyToStr(key){return"'"+$mkStr(key)+"'"}function _mapToStr(val,depth){var result;result=_getMapType(val)+": ";result+=$is._arr(val)?_arrToStr(val,depth):_ownToStr(val,depth);return result}function _ownToStr(val,depth){var result;var indent;var key;if(_emptyHashMap(val))return"{}";indent=_mkIndent(depth);depth+=1;result="{\n";for(key in val)if($own(val,
key)){result+=indent;result+=_keyToStr(key)+": ";result+=$print(val[key],depth)+",\n"}result=result["replace"](_LAST_SEP,"\n");return result+"}"}return $print}();var $mkObj=function $mkObjPrivateScope(){var _create=function _createPrivateScope(){if("create"in OBJ&&$is.fun(OBJ["create"]))return OBJ["create"];function _Obj(){}function create(proto){var obj;_Obj["prototype"]=proto;obj=new _Obj;_Obj["prototype"]=NIL;return obj}return create}();function $mkObj(proto){return _create(proto)}return $mkObj}();
var $mkErrs=function $mkErrsPrivateScope(){var _OPEN_HASH=/^#/;var _OPEN_VITALS=/^vitals\./;var _STRICT=/^\!/;function _mkOptions(opts){var result;var len;var i;result="";len=opts["length"];i=-1;while(++i<len)result+="\n- `"+$print(opts[i])+"`";return result}function _prepSuper(name){if($is.void(name))return"newVitals";name=name["replace"](_OPEN_VITALS,"");return"vitals."+name}function _prepParam(name){if(!name)return"";if(_STRICT["test"](name))return name["replace"](_STRICT,"");name=name["replace"](_OPEN_HASH,
"");return"#"+name}function _setErrorProps(err,name,msg,val){err["__vitals"]=true;err["vitals"]=true;err["name"]=name;switch(name){case "TypeError":err["__type"]=true;err["type"]=true;break;case "RangeError":err["__range"]=true;err["range"]=true;break}err["message"]=msg;err["msg"]=msg;if(arguments["length"]>3){err["value"]=val;err["val"]=val}return err}function $mkErrs(superMethod){var MK_ERR={error:error,typeError:typeError,rangeError:rangeError};var _SUPER=_prepSuper(superMethod);function _prepMethod(method){method=
!!method?_SUPER+"."+method:_SUPER;return"`"+method+"`"}function error(err,msg,method){method=_prepMethod(method);msg+=" for "+method+" call";return _setErrorProps(err,"Error",msg)}function typeError(err,paramName,paramVal,validTypes,methodName){var method;var param;var msg;var val;method=_prepMethod(methodName);param=_prepParam(paramName);val=$print(paramVal);msg="invalid "+param+" data type for "+method+" call\n";msg+="valid data types: `"+validTypes+"`\n";msg+="actual "+param+" value: `"+val+"`";
return _setErrorProps(err,"TypeError",msg,paramVal)}function rangeError(err,paramName,validRange,methodName){var method;var param;var msg;method=_prepMethod(methodName);param=_prepParam(paramName);msg="out-of-range "+param+" for "+method+" call";if($is.str(validRange))msg+="\nvalid range: `"+validRange+"`";else if($is.arr(validRange))msg+="\nvalid options:"+_mkOptions(validRange);return _setErrorProps(err,"RangeError",msg)}return MK_ERR}return $mkErrs}();var $strIncl=function $strInclPrivateScope(){var $strIncl=
"includes"in STR_PROTO&&$is.fun(STR_PROTO["includes"])?function $strIncl(src,val){return src["includes"](val)}:function $strIncl(src,val){return src["indexOf"](val)!==-1};return $strIncl}();function $cloneObj(obj){var clone;var key;clone={};for(key in obj)if($own(obj,key))clone[key]=obj[key];return clone}var $defProp=function $defPropPrivateScope(){var _HAS_DEFINE_PROP=function _HAS_DEFINE_PROP_PrivateScope(){var descriptor;var name;var obj;var key;name="defineProperty";if(!(name in OBJ)||!$is.fun(OBJ[name]))return NO;
obj={};descriptor={};descriptor["value"]=obj;descriptor["enumerable"]=NO;try{OBJ[name](obj,"key",descriptor);for(key in obj)if(key==="key")return NO}catch(e){return NO}return obj["key"]===obj}();var _defineProperty=function _definePropertyPrivateScope(){if(_HAS_DEFINE_PROP)return OBJ["defineProperty"];function defineProperty(obj,key,descriptor){if($own(descriptor,"get"))obj[key]=descriptor["get"]();else if($own(descriptor,"value"))obj[key]=descriptor["value"];else if(!$own(obj,key))obj[key]=VOID;
return obj}return defineProperty}();function $defProp(obj,key,descriptor){return _defineProperty(obj,key,descriptor)}return $defProp}();var $defProps=function $defPropsPrivateScope(){var _HAS_DEFINE_PROPS=function _HAS_DEFINE_PROPS_PrivateScope(){var descriptor;var props;var name;var obj;var key;name="defineProperties";if(!(name in OBJ)||!$is.fun(OBJ[name]))return NO;obj={};props={};descriptor={};props["key"]=descriptor;descriptor["value"]=obj;descriptor["enumerable"]=NO;try{OBJ[name](obj,props);
for(key in obj)if(key==="key")return NO}catch(e){return NO}return obj["key"]===obj}();var _defineProperties=function _definePropertiesPrivateScope(){if(_HAS_DEFINE_PROPS)return OBJ["defineProperties"];function defineProperties(obj,props){var descriptor;var key;for(key in props)if($own(props,key)){descriptor=props[key];if($own(descriptor,"get"))obj[key]=descriptor["get"]();else if($own(descriptor,"value"))obj[key]=descriptor["value"];else if(!$own(obj,key))obj[key]=VOID}return obj}return defineProperties}();
function $defProps(obj,props){return _defineProperties(obj,props)}return $defProps}();function $ownsOne(src,keys){var len;var i;len=keys["length"];i=-1;while(++i<len)if($own(src,keys[i]))return YES;return NO}function $splitKeys(keys){var separator;if(!keys)return[""];separator=$strIncl(keys,", ")?", ":$strIncl(keys,",")?",":$strIncl(keys,"|")?"|":" ";return keys["split"](separator)}var is=function isPrivateScope(){function is(types,val){var nullable;var checks;var vals;switch(arguments["length"]){case 0:throw _mkErr(new ERR,
"no #types defined");case 1:throw _mkErr(new ERR,"no #val defined");case 2:vals=NO;break;default:vals=YES;break}if(!$is.str(types))throw _mkTypeErr(new TYPE_ERR,"types",types,"string");if(!types)throw _mkErr(new ERR,"invalid empty #types `string`");if(_hasSpecial("*",types))return YES;checks=_getChecks(types);if(!checks)throw _mkRangeErr(new RANGE_ERR,"types","https://github.com/imaginate/vitals/wiki/vitals.is-types");nullable=_getNullable(types);return vals?_checkVals(checks,arguments,nullable):
_checkVal(checks,val,nullable)}is["main"]=is;function _checkVal(checks,val,nullable){var i;i=checks["length"];while(i--)if(checks[i](val,nullable))return YES;return NO}function _checkVals(checks,vals,nullable){var i;i=vals["length"];while(--i)if(!_checkVal(checks,vals[i],nullable))return NO;return YES}var _TYPES=function _TYPES_PrivateScope(){var $types={};function _addTypes(section,types,nullableDefault){var type;for(type in types)if($own(types,type))_addType(section,type,types[type],nullableDefault)}
function _addType(section,type,check,nullableDefault){if($own(_addType,section))check=_addType[section](check);nullableDefault=nullableDefault!==NO;function typeCheck(val,nullable){if(!$is.bool(nullable))nullable=nullableDefault;return $is.nil(val)?nullable:check(val)}$types["_"+type]=typeCheck}function _addShortcuts(shortcuts){var shortcut;var type;for(shortcut in shortcuts)if($own(shortcuts,shortcut)){type="_"+shortcuts[shortcut];shortcut="_"+shortcut;$types[shortcut]=$types[type]}}function _addArrayType(eachCheck){function check(val){var i;
if(!$is.arr(val))return NO;i=val["length"];while(i--)if(!eachCheck(val[i]))return NO;return YES}return check}_addType["arrays"]=_addArrayType;function _addMapType(eachCheck){function check(val){var key;if(!$is.obj(val))return NO;for(key in val)if($own(val,key)&&!eachCheck(val[key]))return NO;return YES}return check}_addType["maps"]=_addMapType;_addTypes("primitives",{"undefined":$is.void,"boolean":$is.bool,"string":$is.str,"number":$is.num,"nan":$is.nan},NO);_addType("primitives","null",$is.nil);
_addTypes("js_objects",{"object":$is.obj,"regexp":$is.regx,"array":$is.arr,"error":$is.err,"date":$is.date});_addType("js_objects","arguments",$is.args);_addType("js_objects","function",$is.fun,NO);_addTypes("dom_objects",{"element":$is.elem,"document":$is.doc});_addType("others","empty",$is.empty);_addTypes("arrays",{"undefineds":$is.void,"nulls":$is.nil,"booleans":$is.bool,"strings":$is.str,"numbers":$is.num,"nans":$is.nan,"objects":$is.obj,"functions":$is.fun,"regexps":$is.regx,"arrays":$is.arr,
"dates":$is.date,"errors":$is.err,"elements":$is.elem,"documents":$is.doc});_addTypes("maps",{"undefinedmap":$is.void,"nullmap":$is.nil,"booleanmap":$is.bool,"stringmap":$is.str,"numbermap":$is.num,"nanmap":$is.nan,"objectmap":$is.obj,"functionmap":$is.func,"regexpmap":$is.regex,"arraymap":$is.arr,"datemap":$is.date,"errormap":$is.err,"elementmap":$is.elem,"documentmap":$is.doc});_addShortcuts({"nil":"null","bool":"boolean","str":"string","num":"number","void":"undefined","obj":"object","func":"function",
"fun":"function","fn":"function","regex":"regexp","regx":"regexp","re":"regexp","arr":"array","err":"error","args":"arguments","elem":"element","doc":"document","undefinedes":"undefineds","voids":"undefineds","nils":"nulls","strs":"strings","nums":"numbers","bools":"booleans","objs":"objects","funcs":"functions","funs":"functions","fns":"functions","regexes":"regexps","regexs":"regexps","res":"regexps","arrs":"arrays","errs":"errors","elems":"elements","docs":"documents","voidmap":"undefinedmap",
"nilmap":"nullmap","strmap":"stringmap","nummap":"numbermap","boolmap":"booleanmap","objmap":"objectmap","funcmap":"functionmap","funmap":"functionmap","fnmap":"functionmap","regexmap":"regexpmap","regxmap":"regexpmap","remap":"regexpmap","arrmap":"arraymap","errmap":"errormap","elemmap":"elementmap","docmap":"documentmap"});return $types}();var _ALL_SPECIALS=/[^a-z\|]/g;var _SPECIALS=function _SPECIALS_PrivateScope(){var _PIPE=/\|/;var _EXCLAMATION_POINT=/\!/;var _QUESTION_MARK=/\?/;var _EQUAL_SIGN=
/\=/;var _ANY=/\*|any/;function hasPipe(val){return _PIPE["test"](val)}function hasExPoint(val){return _EXCLAMATION_POINT["test"](val)}function hasQuestMark(val){return _QUESTION_MARK["test"](val)}function hasEqSign(val){return _EQUAL_SIGN["test"](val)}function hasAnyGlob(val){return _ANY["test"](val)}var SPECIALS={"|":hasPipe,"!":hasExPoint,"?":hasQuestMark,"\x3d":hasEqSign,"*":hasAnyGlob};return SPECIALS}();function _hasSpecial(special,types){return _SPECIALS[special](types)}function _getChecks(types){var checks;
var type;var i;if(_hasSpecial("\x3d",types))types+="|undefined";types=types["toLowerCase"]();types=types["replace"](_ALL_SPECIALS,"");checks=types["split"]("|");i=checks["length"];while(i--){type="_"+checks[i];if(!$own(_TYPES,type))return NIL;checks[i]=_TYPES[type]}return checks["length"]?checks:NIL}function _getNullable(types){var override;var ensure;var negate;ensure=_hasSpecial("?",types);negate=_hasSpecial("!",types);override=ensure&&negate?NO:ensure||negate;return override?!negate&&ensure:VOID}
var _MK_ERR=$mkErrs("is");var _mkErr=_MK_ERR.error;var _mkTypeErr=_MK_ERR.typeError;var _mkRangeErr=_MK_ERR.rangeError;return is}();var assign=function assignPrivateScope(){function assign(source,props,val,descriptor,strongType,setter){var byKeys;var byKey;var len;len=arguments["length"];switch(len){case 0:throw _mkErr(new ERR,"no #source defined");case 1:throw _mkErr(new ERR,"no #props defined");}if(!$is.obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object");byKey=$is.str(props);if(byKey){if(!props)throw _mkErr(new ERR,
"invalid empty key name `string` defined for "+"#props");byKeys=NO}else if(!$is.obj(props))throw _mkTypeErr(new TYPE_ERR,"props",props,"!Object\x3cstring, *\x3e|!Array\x3cstring\x3e|string");else if($is.arr(props)){if(!_keysTypeCheckProps(props))throw _mkTypeErr(new TYPE_ERR,"props property",props,"!Array\x3cstring\x3e");if(!_keysCheckProps(props))throw _mkErr(new ERR,"invalid empty key name `string` defined in #props `array`");byKeys=YES}else if(!_descriptorCheckProps(props))throw _mkErr(new ERR,
"conflicting accessor and data descriptor "+"properties for a property value within the #props");else byKeys=NO;switch(len){case 2:return byKey?_assignKey(source,props,VOID,NIL,"",NIL):byKeys?_assignKeys(source,props,VOID,NIL,"",NIL):_assignProps(source,props,VOID,NIL,"",NIL);case 3:if(_isDescriptor(val)){descriptor=val;val=$own(descriptor,"value")?descriptor["value"]:VOID}else descriptor=NIL;return byKey?_assignKey(source,props,val,descriptor,"",NIL):byKeys?_assignKeys(source,props,val,descriptor,
"",NIL):_assignProps(source,props,val,descriptor,"",NIL);case 4:if($is.str(descriptor)){strongType=descriptor;setter=NIL;if(_isDescriptor(val)){descriptor=val;val=$own(descriptor,"value")?descriptor["value"]:VOID}else descriptor=NIL}else if($is.fun(descriptor)){strongType="";setter=descriptor;if(_isDescriptor(val)){descriptor=val;val=$own(descriptor,"value")?descriptor["value"]:VOID}else descriptor=NIL}else{strongType="";setter=NIL}break;case 5:if($is.str(descriptor)){setter=$is.void(strongType)?
NIL:strongType;strongType=descriptor;if(_isDescriptor(val)){descriptor=val;val=$own(descriptor,"value")?descriptor["value"]:VOID}else descriptor=NIL}else{if($is.nil(strongType)||$is.fun(strongType)){setter=strongType;strongType=""}else{if($is.void(strongType))strongType="";setter=NIL}if($is.void(descriptor))descriptor=NIL}break;default:if($is.void(descriptor))descriptor=NIL;if($is.void(strongType))strongType="";if($is.void(setter))setter=NIL}if($is.obj(descriptor)){if(!_hasOnlyDescriptorProps(descriptor))throw _mkRangeErr(new RANGE_ERR,
"!property defined in descriptor "+"`object`",_DESCRIPTOR_KEYS);if(_isBadDescriptor(descriptor))throw _mkErr(new ERR,"conflicting accessor and data descriptor "+"properties within the #descriptor");}else if(!$is.nil(descriptor))throw _mkTypeErr(new TYPE_ERR,"descriptor",descriptor,"?Object\x3d");if(!$is.str(strongType))throw _mkTypeErr(new TYPE_ERR,"strongType",strongType,"string\x3d");else if(strongType){if(!$is.void(val)&&!is(strongType,val)){strongType=_appendEqualSign(strongType);throw _mkTypeErr(new TYPE_ERR,
"val",val,strongType);}if(!byKey&&!byKeys&&!_strongTypeCheckProps(strongType,props)){strongType=_appendEqualSign(strongType);throw _mkTypeErr(new TYPE_ERR,"props property value",props,strongType);}}if(!$is.nil(setter)&&!$is.fun(setter))throw _mkTypeErr(new TYPE_ERR,"setter",setter,"(?function(*, *): *)\x3d");if(!!descriptor&&(!!strongType||!!setter))if(_hasAccessorProp(descriptor))throw _mkErr(new ERR,"conflicting accessor #descriptor and defined "+"#strongType and/or #setter");else if($own(descriptor,
"writable"))throw _mkErr(new ERR,"conflicting data #descriptor and defined "+"#strongType and/or #setter");return byKey?_assignKey(source,props,val,descriptor,strongType,setter):byKeys?_assignKeys(source,props,val,descriptor,strongType,setter):_assignProps(source,props,val,descriptor,strongType,setter)}assign["main"]=assign;function assignProperty(source,key,val,descriptor,strongType,setter){var len;len=arguments["length"];switch(len){case 0:throw _mkErr(new ERR,"no #source defined","property");case 1:throw _mkErr(new ERR,
"no #key defined","property");}if(!$is.obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object","property");if(!$is.str(key))throw _mkTypeErr(new TYPE_ERR,"key",key,"string","property");else if(!key)throw _mkErr(new ERR,"invalid empty key name `string` defined for "+"#key","property");switch(len){case 2:return _assignKey(source,key,VOID,NIL,"",NIL);case 3:if(_isDescriptor(val)){descriptor=val;val=$own(descriptor,"value")?descriptor["value"]:VOID}else descriptor=NIL;return _assignKey(source,
key,val,descriptor,"",NIL);case 4:if($is.str(descriptor)){strongType=descriptor;setter=NIL;if(_isDescriptor(val)){descriptor=val;val=$own(descriptor,"value")?descriptor["value"]:VOID}else descriptor=NIL}else if($is.fun(descriptor)){strongType="";setter=descriptor;if(_isDescriptor(val)){descriptor=val;val=$own(descriptor,"value")?descriptor["value"]:VOID}else descriptor=NIL}else{strongType="";setter=NIL}break;case 5:if($is.str(descriptor)){setter=$is.void(strongType)?NIL:strongType;strongType=descriptor;
if(_isDescriptor(val)){descriptor=val;val=$own(descriptor,"value")?descriptor["value"]:VOID}else descriptor=NIL}else{if($is.nil(strongType)||$is.fun(strongType)){setter=strongType;strongType=""}else{if($is.void(strongType))strongType="";setter=NIL}if($is.void(descriptor))descriptor=NIL}break;default:if($is.void(descriptor))descriptor=NIL;if($is.void(strongType))strongType="";if($is.void(setter))setter=NIL}if($is.obj(descriptor)){if(!_hasOnlyDescriptorProps(descriptor))throw _mkRangeErr(new RANGE_ERR,
"descriptor property defined",_DESCRIPTOR_KEYS,"property");if(_isBadDescriptor(descriptor))throw _mkErr(new ERR,"conflicting accessor and data descriptor "+"properties within the #descriptor","property");}else if(!$is.nil(descriptor))throw _mkTypeErr(new TYPE_ERR,"descriptor",descriptor,"?Object\x3d","property");if(!$is.str(strongType))throw _mkTypeErr(new TYPE_ERR,"strongType",strongType,"string\x3d","property");else if(!!strongType&&!$is.void(val)&&!is(strongType,val)){strongType=_appendEqualSign(strongType);
throw _mkTypeErr(new TYPE_ERR,"val",val,strongType,"property");}if(!$is.nil(setter)&&!$is.fun(setter))throw _mkTypeErr(new TYPE_ERR,"setter",setter,"(?function(*, *): *)\x3d","property");if(!!descriptor&&(!!strongType||!!setter))if(_hasAccessorProp(descriptor))throw _mkErr(new ERR,"conflicting accessor #descriptor and defined "+"#strongType and/or #setter","property");else if($own(descriptor,"writable"))throw _mkErr(new ERR,"conflicting data #descriptor and defined "+"#strongType and/or #setter",
"property");return _assignKey(source,key,val,descriptor,strongType,setter)}assign["property"]=assignProperty;assign["prop"]=assignProperty;function assignProperties(source,props,val,descriptor,strongType,setter){var byKeys;var len;len=arguments["length"];switch(len){case 0:throw _mkErr(new ERR,"no #source defined","properties");case 1:throw _mkErr(new ERR,"no #props defined","properties");}if(!$is.obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object","properties");if($is.str(props)){if(!props)throw _mkErr(new ERR,
"invalid empty `string` defined for #props","properties");props=$splitKeys(props);if(!_keysCheckProps(props))throw _mkErr(new ERR,"invalid empty key name defined in #props "+"`string`","properties");byKeys=YES}else if(!$is.obj(props))throw _mkTypeErr(new TYPE_ERR,"props",props,"!Object\x3cstring, *\x3e|!Array\x3cstring\x3e|string","properties");else if($is.arr(props)){if(!_keysTypeCheckProps(props))throw _mkTypeErr(new TYPE_ERR,"props property",props,"!Array\x3cstring\x3e","properties");if(!_keysCheckProps(props))throw _mkErr(new ERR,
"invalid empty key name `string` defined in "+"#props `array`","properties");byKeys=YES}else if(!_descriptorCheckProps(props))throw _mkErr(new ERR,"conflicting accessor and data descriptor "+"properties for a property value within the #props","properties");else byKeys=NO;switch(len){case 2:return byKeys?_assignKeys(source,props,VOID,NIL,"",NIL):_assignProps(source,props,VOID,NIL,"",NIL);case 3:if(_isDescriptor(val)){descriptor=val;val=$own(descriptor,"value")?descriptor["value"]:VOID}else descriptor=
NIL;return byKeys?_assignKeys(source,props,val,descriptor,"",NIL):_assignProps(source,props,val,descriptor,"",NIL);case 4:if($is.str(descriptor)){strongType=descriptor;setter=NIL;if(_isDescriptor(val)){descriptor=val;val=$own(descriptor,"value")?descriptor["value"]:VOID}else descriptor=NIL}else if($is.fun(descriptor)){strongType="";setter=descriptor;if(_isDescriptor(val)){descriptor=val;val=$own(descriptor,"value")?descriptor["value"]:VOID}else descriptor=NIL}else{strongType="";setter=NIL}break;case 5:if($is.str(descriptor)){setter=
$is.void(strongType)?NIL:strongType;strongType=descriptor;if(_isDescriptor(val)){descriptor=val;val=$own(descriptor,"value")?descriptor["value"]:VOID}else descriptor=NIL}else{if($is.nil(strongType)||$is.fun(strongType)){setter=strongType;strongType=""}else{if($is.void(strongType))strongType="";setter=NIL}if($is.void(descriptor))descriptor=NIL}break;default:if($is.void(descriptor))descriptor=NIL;if($is.void(strongType))strongType="";if($is.void(setter))setter=NIL}if($is.obj(descriptor)){if(!_hasOnlyDescriptorProps(descriptor))throw _mkRangeErr(new RANGE_ERR,
"!property defined in descriptor "+"`object`",_DESCRIPTOR_KEYS,"properties");if(_isBadDescriptor(descriptor))throw _mkErr(new ERR,"conflicting accessor and data descriptor "+"properties within the #descriptor","properties");}else if(!$is.nil(descriptor))throw _mkTypeErr(new TYPE_ERR,"descriptor",descriptor,"?Object\x3d","properties");if(!$is.str(strongType))throw _mkTypeErr(new TYPE_ERR,"strongType",strongType,"string\x3d","properties");else if(strongType){if(!$is.void(val)&&!is(strongType,val)){strongType=
_appendEqualSign(strongType);throw _mkTypeErr(new TYPE_ERR,"val",val,strongType,"properties");}if(!byKeys&&!_strongTypeCheckProps(strongType,props)){strongType=_appendEqualSign(strongType);throw _mkTypeErr(new TYPE_ERR,"props property value",props,strongType,"properties");}}if(!$is.nil(setter)&&!$is.fun(setter))throw _mkTypeErr(new TYPE_ERR,"setter",setter,"(?function(*, *): *)\x3d","properties");if(!!descriptor&&(!!strongType||!!setter))if(_hasAccessorProp(descriptor))throw _mkErr(new ERR,"conflicting accessor #descriptor and defined "+
"#strongType and/or #setter","properties");else if($own(descriptor,"writable"))throw _mkErr(new ERR,"conflicting data #descriptor and defined "+"#strongType and/or #setter","properties");return byKeys?_assignKeys(source,props,val,descriptor,strongType,setter):_assignProps(source,props,val,descriptor,strongType,setter)}assign["properties"]=assignProperties;assign["props"]=assignProperties;function _assignKey(obj,key,val,desc,strongType,setter){var typeCheck;var hasSetter;typeCheck=_mkStrongTypeCheck(strongType);
hasSetter=!!typeCheck||!!setter;desc=_mkDefaultDescriptor(desc,val,hasSetter);if(hasSetter)desc=_setupGetSet(val,desc,typeCheck,setter);return $defProp(obj,key,desc)}function _assignKeys(obj,props,val,desc,strongType,setter){var typeCheck;var hasSetter;switch(props["length"]){case 0:return obj;case 1:return _assignKey(obj,props[0],val,desc,strongType,setter)}typeCheck=_mkStrongTypeCheck(strongType);hasSetter=!!typeCheck||!!setter;desc=_mkDefaultDescriptor(desc,val,hasSetter);props=hasSetter?_setupPropsSetterByKey(props,
val,desc,typeCheck,setter):_setupPropsByKey(props,desc);return $defProps(obj,props)}function _assignProps(obj,props,val,desc,strongType,setter){var typeCheck;var hasSetter;typeCheck=_mkStrongTypeCheck(strongType);hasSetter=!!typeCheck||!!setter;desc=_mkDefaultDescriptor(desc,val,hasSetter);props=hasSetter?_setupPropsSetter(props,val,desc,typeCheck,setter):_setupProps(props,val,desc);return $defProps(obj,props)}var _ACCESSOR_DESCRIPTOR={"enumerable":YES,"configurable":YES};var _ACCESSOR_KEYS=["get",
"set"];var _DATA_DESCRIPTOR={"writable":YES,"enumerable":YES,"configurable":YES};var _DATA_KEYS=["value","writable"];var _DESCRIPTOR_PROPS={"get":YES,"set":YES,"value":YES,"writable":YES,"enumerable":YES,"configurable":YES};var _DESCRIPTOR_KEYS=["configurable","enumerable","get","set","value","writable"];var _EQUAL_SIGN=/=/;var _SETTER_KEYS=["get","set","writable"];function _appendEqualSign(strongType){return _EQUAL_SIGN["test"](strongType)?strongType:strongType+"\x3d"}function _mkDefaultDescriptor(desc,
val,hasSetter){var dflt;if(!desc)if(hasSetter)dflt=$cloneObj(_ACCESSOR_DESCRIPTOR);else{dflt=$cloneObj(_DATA_DESCRIPTOR);dflt["value"]=val}else if(hasSetter||_hasAccessorProp(desc)){dflt=$cloneObj(_ACCESSOR_DESCRIPTOR);if(_hasBoolPropVal(desc,"enumerable"))dflt["enumerable"]=desc["enumerable"];if(_hasBoolPropVal(desc,"configurable"))dflt["configurable"]=desc["configurable"];if(!hasSetter){if(_hasBoolPropVal(desc,"get"))dflt["get"]=desc["get"];if(_hasBoolPropVal(desc,"set"))dflt["set"]=desc["set"]}}else{dflt=
$cloneObj(_DATA_DESCRIPTOR);if(_hasBoolPropVal(desc,"writable"))dflt["writable"]=desc["writable"];if(_hasBoolPropVal(desc,"enumerable"))dflt["enumerable"]=desc["enumerable"];if(_hasBoolPropVal(desc,"configurable"))dflt["configurable"]=desc["configurable"];dflt["value"]=val}return dflt}function _mkStrongTypeCheck(strongType){if(!strongType)return NIL;function strongTypeCheck(newVal){return is(strongType,newVal)}return strongTypeCheck}function _setupDesc(val,dfltVal,dfltDesc,isAccessor){var desc;if(!_isDescriptor(val)){desc=
$cloneObj(dfltDesc);if(!isAccessor)desc["value"]=val}else if(_hasAccessorProp(val)){desc=$cloneObj(val);if(!_hasBoolPropVal(desc,"enumerable"))desc["enumerable"]=dfltDesc["enumerable"];if(!_hasBoolPropVal(desc,"configurable"))desc["configurable"]=dfltDesc["configurable"];if($own(desc,"value"))delete desc["value"]}else if(_hasDataProp(val)){desc=$cloneObj(val);if(!$own(desc,"value"))desc["value"]=dfltVal;if(!_hasBoolPropVal(desc,"writable"))desc["writable"]=isAccessor?_DATA_DESCRIPTOR["writable"]:
dfltDesc["writable"];if(!_hasBoolPropVal(desc,"enumerable"))desc["enumerable"]=dfltDesc["enumerable"];if(!_hasBoolPropVal(desc,"configurable"))desc["configurable"]=dfltDesc["configurable"]}else{desc=$cloneObj(dfltDesc);if(_hasBoolPropVal(val,"enumerable"))desc["enumerable"]=val["enumerable"];if(_hasBoolPropVal(val,"configurable"))desc["configurable"]=val["configurable"]}return desc}function _setupDescSetter(val,dfltVal,dfltDesc,typeCheck,setter){var desc;if(!_isDescriptor(val)){desc=$cloneObj(dfltDesc);
desc=_setupGetSet(val,desc,typeCheck,setter)}else if(_hasAccessorProp(val)){desc=$cloneObj(val);if(!_hasBoolPropVal(desc,"enumerable"))desc["enumerable"]=dfltDesc["enumerable"];if(!_hasBoolPropVal(desc,"configurable"))desc["configurable"]=dfltDesc["configurable"];if($own(desc,"value"))delete desc["value"]}else if($own(val,"writable")){desc=$cloneObj(val);if(!$own(desc,"value"))desc["value"]=dfltVal;if(!_hasBoolPropVal(desc,"enumerable"))desc["enumerable"]=dfltDesc["enumerable"];if(!_hasBoolPropVal(desc,
"configurable"))desc["configurable"]=dfltDesc["configurable"]}else{desc=$cloneObj(dfltDesc);if(_hasBoolPropVal(val,"enumerable"))desc["enumerable"]=val["enumerable"];if(_hasBoolPropVal(val,"configurable"))desc["configurable"]=val["configurable"];val=$own(val,"value")?val["value"]:dfltVal;desc=_setupGetSet(val,desc,typeCheck,setter)}return desc}function _setupGetSet(val,descriptor,typeCheck,setter){descriptor["get"]=function get(){return val};descriptor["set"]=!!typeCheck&&!!setter?function set(newVal){if(!typeCheck(newVal))throw _mkStrongTypeErr(new TYPE_ERR,
"invalid data type for property value: `"+newVal+"`");val=setter(newVal,val)}:!!typeCheck?function set(newVal){if(!typeCheck(newVal))throw _mkStrongTypeErr(new TYPE_ERR,"invalid data type for property value: `"+newVal+"`");val=newVal}:function set(newVal){val=setter(newVal,val)};return descriptor}function _setupProps(props,dfltVal,dfltDesc){var isAccessor;var newProps;var key;newProps={};isAccessor=_hasAccessorProp(dfltDesc);for(key in props)if($own(props,key))newProps[key]=_setupDesc(props[key],
dfltVal,dfltDesc,isAccessor);return newProps}function _setupPropsByKey(keys,dfltDesc){var props;var key;var len;var i;props={};len=keys["length"];i=-1;while(++i<len){key=keys[i];props[key]=$cloneObj(dfltDesc)}return props}function _setupPropsSetter(props,dfltVal,dfltDesc,typeCheck,setter){var newProps;var key;newProps={};for(key in props)if($own(props,key))newProps[key]=_setupDescSetter(props[key],dfltVal,dfltDesc,typeCheck,setter);return newProps}function _setupPropsSetterByKey(keys,dfltVal,dfltDesc,
typeCheck,setter){var props;var desc;var key;var len;var i;props={};len=keys["length"];i=-1;while(++i<len){key=keys[i];desc=$cloneObj(dfltDesc);props[key]=_setupGetSet(dfltVal,desc,typeCheck,setter)}return props}function _descriptorCheckProps(props){var key;var val;for(key in props)if($own(props,key)){val=props[key];if(_isDescriptor(val)&&_isBadDescriptor(val))return NO}return YES}function _hasAccessorProp(src){return $ownsOne(src,_ACCESSOR_KEYS)}function _hasBoolPropVal(src,key){return $own(src,
key)&&$is.bool(src[key])}function _hasDataProp(src){return $ownsOne(src,_DATA_KEYS)}function _hasDescriptorProp(src){return $ownsOne(src,_DESCRIPTOR_KEYS)}function _hasOnlyDescriptorProps(src){var key;for(key in src)if($own(src,key)&&!$own(_DESCRIPTOR_PROPS,key))return NO;return YES}function _hasSkipSetterProp(src){return $ownsOne(src,_SETTER_KEYS)}function _isBadDescriptor(desc){return $ownsOne(desc,_ACCESSOR_KEYS)&&$own(desc,"writable")}function _isDescriptor(val){return $is.obj(val)&&_hasDescriptorProp(val)&&
_hasOnlyDescriptorProps(val)}function _keysCheckProps(props){var len;var i;len=props["length"];i=-1;while(++i<len)if(!props[i])return NO;return YES}function _keysTypeCheckProps(props){var len;var i;len=props["length"];i=-1;while(++i<len)if(!$is.str(props[i]))return NO;return YES}function _strongTypeCheckProps(strongType,props){var key;var val;for(key in props)if($own(props,key)){val=props[key];if(_isDescriptor(val)){if(_hasSkipSetterProp(val)||!$own(val,"value"))continue;val=val["value"]}if(!$is.void(val)&&
!is(strongType,val))return NO}return YES}function _mkStrongTypeErr(err,msg){err["__setter"]=YES;err["setter"]=YES;err["__type"]=YES;err["type"]=YES;err["name"]="TypeError";err["message"]=msg;err["msg"]=msg;return err}var _MK_ERR=$mkErrs("assign");var _mkErr=_MK_ERR.error;var _mkTypeErr=_MK_ERR.typeError;var _mkRangeErr=_MK_ERR.rangeError;return assign}();var vitals=assign;vitals["assign"]=assign;vitals["VERSION"]=VERSION;module.exports=vitals})(this);