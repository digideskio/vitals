/* vitals v5.0.0 (http://vitalsjs.com)
 * Copyright (c) 2014-2017 Adam A Smith <adam@imaginate.life>
 * The Apache License (http://vitalsjs.com/license) */
'use strict';
(function(__THIS,__VOID){var VERSION="5.0.0";var ENV={HAS_EXPORTS:true,HAS_MODULE:true,HAS_GLOBAL:true,HAS_WINDOW:false,HAS_DEFINE:false,HAS_SELF:false,HAS_THIS:false,ROOT:global};var ROOT=ENV.ROOT;var ARR=ROOT["Array"];var ARR_PROTO=ARR["prototype"];var ERR=ROOT["Error"];var FUN=ROOT["Function"];var FUN_PROTO=FUN["prototype"];var NIL=null;var NO=false;var NUM=ROOT["Number"];var NUM_PROTO=NUM["prototype"];var OBJ=ROOT["Object"];var OBJ_PROTO=OBJ["prototype"];var RANGE_ERR=ROOT["RangeError"];var REGX=
ROOT["RegExp"];var REGX_PROTO=REGX["prototype"];var STR=ROOT["String"];var STR_PROTO=STR["prototype"];var TYPE_ERR=ROOT["TypeError"];var VOID=__VOID;var YES=true;var BUFF=ROOT["Buffer"];var CP=require("child_process");var FS=require("fs");var PATH=require("path");var $objStr=function $objStrPrivateScope(){function $objStr(source){return _objToStr["call"](source)}var _objToStr=OBJ_PROTO["toString"];return $objStr}();var $own=function $ownPrivateScope(){function $own(source,key){return _hasOwnProp["call"](source,
key)}var _hasOwnProp=OBJ_PROTO["hasOwnProperty"];return $own}();var $is=function $isPrivateScope(){function isNull(val){return val===NIL}function isUndefined(val){return val===VOID}function isBoolean(val){return typeof val==="boolean"}function isString(val){return typeof val==="string"}function isNonEmptyString(val){return!!val&&typeof val==="string"}function isNumber(val){return typeof val==="number"&&val===val&&isFinite(val)}function isNonZeroNumber(val){return!!val&&typeof val==="number"&&val===
val&&isFinite(val)}function isNan(val){return val!==val}function isObject(val){return!!val&&typeof val==="object"}function isObjectOrFunction(val){if(!val)return false;switch(typeof val){case "object":case "function":return true;default:return false}}function isFunction(val){return!!val&&typeof val==="function"}function isArray(val){return isObject(val)&&$objStr(val)==="[object Array]"}function isRegExp(val){return isObject(val)&&$objStr(val)==="[object RegExp]"}function isDate(val){return isObject(val)&&
$objStr(val)==="[object Date]"}function isError(val){return isObject(val)&&$objStr(val)==="[object Error]"}function isArguments(val){return isObject(val)&&$objStr(val)==="[object Arguments]"}function isArrayOrArguments(val){if(!isObject(val))return false;switch($objStr(val)){case "[object Array]":case "[object Arguments]":return true;default:return false}}var isBuffer=BUFF["isBuffer"];function isDomDocument(val){return isObject(val)&&"nodeType"in val&&val["nodeType"]===9}function isDomElement(val){return isObject(val)&&
"nodeType"in val&&val["nodeType"]===1}function isArrayLike(val){var len;if(isArray(val))return true;len=val["length"];return isNumber(len)&&isWholeNumber(len)&&len>=0}function isEmpty(val){var key;if(!val)return YES;if(typeof val==="function")return val["length"]===0;if(typeof val!=="object")return NO;if($objStr(val)==="[object Array]")return val["length"]===0;for(key in val)if($own(val,key))return NO;return YES}var _EOL=/^(?:cr|lf|crlf)$/i;function isEndOfLine(val){return _EOL["test"](val)}var _FLAGS=
function _FLAGS_PrivateScope(){var pattern;var source;var flags;flags="img";if("sticky"in REGX_PROTO)flags+="y";if("unicode"in REGX_PROTO)flags+="u";source="^(?:"+"[\\+\\-]["+flags+"\\+\\-]*"+"|"+"["+flags+"]*"+")$";pattern=new REGX(source);pattern.FLAGS=flags;pattern.SRC="/"+source+"/";return pattern}();function isRegExpFlags(val){return _FLAGS["test"](val)}isRegExpFlags.FLAGS=_FLAGS.FLAGS;isRegExpFlags.SRC=_FLAGS.SRC;var isExtensible=function $isExtensiblePolyfillPrivateScope(){var objectIsExtensible;
if(!("isExtensible"in OBJ)||!isFunction(OBJ["isExtensible"]))return function isExtensible(src){return false};objectIsExtensible=OBJ["isExtensible"];try{objectIsExtensible(function(){});return objectIsExtensible}catch(e){return function isExtensible(src){return typeof src==="object"&&objectIsExtensible(src)}}}();var isFrozen=function $isFrozenPolyfillPrivateScope(){var objectIsFrozen;if(!("isFrozen"in OBJ)||!isFunction(OBJ["isFrozen"]))return function isFrozen(src){return false};objectIsFrozen=OBJ["isFrozen"];
try{objectIsFrozen(function(){});return objectIsFrozen}catch(e){return function isFrozen(src){return typeof src==="object"&&objectIsFrozen(src)}}}();var isSealed=function $isSealedPolyfillPrivateScope(){var objectIsSealed;if(!("isSealed"in OBJ)||!isFunction(OBJ["isSealed"]))return function isSealed(src){return false};objectIsSealed=OBJ["isSealed"];try{objectIsSealed(function(){});return objectIsSealed}catch(e){return function isSealed(src){return typeof src==="object"&&objectIsSealed(src)}}}();function isWholeNumber(val){return!(val%
1)}function isOddNumber(val){return!!(val%2)}function isEvenNumber(val){return!(val%2)}var _getStats=FS["statSync"];function isDirectory(path){if(!path||!isString(path))return NO;try{return _getStats(path)["isDirectory"]()}catch(e){return NO}}function isFile(path){if(!path||!isString(path))return NO;try{return _getStats(path)["isFile"]()}catch(e){return NO}}var $is={nil:isNull,void:isUndefined,bool:isBoolean,str:isString,_str:isNonEmptyString,num:isNumber,_num:isNonZeroNumber,nan:isNan,obj:isObject,
_obj:isObjectOrFunction,fun:isFunction,arr:isArray,_arr:isArrayOrArguments,args:isArguments,regx:isRegExp,date:isDate,err:isError,buff:isBuffer,doc:isDomDocument,elem:isDomElement,arrish:isArrayLike,empty:isEmpty,eol:isEndOfLine,flags:isRegExpFlags,extend:isExtensible,frozen:isFrozen,sealed:isSealed,whole:isWholeNumber,odd:isOddNumber,even:isEvenNumber,dir:isDirectory,file:isFile};return $is}();function $mkStr(val){return $is.str(val)?val:$is.regx(val)?val["toString"]():STR(val)}var $print=function $printPrivateScope(){function $print(val,
depth){depth=depth||0;return $is._obj(val)?$is.regx(val)?val["toString"]():_mapToStr(val,depth):_primToStr(val)}var _INDENT="    ";var _MAP_TYPE=/^\[object ([a-zA-Z0-9_\$]+)\]$/;var _LAST_SEP=/,\n$/;function _emptyHashMap(val){var key;for(key in val)if($own(val,key))return false;return true}function _escStr(val){val=val["replace"](/\\/g,"\\\\");val=val["replace"](/\n/g,"\\n");val=val["replace"](/\r/g,"\\r");val=val["replace"](/\t/g,"\\t");val=val["replace"](/\v/g,"\\v");val=val["replace"](/\0/g,"\\0");
val=val["replace"](/\b/g,"\\b");val=val["replace"](/\f/g,"\\f");return val}function _getMapType(val){var type;if($is.fun(val)){type="Function";if(val["name"])type+="("+val["name"]+")";return type}type=$objStr(val);return _MAP_TYPE["test"](type)?type["replace"](_MAP_TYPE,"$1"):"UnknownObjectType"}function _mkIndent(depth){var indent;if(indent<1)return"";indent="";while(depth--)indent+=_INDENT;return indent}function _primToStr(val){if($is.bool(val))return val?"true":"false";if($is.nil(val))return"null";
if($is.void(val))return"undefined";if($is.nan(val))return"NaN";if($is.str(val))return'"'+_escStr(val)+'"';return $mkStr(val)}function _arrToStr(val,depth){var result;var indent;var len;var i;len=val["length"];if(len<1)return"[]";indent=_mkIndent(depth);depth+=1;result="[\n";i=-1;while(++i<len){result+=indent+i+": ";result+=$print(val[i],depth)+",\n"}result=result["replace"](_LAST_SEP,"\n");return result+"]"}function _keyToStr(key){return"'"+$mkStr(key)+"'"}function _mapToStr(val,depth){var result;
result=_getMapType(val)+": ";result+=$is._arr(val)?_arrToStr(val,depth):_ownToStr(val,depth);return result}function _ownToStr(val,depth){var result;var indent;var key;if(_emptyHashMap(val))return"{}";indent=_mkIndent(depth);depth+=1;result="{\n";for(key in val)if($own(val,key)){result+=indent;result+=_keyToStr(key)+": ";result+=$print(val[key],depth)+",\n"}result=result["replace"](_LAST_SEP,"\n");return result+"}"}return $print}();var $mkObj=function $mkObjPrivateScope(){var _create=function _createPrivateScope(){if("create"in
OBJ&&$is.fun(OBJ["create"]))return OBJ["create"];function _Obj(){}function create(proto){var obj;_Obj["prototype"]=proto;obj=new _Obj;_Obj["prototype"]=NIL;return obj}return create}();function $mkObj(proto){return _create(proto)}return $mkObj}();var $mkErrs=function $mkErrsPrivateScope(){var _OPEN_HASH=/^#/;var _OPEN_VITALS=/^vitals\./;var _STRICT=/^\!/;function _mkOptions(opts){var result;var len;var i;result="";len=opts["length"];i=-1;while(++i<len)result+="\n- `"+$print(opts[i])+"`";return result}
function _prepSuper(name){if($is.void(name))return"newVitals";name=name["replace"](_OPEN_VITALS,"");return"vitals."+name}function _prepParam(name){if(!name)return"";if(_STRICT["test"](name))return name["replace"](_STRICT,"");name=name["replace"](_OPEN_HASH,"");return"#"+name}function _setErrorProps(err,name,msg,val){err["__vitals"]=true;err["vitals"]=true;err["name"]=name;switch(name){case "TypeError":err["__type"]=true;err["type"]=true;break;case "RangeError":err["__range"]=true;err["range"]=true;
break}err["message"]=msg;err["msg"]=msg;if(arguments["length"]>3){err["value"]=val;err["val"]=val}return err}function $mkErrs(superMethod){var MK_ERR={error:error,typeError:typeError,rangeError:rangeError};var _SUPER=_prepSuper(superMethod);function _prepMethod(method){method=method?_SUPER:_SUPER+"."+method;return"`"+method+"`"}function error(err,msg,method){method=_prepMethod(method);msg+=" for "+method+" call";return _setErrorProps(err,"Error",msg)}function typeError(err,paramName,paramVal,validTypes,
methodName){var method;var param;var msg;var val;method=_prepMethod(methodName);param=_prepParam(paramName);val=$print(paramVal);msg="invalid "+param+" data type for "+method+" call\n";msg+="valid data types: `"+validTypes+"`\n";msg+="actual "+param+" value: `"+val+"`";return _setErrorProps(err,"TypeError",msg,paramVal)}function rangeError(err,paramName,validRange,methodName){var method;var param;var msg;method=_prepMethod(methodName);param=_prepParam(paramName);msg="out-of-range "+param+" for "+
method+" call";if($is.str(validRange))msg+="\nvalid range: `"+validRange+"`";else if($is.arr(validRange))msg+="\nvalid options:"+_mkOptions(validRange);return _setErrorProps(err,"RangeError",msg)}return MK_ERR}return $mkErrs}();var $strIncl=function $strInclPrivateScope(){var $strIncl="includes"in STR_PROTO&&$is.fun(STR_PROTO["includes"])?function $strIncl(src,val){return src["includes"](val)}:function $strIncl(src,val){return src["indexOf"](val)!==-1};return $strIncl}();function $cleanpath(path){path["replace"](/\\+/g,
"/");return path["replace"](/\/\/+/g,"/")}var $resolve=function $resolvePrivateScope(){function _mkPaths(cwd,paths){var result;var path;var len;var i;result=[cwd];len=paths["length"];i=-1;while(++i<len){path=paths[i];if($is._str(path))result["push"](path)}return result}var _resolve=PATH["resolve"];function _resolvePaths(cwd,paths){paths=_mkPaths(cwd,paths);return paths["length"]>1?_resolve["apply"](NIL,paths):$cleanpath(cwd)}function $resolve(path){var cwd;cwd=process["cwd"]();switch(arguments["length"]){case 0:return $cleanpath(cwd);
case 1:if($is.void(path))return $cleanpath(cwd);path=$is.str(path)?_resolve(cwd,path):_resolvePaths(cwd,path);return $cleanpath(path);default:path=_resolvePaths(cwd,arguments);return $cleanpath(path)}}return $resolve}();function $match(src,patt){if($is.regx(patt))return patt["test"](src);patt=$mkStr(patt);return!src?!patt:!patt?YES:$strIncl(src,patt)}var $getFlags=function $getFlagsPrivateScope(){var _GLOBAL=/g/;var _FLAGS=function _FLAGS_PrivateScope(){var flags;flags={};flags["ignoreCase"]="i";
flags["multiline"]="m";flags["global"]="g";if("sticky"in REGX_PROTO)flags["sticky"]="y";if("unicode"in REGX_PROTO)flags["unicode"]="u";return flags}();function $getFlags(src,forceGlobal){var flags;var key;flags="";for(key in _FLAGS)if($own(_FLAGS,key)&&src[key])flags+=_FLAGS[key];return!!forceGlobal&&!_GLOBAL["test"](flags)?flags+"g":flags}return $getFlags}();var $cloneRegx=function $cloneRegxPrivateScope(){var _escape=function _escapePrivateScope(){return/\n/["source"]!=="\\n"?function _escape(src){return src["replace"](/\\/g,
"\\\\")}:function _escape(src){return src}}();function $cloneRegx(src,flags){var source;source=_escape(src["source"]);return flags?new REGX(source,flags):new REGX(source)}return $cloneRegx}();var $fixEol=function $fixEolPrivateScope(){var _EOLS={"CRLF":function fixEolCRLF(src){return src["replace"](/\r?\n|\r\n?/g,"\r\n")},"CR":function fixEolCR(src){return src["replace"](/\r?\n/g,"\r")},"LF":function fixEolLF(src){return src["replace"](/\r\n?/g,"\n")}};function $fixEol(src,eol){return _EOLS[eol](src)}
return $fixEol}();function $hasOpt(opts,opt){return $own(opts,opt)&&!$is.void(opts[opt])}function $escRegx(source){return source["replace"](/[\\^$.*+?|(){}[\]]/g,"\\$\x26")}var $readDir=FS["readdirSync"];var $pathname=function $pathnamePrivateScope(){var _DIRNAME=/^.*[\/\\]/;var _END_SLASH=/[\/\\]$/;function $pathname(path){path=path["replace"](_END_SLASH,"");return path["replace"](_DIRNAME,"")}return $pathname}();var $addSlash=function $addSlashPrivateScope(){var _END_SLASH=/\/$/;function $addSlash(path){return _END_SLASH["test"](path)?
path:path+"/"}return $addSlash}();function $cloneObj(obj){var clone;var key;clone={};for(key in obj)if($own(obj,key))clone[key]=obj[key];return clone}var $readFile=FS["readFileSync"];var get=function getPrivateScope(){function get(source,val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined");case 1:if($is.str(source))throw _mkErr(new ERR,"no #val defined");if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function|!Array|!Arguments|string");return $is._arr(source)?
_allIndexes(source):_allKeys(source);default:if($is.str(source))return $is.regx(val)?_strVals(source,val):_strIndexes(source,val);if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function|!Array|!Arguments|string");return $is._arr(source)?_byValIndexes(source,val):$is.regx(val)?_byKeyObjVals(source,val):_byValKeys(source,val)}}function getKeys(source,val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","keys");case 1:if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,
"source",source,"!Object|!Function","keys");return _allKeys(source);default:if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function","keys");return $is.regx(val)?_byKeyKeys(source,val):_byValKeys(source,val)}}get["keys"]=getKeys;function getKeysByKey(source,key){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","keys.byKey");case 1:throw _mkErr(new ERR,"no #key defined","keys.byKey");default:if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,
"source",source,"!Object|!Function","keys.byKey");return _byKeyKeys(source,key)}}get["keys"]["byKey"]=getKeysByKey;function getKeysByValue(source,val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","keys.byValue");case 1:throw _mkErr(new ERR,"no #val defined","keys.byValue");default:if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function","keys.byValue");return _byValKeys(source,val)}}get["keys"]["byValue"]=getKeysByValue;get["keys"]["byVal"]=
getKeysByValue;function getIndexes(source,val){var len;switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","indexes");case 1:if($is.str(source))throw _mkErr(new ERR,"no #val defined","indexes");if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Array|!Arguments|!Object|!Function|string","indexes");if(!$is.arrish(source))throw _mkErr(new ERR,"#source failed `array-like` test (#source."+"length must be a whole `number` that is `0` or more)","indexes");return _allIndexes(source);
default:if($is.str(source))return _strIndexes(source,val);if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Array|!Arguments|!Object|!Function|string","indexes");if(!$is.arrish(source))throw _mkErr(new ERR,"#source failed `array-like` test (#source."+"length must be a whole `number` that is `0` or more)","indexes");return _byValIndexes(source,val)}}get["indexes"]=getIndexes;get["ii"]=getIndexes;function getValues(source,val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,
"no #source defined","values");case 1:if($is.str(source))throw _mkErr(new ERR,"no #val defined","values");if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function|string","values");return _allObjVals(source);default:if($is.str(source))return _strVals(source,val);if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function|string","values");return _byKeyObjVals(source,val)}}get["values"]=getValues;get["vals"]=getValues;function getFile(path,opts){switch(arguments["length"]){case 0:throw _mkErr(new ERR,
"no #path defined","file");case 1:opts=$cloneObj(_DFLT_FILE_OPTS);break;default:if($is.void(opts)||$is.nil(opts)){opts=$cloneObj(_DFLT_FILE_OPTS);break}if($is.bool(opts)){if(opts){opts=$cloneObj(_DFLT_FILE_OPTS);opts["buffer"]=YES}else{opts=$cloneObj(_DFLT_FILE_OPTS);opts["buffer"]=NO}break}if(!$is.obj(opts))throw _mkTypeErr(new TYPE_ERR,"opts",opts,"(?Object|?boolean)\x3d","file");opts=$cloneObj(opts);if(!$hasOpt(opts,"buffer"))opts["buffer"]=_DFLT_FILE_OPTS["buffer"];else if(!$is.bool(opts["buffer"]))throw _mkTypeErr(new TYPE_ERR,
"opts.buffer",opts["buffer"],"boolean\x3d","file");if(!$hasOpt(opts,"encode"))opts["encode"]=VOID;else if($is.str(opts["encode"])){if(!opts["encode"])throw _mkErr(new ERR,"invalid empty #opts.encode `string`","file");}else if(!$is.nil(opts["encode"]))throw _mkTypeErr(new TYPE_ERR,"opts.encode",opts["encode"],"?string\x3d","file");if(!$hasOpt(opts,"encoding"))opts["encoding"]=$is.void(opts["encode"])?_DFLT_FILE_OPTS["encoding"]:opts["encode"];else if($is.str(opts["encoding"])){if(!opts["encoding"])throw _mkErr(new ERR,
"invalid empty #opts.encoding `string`","file");}else if(!$is.nil(opts["encoding"]))throw _mkTypeErr(new TYPE_ERR,"opts.encoding",opts["encoding"],"?string\x3d","file");if(!$hasOpt(opts,"eol"))opts["eol"]=_DFLT_FILE_OPTS["eol"];else if($is.str(opts["eol"])){if(!$is.eol(opts["eol"]))throw _mkRangeErr(new RANGE_ERR,"opts.eol",["LF","CR","CRLF"],"file");opts["eol"]=opts["eol"]["toUpperCase"]()}else if(!$is.nil(opts["eol"]))throw _mkTypeErr(new TYPE_ERR,"opts.eol",opts["eol"],"?string\x3d","file");}if(!$is.str(path))throw _mkTypeErr(new TYPE_ERR,
"path",path,"string","file");else if(!path)throw _mkErr(new ERR,"invalid empty #path `string`","file");else if(!$is.file(path))throw _mkErr(new ERR,"invalid #path file path `"+path+"`","file");return _getFile(path,opts)}get["file"]=getFile;function getDirectoryPaths(source,opts){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","directoryPaths");case 1:opts=$cloneObj(_DFLT_DIRS_OPTS);break;default:if($is.void(opts)||$is.nil(opts)){opts=$cloneObj(_DFLT_DIRS_OPTS);break}if($is.bool(opts)){if(opts){opts=
$cloneObj(_DFLT_DIRS_OPTS);opts["deep"]=YES}else{opts=$cloneObj(_DFLT_DIRS_OPTS);opts["deep"]=NO}break}if(!$is.obj(opts))throw _mkTypeErr(new TYPE_ERR,"opts",opts,"(?Object|?boolean)\x3d","directoryPaths");opts=$cloneObj(opts);if(!$hasOpt(opts,"recursive"))opts["recursive"]=VOID;else if(!$is.bool(opts["recursive"]))throw _mkTypeErr(new TYPE_ERR,"opts.recursive",opts["recursive"],"boolean\x3d","directoryPaths");if(!$hasOpt(opts,"deep"))opts["deep"]=$is.bool(opts["recursive"])?opts["recursive"]:_DFLT_DIRS_OPTS["deep"];
else if(!$is.bool(opts["deep"]))throw _mkTypeErr(new TYPE_ERR,"opts.deep",opts["deep"],"boolean\x3d","directoryPaths");if(!$hasOpt(opts,"basepath"))opts["basepath"]=VOID;else if(!$is.bool(opts["basepath"]))throw _mkTypeErr(new TYPE_ERR,"opts.basepath",opts["basepath"],"boolean\x3d","directoryPaths");if(!$hasOpt(opts,"base"))opts["base"]=$is.bool(opts["basepath"])?opts["basepath"]:_DFLT_DIRS_OPTS["base"];else if(!$is.bool(opts["base"]))throw _mkTypeErr(new TYPE_ERR,"opts.base",opts["base"],"boolean\x3d",
"directoryPaths");if(!$hasOpt(opts,"absolute"))opts["absolute"]=VOID;else if(!$is.bool(opts["absolute"]))throw _mkTypeErr(new TYPE_ERR,"opts.absolute",opts["absolute"],"boolean\x3d","directoryPaths");if(!$hasOpt(opts,"abs"))opts["abs"]=$is.bool(opts["absolute"])?opts["absolute"]:_DFLT_DIRS_OPTS["abs"];else if(!$is.bool(opts["abs"]))throw _mkTypeErr(new TYPE_ERR,"opts.abs",opts["abs"],"boolean\x3d","directoryPaths");if(!$hasOpt(opts,"wildcard"))opts["wildcard"]=VOID;else if(!$is.bool(opts["wildcard"]))throw _mkTypeErr(new TYPE_ERR,
"opts.wildcard",opts["wildcard"],"boolean\x3d","directoryPaths");if(!$hasOpt(opts,"glob"))opts["glob"]=$is.bool(opts["wildcard"])?opts["wildcard"]:_DFLT_DIRS_OPTS["glob"];else if(!$is.bool(opts["glob"]))throw _mkTypeErr(new TYPE_ERR,"opts.glob",opts["glob"],"boolean\x3d","directoryPaths");if(!$hasOpt(opts,"extendValid"))opts["extendValid"]=VOID;else if(!$is.bool(opts["extendValid"]))throw _mkTypeErr(new TYPE_ERR,"opts.extendValid",opts["extendValid"],"boolean\x3d","directoryPaths");if(!$hasOpt(opts,
"extendValidDirs"))opts["extendValidDirs"]=$is.bool(opts["extendValid"])?opts["extendValid"]:_DFLT_DIRS_OPTS["extendValidDirs"];else if(!$is.bool(opts["extendValidDirs"]))throw _mkTypeErr(new TYPE_ERR,"opts.extendValidDirs",opts["extendValidDirs"],"boolean\x3d","directoryPaths");if(!$hasOpt(opts,"extendInvalid"))opts["extendInvalid"]=VOID;else if(!$is.bool(opts["extendInvalid"]))throw _mkTypeErr(new TYPE_ERR,"opts.extendInvalid",opts["extendInvalid"],"boolean\x3d","directoryPaths");if(!$hasOpt(opts,
"extendInvalidDirs"))opts["extendInvalidDirs"]=$is.bool(opts["extendInvalid"])?opts["extendInvalid"]:_DFLT_DIRS_OPTS["extendInvalidDirs"];else if(!$is.bool(opts["extendInvalidDirs"]))throw _mkTypeErr(new TYPE_ERR,"opts.extendInvalidDirs",opts["extendInvalidDirs"],"boolean\x3d","directoryPaths");if(!$hasOpt(opts,"valid"))opts["valid"]=VOID;else if(!_isPattOpt(opts["valid"]))throw _mkTypeErr(new TYPE_ERR,"opts.valid",opts["valid"],"(?RegExp|?Array\x3cstring\x3e|?string|?function("+"string\x3d, string\x3d, string\x3d): *)\x3d",
"directoryPaths");if(!$hasOpt(opts,"validDirs"))if(!$is.void(opts["valid"]))opts["validDirs"]=opts["valid"];else{opts["validDirs"]=_DFLT_DIRS_OPTS["validDirs"];opts["extendValidDirs"]=NO}else if(!_isPattOpt(opts["validDirs"]))throw _mkTypeErr(new TYPE_ERR,"opts.validDirs",opts["validDirs"],"(?RegExp|?Array\x3cstring\x3e|?string|?function("+"string\x3d, string\x3d, string\x3d): *)\x3d","directoryPaths");if(!$hasOpt(opts,"invalid"))opts["invalid"]=VOID;else if(!_isPattOpt(opts["invalid"]))throw _mkTypeErr(new TYPE_ERR,
"opts.invalid",opts["invalid"],"(?RegExp|?Array\x3cstring\x3e|?string|?function("+"string\x3d, string\x3d, string\x3d): *)\x3d","directoryPaths");if(!$hasOpt(opts,"invalidDirs"))if(!$is.void(opts["invalid"]))opts["invalidDirs"]=opts["invalid"];else{opts["invalidDirs"]=_DFLT_DIRS_OPTS["invalidDirs"];opts["extendInvalidDirs"]=NO}else if(!_isPattOpt(opts["invalidDirs"]))throw _mkTypeErr(new TYPE_ERR,"opts.invalidDirs",opts["invalidDirs"],"(?RegExp|?Array\x3cstring\x3e|?string|?function"+"(string\x3d, string\x3d, string\x3d): *)\x3d",
"directoryPaths");}if(!$is.str(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"string","directoryPaths");else if(!source)throw _mkErr(new ERR,"invalid empty #source `string`","directoryPaths");else if(!$is.dir(source))throw _mkErr(new ERR,"invalid #source directory path `"+source+"`","directoryPaths");return _getDirs(source,opts)}get["directoryPaths"]=getDirectoryPaths;get["directorypaths"]=getDirectoryPaths;get["directories"]=getDirectoryPaths;get["dirPaths"]=getDirectoryPaths;get["dirpaths"]=
getDirectoryPaths;get["dirs"]=getDirectoryPaths;function getFilePaths(source,opts){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","filePaths");case 1:opts=$cloneObj(_DFLT_FILES_OPTS);break;default:if($is.void(opts)||$is.nil(opts)){opts=$cloneObj(_DFLT_FILES_OPTS);break}if($is.bool(opts)){if(opts){opts=$cloneObj(_DFLT_FILES_OPTS);opts["deep"]=YES}else{opts=$cloneObj(_DFLT_FILES_OPTS);opts["deep"]=NO}break}if(!$is.obj(opts))throw _mkTypeErr(new TYPE_ERR,"opts",opts,"(?Object|?boolean)\x3d",
"filePaths");opts=$cloneObj(opts);if(!$hasOpt(opts,"recursive"))opts["recursive"]=VOID;else if(!$is.bool(opts["recursive"]))throw _mkTypeErr(new TYPE_ERR,"opts.recursive",opts["recursive"],"boolean\x3d","filePaths");if(!$hasOpt(opts,"deep"))opts["deep"]=$is.bool(opts["recursive"])?opts["recursive"]:_DFLT_FILES_OPTS["deep"];else if(!$is.bool(opts["deep"]))throw _mkTypeErr(new TYPE_ERR,"opts.deep",opts["deep"],"boolean\x3d","filePaths");if(!$hasOpt(opts,"basepath"))opts["basepath"]=VOID;else if(!$is.bool(opts["basepath"]))throw _mkTypeErr(new TYPE_ERR,
"opts.basepath",opts["basepath"],"boolean\x3d","filePaths");if(!$hasOpt(opts,"base"))opts["base"]=$is.bool(opts["basepath"])?opts["basepath"]:_DFLT_FILES_OPTS["base"];else if(!$is.bool(opts["base"]))throw _mkTypeErr(new TYPE_ERR,"opts.base",opts["base"],"boolean\x3d","filePaths");if(!$hasOpt(opts,"absolute"))opts["absolute"]=VOID;else if(!$is.bool(opts["absolute"]))throw _mkTypeErr(new TYPE_ERR,"opts.absolute",opts["absolute"],"boolean\x3d","filePaths");if(!$hasOpt(opts,"abs"))opts["abs"]=$is.bool(opts["absolute"])?
opts["absolute"]:_DFLT_FILES_OPTS["abs"];else if(!$is.bool(opts["abs"]))throw _mkTypeErr(new TYPE_ERR,"opts.abs",opts["abs"],"boolean\x3d","filePaths");if(!$hasOpt(opts,"wildcard"))opts["wildcard"]=VOID;else if(!$is.bool(opts["wildcard"]))throw _mkTypeErr(new TYPE_ERR,"opts.wildcard",opts["wildcard"],"boolean\x3d","filePaths");if(!$hasOpt(opts,"glob"))opts["glob"]=$is.bool(opts["wildcard"])?opts["wildcard"]:_DFLT_FILES_OPTS["glob"];else if(!$is.bool(opts["glob"]))throw _mkTypeErr(new TYPE_ERR,"opts.glob",
opts["glob"],"boolean\x3d","filePaths");if(!$hasOpt(opts,"extendValid"))opts["extendValid"]=_DFLT_FILES_OPTS["extendValid"];else if(!$is.bool(opts["extendValid"]))throw _mkTypeErr(new TYPE_ERR,"opts.extendValid",opts["extendValid"],"boolean\x3d","filePaths");if(!$hasOpt(opts,"extendInvalid"))opts["extendInvalid"]=_DFLT_FILES_OPTS["extendInvalid"];else if(!$is.bool(opts["extendInvalid"]))throw _mkTypeErr(new TYPE_ERR,"opts.extendInvalid",opts["extendInvalid"],"boolean\x3d","filePaths");if(!$hasOpt(opts,
"extendValidDirs"))opts["extendValidDirs"]=_DFLT_FILES_OPTS["extendValidDirs"];else if(!$is.bool(opts["extendValidDirs"]))throw _mkTypeErr(new TYPE_ERR,"opts.extendValidDirs",opts["extendValidDirs"],"boolean\x3d","filePaths");if(!$hasOpt(opts,"extendInvalidDirs"))opts["extendInvalidDirs"]=_DFLT_FILES_OPTS["extendInvalidDirs"];else if(!$is.bool(opts["extendInvalidDirs"]))throw _mkTypeErr(new TYPE_ERR,"opts.extendInvalidDirs",opts["extendInvalidDirs"],"boolean\x3d","filePaths");if(!$hasOpt(opts,"extendValidExts"))opts["extendValidExts"]=
_DFLT_FILES_OPTS["extendValidExts"];else if(!$is.bool(opts["extendValidExts"]))throw _mkTypeErr(new TYPE_ERR,"opts.extendValidExts",opts["extendValidExts"],"boolean\x3d","filePaths");if(!$hasOpt(opts,"extendInvalidExts"))opts["extendInvalidExts"]=_DFLT_FILES_OPTS["extendInvalidExts"];else if(!$is.bool(opts["extendInvalidExts"]))throw _mkTypeErr(new TYPE_ERR,"opts.extendInvalidExts",opts["extendInvalidExts"],"boolean\x3d","filePaths");if(!$hasOpt(opts,"extendValidFiles"))opts["extendValidFiles"]=_DFLT_FILES_OPTS["extendValidFiles"];
else if(!$is.bool(opts["extendValidFiles"]))throw _mkTypeErr(new TYPE_ERR,"opts.extendValidFiles",opts["extendValidFiles"],"boolean\x3d","filePaths");if(!$hasOpt(opts,"extendInvalidFiles"))opts["extendInvalidFiles"]=_DFLT_FILES_OPTS["extendInvalidFiles"];else if(!$is.bool(opts["extendInvalidFiles"]))throw _mkTypeErr(new TYPE_ERR,"opts.extendInvalidFiles",opts["extendInvalidFiles"],"boolean\x3d","filePaths");if(!$hasOpt(opts,"valid")){opts["valid"]=_DFLT_FILES_OPTS["valid"];opts["extendValid"]=NO}else if(!_isPattOpt(opts["valid"]))throw _mkTypeErr(new TYPE_ERR,
"opts.valid",opts["valid"],"(?RegExp|?Array\x3cstring\x3e|?string|?function("+"string\x3d, string\x3d, string\x3d): *)\x3d","filePaths");if(!$hasOpt(opts,"invalid")){opts["invalid"]=_DFLT_FILES_OPTS["invalid"];opts["extendInvalid"]=NO}else if(!_isPattOpt(opts["invalid"]))throw _mkTypeErr(new TYPE_ERR,"opts.invalid",opts["invalid"],"(?RegExp|?Array\x3cstring\x3e|?string|?function("+"string\x3d, string\x3d, string\x3d): *)\x3d","filePaths");if(!$hasOpt(opts,"validDirs")){opts["validDirs"]=_DFLT_FILES_OPTS["validDirs"];
opts["extendValidDirs"]=NO}else if(!_isPattOpt(opts["validDirs"]))throw _mkTypeErr(new TYPE_ERR,"opts.validDirs",opts["validDirs"],"(?RegExp|?Array\x3cstring\x3e|?string|?function("+"string\x3d, string\x3d, string\x3d): *)\x3d","filePaths");if(!$hasOpt(opts,"invalidDirs")){opts["invalidDirs"]=_DFLT_FILES_OPTS["invalidDirs"];opts["extendInvalidDirs"]=NO}else if(!_isPattOpt(opts["invalidDirs"]))throw _mkTypeErr(new TYPE_ERR,"opts.invalidDirs",opts["invalidDirs"],"(?RegExp|?Array\x3cstring\x3e|?string|?function"+
"(string\x3d, string\x3d, string\x3d): *)\x3d","filePaths");if(!$hasOpt(opts,"validExts")){opts["validExts"]=_DFLT_FILES_OPTS["validExts"];opts["extendValidExts"]=NO}else if(!_isExtOpt(opts["validExts"]))throw _mkTypeErr(new TYPE_ERR,"opts.validExts",opts["validExts"],"(?RegExp|?Array\x3cstring\x3e|?string)\x3d","filePaths");if(!$hasOpt(opts,"invalidExts")){opts["invalidExts"]=_DFLT_FILES_OPTS["invalidExts"];opts["extendInvalidExts"]=NO}else if(!_isExtOpt(opts["invalidExts"]))throw _mkTypeErr(new TYPE_ERR,
"opts.invalidExts",opts["invalidExts"],"(?RegExp|?Array\x3cstring\x3e|?string)\x3d","filePaths");if(!$hasOpt(opts,"validFiles")){opts["validFiles"]=_DFLT_FILES_OPTS["validFiles"];opts["extendValidFiles"]=NO}else if(!_isPattOpt(opts["validFiles"]))throw _mkTypeErr(new TYPE_ERR,"opts.validFiles",opts["validFiles"],"(?RegExp|?Array\x3cstring\x3e|?string|?function("+"string\x3d, string\x3d, string\x3d): *)\x3d","filePaths");if(!$hasOpt(opts,"invalidFiles")){opts["invalidFiles"]=_DFLT_FILES_OPTS["invalidFiles"];
opts["extendInvalidFiles"]=NO}else if(!_isPattOpt(opts["invalidFiles"]))throw _mkTypeErr(new TYPE_ERR,"opts.invalidFiles",opts["invalidFiles"],"(?RegExp|?Array\x3cstring\x3e|?string|"+"?function(string\x3d, string\x3d, string\x3d): *)\x3d","filePaths");}if(!$is.str(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"string","filePaths");else if(!source)throw _mkErr(new ERR,"invalid empty #source `string`","filePaths");else if(!$is.dir(source))throw _mkErr(new ERR,"invalid #source directory path `"+
source+"`","filePaths");return _getFiles(source,opts)}get["filePaths"]=getFilePaths;get["filepaths"]=getFilePaths;get["files"]=getFilePaths;function _allKeys(src){var keys;var key;keys=[];for(key in src)if($own(src,key))keys["push"](key);return keys}function _byKeyKeys(src,pattern){var keys;var key;if(!$is.regx(pattern))pattern=$mkStr(pattern);keys=[];for(key in src)if($own(src,key)&&$match(key,pattern))keys["push"](key);return keys}function _byValKeys(src,val){var keys;var key;keys=[];for(key in src)if($own(src,
key)&&src[key]===val)keys["push"](key);return keys}function _allObjVals(src){var vals;var key;vals=[];for(key in src)if($own(src,key))vals["push"](src[key]);return vals}function _byKeyObjVals(src,pattern){var vals;var key;if(!$is.regx(pattern))pattern=$mkStr(pattern);vals=[];for(key in src)if($own(src,key)&&$match(key,pattern))vals["push"](src[key]);return vals}function _allIndexes(src){var indexes;var len;var i;len=src["length"];indexes=new ARR(len);i=-1;while(++i<len)indexes[i]=i;return indexes}
function _byValIndexes(src,val){var indexes;var len;var i;indexes=[];len=src["length"];i=-1;while(++i<len)if(src[i]===val)indexes["push"](i);return indexes}function _strIndexes(src,pattern){return $is.regx(pattern)?_byRegexStrIndexes(src,pattern):_byStrStrIndexes(src,pattern)}function _strVals(src,pattern){return $is.regx(pattern)?_byRegexStrVals(src,pattern):_byStrStrVals(src,pattern)}function _byRegexStrIndexes(src,patt){var indexes;var result;var flags;flags=$getFlags(patt,YES);patt=$cloneRegx(patt,
flags);indexes=[];result=patt["exec"](src);while(result){indexes["push"](result["index"]);result=patt["exec"](src)}return indexes}function _byStrStrIndexes(src,pattern){var indexes;var i;pattern=$mkStr(pattern);indexes=[];i=src["indexOf"](pattern);while(i!==-1){indexes["push"](i);i=src["indexOf"](pattern,++i)}return indexes}function _byRegexStrVals(src,patt){var result;var flags;var vals;flags=$getFlags(patt,YES);patt=$cloneRegx(patt,flags);vals=[];result=patt["exec"](src);while(result){vals["push"](result[0]);
result=patt["exec"](src)}return vals}function _byStrStrVals(src,pattern){var vals;var i;pattern=$mkStr(pattern);vals=[];i=src["indexOf"](pattern);while(i!==-1){vals["push"](pattern);i=src["indexOf"](pattern,++i)}return vals}function _getFile(src,opts){var contents;src=$resolve(src);if(opts["buffer"])return $readFile(src);contents=$readFile(src,opts["encoding"]);if(opts["eol"])contents=$fixEol(contents,opts["eol"]);return contents}function _getDirs(src,opts){var dirs;dirs=new _Dirs(src,opts);return dirs.main()}
function _getFiles(src,opts){var files;files=new _Files(src,opts);return files.main()}var _DFLT_FILE_OPTS={"eol":NIL,"buffer":NO,"encoding":"utf8"};var _DFLT_DIRS_OPTS={"abs":NO,"deep":NO,"base":NO,"glob":YES,"validDirs":NIL,"invalidDirs":/^(?:\.git|\.bak|\.backup|node_modules|vendor|\.?te?mp|\.?logs?|.*~)$/,"extendValidDirs":NO,"extendInvalidDirs":NO};var _DFLT_FILES_OPTS={"abs":NO,"deep":NO,"base":NO,"glob":YES,"valid":NIL,"invalid":NIL,"validDirs":NIL,"invalidDirs":/^(?:\.git|\.bak|\.backup|node_modules|vendor|\.?te?mp|\.?logs?|.*~)$/,
"validExts":NIL,"invalidExts":NIL,"validFiles":NIL,"invalidFiles":NIL,"extendValid":NO,"extendInvalid":NO,"extendValidDirs":NO,"extendInvalidDirs":NO,"extendValidExts":NO,"extendInvalidExts":NO,"extendValidFiles":NO,"extendInvalidFiles":NO};var _isExtOpt=function _isExtOptPrivateScope(){var _EXT_PATT=/^\.?[a-zA-Z0-9\*]+(?:\.[a-zA-Z0-9\*]+)*$/;var _EXTS_PATT=/^\|?\.?[a-zA-Z0-9\*]+(?:\.[a-zA-Z0-9\*]+)*(?:\|\.?[a-zA-Z0-9\*]+(?:\.[a-zA-Z0-9\*]+)*)*\|?$/;function _isExtArr(vals){var val;var len;var i;
len=vals["length"];i=-1;while(++i<len){val=vals[i];if(!$is.str(val)||!_EXT_PATT["test"](val))return NO}return YES}function isExtOpt(val){return $is.nil(val)||$is.regx(val)?YES:$is.str(val)?_EXTS_PATT["test"](val):$is.arr(val)?_isExtArr(val):NO}return isExtOpt}();var _isPattOpt=function _isPattOptPrivateScope(){function _isStrArr(vals){var val;var len;var i;len=vals["length"];i=-1;while(++i<len){val=vals[i];if(!$is.str(val))return NO}return YES}function isPattOpt(val){return $is.nil(val)||$is.str(val)||
$is.regx(val)||$is.fun(val)?YES:$is.arr(val)?_isStrArr(val):NO}return isPattOpt}();function _Dirs(source,opts){var base;var path;var src;var abs;source=$cleanpath(source);src=$resolve(source);base=opts["base"];abs=opts["abs"];path=abs?src:source;this.SOURCE=source;this.SRC=src;this.BASE=base;this.ABS=abs;this.PATH=$addSlash(path);this.isValidDir=_mkValidTests(source,_DFLT_DIRS_OPTS,opts,"Dirs");this.trees=[];this.paths=[]}_Dirs["prototype"]=$mkObj(NIL);_Dirs["prototype"]["constructor"]=_Dirs;_Dirs["prototype"].main=
function main(){this.getDirs(this.SRC,"");if(this.DEEP)this.getDirsDeep(this.SRC);return this.BASE?this.paths:this.trees};_Dirs["prototype"].getDirs=function getDirs(src,tree){var trees;var paths;var names;var name;var len;var i;var SRC=$addSlash(src);var TREE=tree&&$addSlash(tree);var PATH=this.PATH;var isValidDir=this.isValidDir;trees=this.trees;paths=this.paths;names=$readDir(SRC);len=names["length"];i=-1;while(++i<len){name=names[i];src=SRC+name;if($is.dir(src)){tree=TREE+name;if(isValidDir(name,
tree)){trees["push"](tree);paths["push"](PATH+name)}}}};_Dirs["prototype"].getDirsDeep=function getDirsDeep(src){var trees;var tree;var i;var SRC=$addSlash(src);trees=this.trees;i=-1;while(++i<trees["length"]){tree=trees[i];src=SRC+tree;this.getDirs(src,tree)}};function _Files(source,opts){var _isValidFile;var _isValidExt;var _isValidDir;var _isValid;var base;var path;var src;var abs;source=$cleanpath(source);src=$resolve(source);base=opts["base"];abs=opts["abs"];path=abs?src:source;_isValid=_mkValidTests(source,
_DFLT_FILES_OPTS,opts);_isValidDir=_mkValidTests(source,_DFLT_FILES_OPTS,opts,"Dirs");_isValidExt=_mkValidExtTests(_DFLT_FILES_OPTS,opts,"Exts");_isValidFile=_mkValidTests(source,_DFLT_FILES_OPTS,opts,"Files");this.SOURCE=source;this.SRC=src;this.BASE=base;this.ABS=abs;this.PATH=$addSlash(path);this.isValidDir=function isValidDir(name,tree){return _isValid(name,tree)&&_isValidDir(name,tree)};this.isValidFile=function isValidFile(name,tree){return _isValid(name,tree)&&_isValidExt(name)&&_isValidFile(name,
tree)};this.files=[];this.trees=[];this.paths=[]}_Files["prototype"]=$mkObj(NIL);_Files["prototype"]["constructor"]=_Files;_Files["prototype"].main=function main(){this.getFiles(this.SRC,"");if(this.DEEP)this.getFilesDeep(this.SRC);return this.BASE?this.paths:this.files};_Files["prototype"].getFiles=function getFiles(src,tree){var files;var trees;var paths;var names;var name;var len;var i;var SRC=$addSlash(src);var TREE=tree&&$addSlash(tree);var PATH=this.PATH;var isValidDir=this.isValidDir;var isValidFile=
this.isValidFile;files=this.files;trees=this.trees;paths=this.paths;names=$readDir(SRC);len=names["length"];i=-1;while(++i<len){name=names[i];src=SRC+name;tree=TREE+name;if($is.file(src)){if(isValidFile(name,tree)){files["push"](tree);paths["push"](PATH+name)}}else if($is.dir(src))if(isValidDir(name,tree))trees["push"](tree)}};_Files["prototype"].getFilesDeep=function getFilesDeep(src){var trees;var tree;var i;var SRC=$addSlash(src);trees=this.trees;i=-1;while(++i<trees["length"]){tree=trees[i];src=
SRC+tree;this.getFiles(src,tree)}};var _getFileExt=function _getFileExtPrivateScope(){var _FILE_EXT=/^.+?(\.[a-zA-Z0-9]+(?:\.[a-zA-Z0-9]+)*)$/;var _HIDDEN=/^\./;function getFileExt(filename){if(_HIDDEN["test"](filename))filename=filename["replace"](_HIDDEN,"");return _FILE_EXT["test"](filename)?filename["replace"](_FILE_EXT,"$1"):""}return getFileExt}();var _mkValidTest=function _mkValidTestPrivateScope(){var _END_ESC_CHAR=/\\$/;var _END_ESC_PATT=/^(?:.*[^\\])?(?:\\\\)*\\$/;var _GLOB=/\*/;var _PIPE=
/\|/;var _SLASH=/\//;function _escape(src,glob,pipe){return!!src?!!glob?!!pipe?_escGlobPipe(src):_escGlob(src):!!pipe?_escPipe(src):$escRegx(src):""}function _escArr(vals,glob){var last;var src;var i;src="";last=vals["length"]-1;i=-1;while(++i<last)src+=_escape(vals[i],glob)+"|";src+=_escape(vals[last],glob);return src}function _escGlob(src){var parts;var part;var last;var i;if(!_GLOB["test"](src))return $escRegx(src);parts=src["split"]("*");src="";last=parts["length"]-1;i=-1;while(++i<last){part=
parts[i]||"";if(_END_ESC_PATT["test"](part)){part=part["replace"](_END_ESC_CHAR,"*");src+=$escRegx(part)}else{part=part&&$escRegx(part);src+=part+".*"}}part=parts[last]||"";src+=part&&$escRegx(part);return src}function _escPipe(src){var parts;var part;var last;var i;if(!_PIPE["test"](src))return $escRegx(src);parts=src["split"]("|");src="";last=parts["length"]-1;i=-1;while(++i<last){part=parts[i]||"";if(_END_ESC_PATT["test"](part)){part=part["replace"](_END_ESC_CHAR,"|");src+=$escRegx(part)}else{part=
part&&$escRegx(part);src+=part+"|"}}part=parts[last]||"";src+=part&&$escRegx(part);return src}function _escGlobPipe(src){var parts;var part;var last;var i;if(!_GLOB["test"](src))return _escPipe(src);parts=src["split"]("*");src="";last=parts["length"]-1;i=-1;while(++i<last){part=parts[i]||"";if(_END_ESC_PATT["test"](part)){part=part["replace"](_END_ESC_CHAR,"*");src+=_escPipe(part)}else{part=part&&_escPipe(part);src+=part+".*"}}part=parts[last]||"";src+=part&&_escPipe(part);return src}function _mkValid(src,
glob,valid){if($is.nil(valid))return function isValid(name,tree){return YES};if($is.fun(valid))return function isValid(name,tree){return!!valid(name,tree,src)};if($is.arr(valid)){valid=_escArr(valid,glob);valid="^(?:"+valid+")$";valid=new REGX(valid)}else if($is.str(valid)){valid=_escape(valid,glob,YES);valid="^(?:"+valid+")$";valid=new REGX(valid)}return _SLASH["test"](valid["source"])?function isValid(name,tree){return valid["test"](tree)}:function isValid(name,tree){return valid["test"](name)}}
function _mkInvalid(src,glob,invalid){if($is.nil(invalid))return function isInvalid(name,tree){return NO};if($is.fun(invalid))return function isInvalid(name,tree){return!!invalid(name,tree,src)};if($is.arr(invalid)){invalid=_escArr(invalid,glob);invalid="^(?:"+invalid+")$";invalid=new REGX(invalid)}else if($is.str(invalid)){invalid=_escape(invalid,glob,YES);invalid="^(?:"+invalid+")$";invalid=new REGX(invalid)}return _SLASH["test"](invalid["source"])?function isInvalid(name,tree){return invalid["test"](tree)}:
function isInvalid(name,tree){return invalid["test"](name)}}function mkValidTest(src,glob,valid,invalid){var _isInvalid;var _isValid;if($is.nil(valid)&&$is.nil(invalid))return NIL;_isValid=_mkValid(src,glob,valid);_isInvalid=_mkInvalid(src,glob,invalid);return function isValid(name,tree){return _isValid(name,tree)&&!_isInvalid(name,tree)}}return mkValidTest}();function _mkValidTests(src,dfltOpts,usrOpts,type){var isValidDflt;var isValidUsr;var extinvalid;var extvalid;var invalid;var valid;var glob;
type=type||"";glob=usrOpts["glob"];valid="valid"+type;invalid="invalid"+type;extvalid=usrOpts["extendValid"+type];extinvalid=usrOpts["extendInvalid"+type];isValidDflt=extvalid?extinvalid?_mkValidTest(src,glob,dfltOpts[valid],dfltOpts[invalid]):_mkValidTest(src,glob,dfltOpts[valid],NIL):extinvalid?_mkValidTest(src,glob,NIL,dfltOpts[invalid]):NIL;isValidUsr=_mkValidTest(src,glob,usrOpts[valid],usrOpts[invalid]);return isValidDflt?isValidUsr?function isValid(name,tree){return isValidDflt(name,tree)&&
isValidUsr(name,tree)}:function isValid(name,tree){return isValidDflt(name,tree)}:isValidUsr?function isValid(name,tree){return isValidUsr(name,tree)}:function isValid(name,tree){return YES}}var _mkValidExtTest=function _mkValidExtTestPrivateScope(){var _LEAD_DOT=/^\./;function _prepExts(exts,glob){var result;var ext;var len;var i;result="";len=exts["length"];i=-1;while(++i<len){ext=_trimLead(exts[i]||"");if(ext){if(result)result+="|";result+=ext}}result=result["replace"](/\./g,"\\.");return glob?
result["replace"](/\*/g,".*"):result["replace"](/\*/g,"")}function _trimLead(ext){return ext&&ext["replace"](_LEAD_DOT,"")}function _mkValid(glob,valid){if($is.nil(valid))return function isValidExt(ext){return YES};if($is.str(valid))valid=valid["split"]("|");if($is.arr(valid)){valid=_prepExts(valid,glob);valid="\\.(?:"+valid+")$";valid=new REGX(valid)}return function isValidExt(ext){return valid["test"](ext)}}function _mkInvalid(glob,invalid){if($is.nil(invalid))return function isInvalidExt(ext){return NO};
if($is.str(invalid))invalid=invalid["split"]("|");if($is.arr(invalid)){invalid=_prepExts(invalid,glob);invalid="\\.(?:"+invalid+")$";invalid=new REGX(invalid)}return function isInvalidExt(ext){return invalid["test"](ext)}}function mkValidExtTest(glob,valid,invalid){var _isInvalid;var _isValid;if($is.nil(valid)&&$is.nil(invalid))return NIL;_isValid=_mkValid(glob,valid);_isInvalid=_mkInvalid(glob,invalid);return function isValidExt(ext){return _isValid(ext)&&!_isInvalid(ext)}}return mkValidExtTest}();
function _mkValidExtTests(dfltOpts,usrOpts,type){var isValidDflt;var isValidUsr;var extinvalid;var extvalid;var invalid;var valid;var glob;type=type||"";glob=usrOpts["glob"];valid="valid"+type;invalid="invalid"+type;extvalid=usrOpts["extendValid"+type];extinvalid=usrOpts["extendInvalid"+type];isValidDflt=extvalid?extinvalid?_mkValidExtTest(glob,dfltOpts[valid],dfltOpts[invalid]):_mkValidExtTest(glob,dfltOpts[valid],NIL):extinvalid?_mkValidExtTest(glob,NIL,dfltOpts[invalid]):NIL;isValidUsr=_mkValidExtTest(glob,
usrOpts[valid],usrOpts[invalid]);return isValidDflt?isValidUsr?function isValidExt(filename){filename=_getFileExt(filename);return isValidDflt(filename)&&isValidUsr(filename)}:function isValidExt(filename){filename=_getFileExt(filename);return isValidDflt(filename)}:isValidUsr?function isValidExt(filename){filename=_getFileExt(filename);return isValidUsr(filename)}:function isValidExt(filename){return YES}}var _MK_ERR=$mkErrs("get");var _mkErr=_MK_ERR.error;var _mkTypeErr=_MK_ERR.typeError;var _mkRangeErr=
_MK_ERR.rangeError;return get}();var vitals=get;vitals["get"]=get;vitals["VERSION"]=VERSION;module.exports=vitals})(this);