/* vitals v5.0.0 (http://vitalsjs.com)
 * Copyright (c) 2014-2017 Adam A Smith <adam@imaginate.life>
 * The Apache License (http://vitalsjs.com/license) */
'use strict';
(function(__THIS,__VOID){var vitals={};var VERSION="5.0.0";var ENV={HAS_EXPORTS:true,HAS_MODULE:true,HAS_GLOBAL:true,HAS_WINDOW:false,HAS_DEFINE:false,HAS_SELF:false,HAS_THIS:false,ROOT:global};var ROOT=ENV.ROOT;var ARR=ROOT["Array"];var ARR_PROTO=ARR["prototype"];var ERR=ROOT["Error"];var FUN=ROOT["Function"];var FUN_PROTO=FUN["prototype"];var NIL=null;var NO=false;var NUM=ROOT["Number"];var NUM_PROTO=NUM["prototype"];var OBJ=ROOT["Object"];var OBJ_PROTO=OBJ["prototype"];var RANGE_ERR=ROOT["RangeError"];
var REGX=ROOT["RegExp"];var REGX_PROTO=REGX["prototype"];var STR=ROOT["String"];var STR_PROTO=STR["prototype"];var TYPE_ERR=ROOT["TypeError"];var VOID=__VOID;var YES=true;var BUFF=ROOT["Buffer"];var CP=require("child_process");var FS=require("fs");var PATH=require("path");var $objStr=function $objStrPrivateScope(){function $objStr(source){return _objToStr["call"](source)}var _objToStr=OBJ_PROTO["toString"];return $objStr}();var $own=function $ownPrivateScope(){function $own(source,key){return _hasOwnProp["call"](source,
key)}var _hasOwnProp=OBJ_PROTO["hasOwnProperty"];return $own}();var $is=function $isPrivateScope(){function isNull(val){return val===NIL}function isUndefined(val){return val===VOID}function isBoolean(val){return typeof val==="boolean"}function isString(val){return typeof val==="string"}function isNonEmptyString(val){return!!val&&typeof val==="string"}function isNumber(val){return typeof val==="number"&&val===val&&isFinite(val)}function isNonZeroNumber(val){return!!val&&typeof val==="number"&&val===
val&&isFinite(val)}function isNan(val){return val!==val}function isObject(val){return!!val&&typeof val==="object"}function isObjectOrFunction(val){if(!val)return false;switch(typeof val){case "object":case "function":return true;default:return false}}function isFunction(val){return!!val&&typeof val==="function"}function isArray(val){return isObject(val)&&$objStr(val)==="[object Array]"}function isRegExp(val){return isObject(val)&&$objStr(val)==="[object RegExp]"}function isDate(val){return isObject(val)&&
$objStr(val)==="[object Date]"}function isError(val){return isObject(val)&&$objStr(val)==="[object Error]"}function isArguments(val){return isObject(val)&&$objStr(val)==="[object Arguments]"}function isArrayOrArguments(val){if(!isObject(val))return false;switch($objStr(val)){case "[object Array]":case "[object Arguments]":return true;default:return false}}var isBuffer=BUFF["isBuffer"];function isDomDocument(val){return isObject(val)&&"nodeType"in val&&val["nodeType"]===9}function isDomElement(val){return isObject(val)&&
"nodeType"in val&&val["nodeType"]===1}function isArrayLike(val){var len;if(isArray(val))return true;len=val["length"];return isNumber(len)&&isWholeNumber(len)&&len>=0}function isEmpty(val){var key;if(!val)return YES;if(typeof val==="function")return val["length"]===0;if(typeof val!=="object")return NO;if($objStr(val)==="[object Array]")return val["length"]===0;for(key in val)if($own(val,key))return NO;return YES}var _EOL=/^(?:cr|lf|crlf)$/i;function isEndOfLine(val){return _EOL["test"](val)}var _FLAGS=
function _FLAGS_PrivateScope(){var pattern;var source;var flags;flags="img";if("sticky"in REGX_PROTO)flags+="y";if("unicode"in REGX_PROTO)flags+="u";source="^(?:"+"[\\+\\-]["+flags+"\\+\\-]*"+"|"+"["+flags+"]*"+")$";pattern=new REGX(source);pattern.FLAGS=flags;pattern.SRC="/"+source+"/";return pattern}();function isRegExpFlags(val){return _FLAGS["test"](val)}isRegExpFlags.FLAGS=_FLAGS.FLAGS;isRegExpFlags.SRC=_FLAGS.SRC;var isExtensible=function $isExtensiblePolyfillPrivateScope(){var objectIsExtensible;
if(!("isExtensible"in OBJ)||!isFunction(OBJ["isExtensible"]))return function isExtensible(src){return false};objectIsExtensible=OBJ["isExtensible"];try{objectIsExtensible(function(){});return objectIsExtensible}catch(e){return function isExtensible(src){return typeof src==="object"&&objectIsExtensible(src)}}}();var isFrozen=function $isFrozenPolyfillPrivateScope(){var objectIsFrozen;if(!("isFrozen"in OBJ)||!isFunction(OBJ["isFrozen"]))return function isFrozen(src){return false};objectIsFrozen=OBJ["isFrozen"];
try{objectIsFrozen(function(){});return objectIsFrozen}catch(e){return function isFrozen(src){return typeof src==="object"&&objectIsFrozen(src)}}}();var isSealed=function $isSealedPolyfillPrivateScope(){var objectIsSealed;if(!("isSealed"in OBJ)||!isFunction(OBJ["isSealed"]))return function isSealed(src){return false};objectIsSealed=OBJ["isSealed"];try{objectIsSealed(function(){});return objectIsSealed}catch(e){return function isSealed(src){return typeof src==="object"&&objectIsSealed(src)}}}();function isWholeNumber(val){return!(val%
1)}function isOddNumber(val){return!!(val%2)}function isEvenNumber(val){return!(val%2)}var _getStats=FS["statSync"];function isDirectory(path){if(!path||!isString(path))return NO;try{return _getStats(path)["isDirectory"]()}catch(e){return NO}}function isFile(path){if(!path||!isString(path))return NO;try{return _getStats(path)["isFile"]()}catch(e){return NO}}var $is={nil:isNull,void:isUndefined,bool:isBoolean,str:isString,_str:isNonEmptyString,num:isNumber,_num:isNonZeroNumber,nan:isNan,obj:isObject,
_obj:isObjectOrFunction,fun:isFunction,arr:isArray,_arr:isArrayOrArguments,args:isArguments,regx:isRegExp,date:isDate,err:isError,buff:isBuffer,doc:isDomDocument,elem:isDomElement,arrish:isArrayLike,empty:isEmpty,eol:isEndOfLine,flags:isRegExpFlags,extend:isExtensible,frozen:isFrozen,sealed:isSealed,whole:isWholeNumber,odd:isOddNumber,even:isEvenNumber,dir:isDirectory,file:isFile};return $is}();function $mkStr(val){if($is.str(val))return val;if($is.obj(val)||$is.fun(val)){if(!("toString"in val)||
!$is.fun(val["toString"]))return STR(val);val=val["toString"]();return $is.str(val)?val:STR(val)}return $is.void(val)?"undefined":$is.nil(val)?"null":$is.bool(val)?val?"true":"false":$is.nan(val)?"NaN":STR(val)}var $print=function $printPrivateScope(){function $print(val,depth){depth=depth||0;return $is._obj(val)?$is.regx(val)?val["toString"]():_mapToStr(val,depth):_primToStr(val)}var _INDENT="    ";var _MAP_TYPE=/^\[object ([a-zA-Z0-9_\$]+)\]$/;var _LAST_SEP=/,\n$/;function _emptyHashMap(val){var key;
for(key in val)if($own(val,key))return false;return true}function _escStr(val){val=val["replace"](/\\/g,"\\\\");val=val["replace"](/\n/g,"\\n");val=val["replace"](/\r/g,"\\r");val=val["replace"](/\t/g,"\\t");val=val["replace"](/\v/g,"\\v");val=val["replace"](/\0/g,"\\0");val=val["replace"](/\b/g,"\\b");val=val["replace"](/\f/g,"\\f");return val}function _getMapType(val){var type;if($is.fun(val)){type="Function";if(val["name"])type+="("+val["name"]+")";return type}type=$objStr(val);return _MAP_TYPE["test"](type)?
type["replace"](_MAP_TYPE,"$1"):"UnknownObjectType"}function _mkIndent(depth){var indent;if(indent<1)return"";indent="";while(depth--)indent+=_INDENT;return indent}function _primToStr(val){if($is.bool(val))return val?"true":"false";if($is.nil(val))return"null";if($is.void(val))return"undefined";if($is.nan(val))return"NaN";if($is.str(val))return'"'+_escStr(val)+'"';return $mkStr(val)}function _arrToStr(val,depth){var result;var indent;var len;var i;len=val["length"];if(len<1)return"[]";indent=_mkIndent(depth);
depth+=1;result="[\n";i=-1;while(++i<len){result+=indent+i+": ";result+=$print(val[i],depth)+",\n"}result=result["replace"](_LAST_SEP,"\n");return result+"]"}function _keyToStr(key){return"'"+$mkStr(key)+"'"}function _mapToStr(val,depth){var result;result=_getMapType(val)+": ";result+=$is._arr(val)?_arrToStr(val,depth):_ownToStr(val,depth);return result}function _ownToStr(val,depth){var result;var indent;var key;if(_emptyHashMap(val))return"{}";indent=_mkIndent(depth);depth+=1;result="{\n";for(key in val)if($own(val,
key)){result+=indent;result+=_keyToStr(key)+": ";result+=$print(val[key],depth)+",\n"}result=result["replace"](_LAST_SEP,"\n");return result+"}"}return $print}();var $mkObj=function $mkObjPrivateScope(){var _create=function _createPrivateScope(){if("create"in OBJ&&$is.fun(OBJ["create"]))return OBJ["create"];function _Obj(){}function create(proto){var obj;_Obj["prototype"]=proto;obj=new _Obj;_Obj["prototype"]=NIL;return obj}return create}();function $mkObj(proto){return _create(proto)}return $mkObj}();
var $mkErrs=function $mkErrsPrivateScope(){var _OPEN_HASH=/^#/;var _OPEN_VITALS=/^vitals\./;var _STRICT=/^\!/;function _mkOptions(opts){var result;var len;var i;result="";len=opts["length"];i=-1;while(++i<len)result+="\n- `"+$print(opts[i])+"`";return result}function _prepSuper(name){if($is.void(name))return"newVitals";name=name["replace"](_OPEN_VITALS,"");return"vitals."+name}function _prepParam(name){if(!name)return"";if(_STRICT["test"](name))return name["replace"](_STRICT,"");name=name["replace"](_OPEN_HASH,
"");return"#"+name}function _setErrorProps(err,name,msg,val){err["__vitals"]=true;err["vitals"]=true;err["name"]=name;switch(name){case "TypeError":err["__type"]=true;err["type"]=true;break;case "RangeError":err["__range"]=true;err["range"]=true;break}err["message"]=msg;err["msg"]=msg;if(arguments["length"]>3){err["value"]=val;err["val"]=val}return err}function $mkErrs(superMethod){var MK_ERR={error:error,typeError:typeError,rangeError:rangeError};var _SUPER=_prepSuper(superMethod);function _prepMethod(method){method=
!!method?_SUPER+"."+method:_SUPER;return"`"+method+"`"}function error(err,msg,method){method=_prepMethod(method);msg+=" for "+method+" call";return _setErrorProps(err,"Error",msg)}function typeError(err,paramName,paramVal,validTypes,methodName){var method;var param;var msg;var val;method=_prepMethod(methodName);param=_prepParam(paramName);val=$print(paramVal);msg="invalid "+param+" data type for "+method+" call\n";msg+="valid data types: `"+validTypes+"`\n";msg+="actual "+param+" value: `"+val+"`";
return _setErrorProps(err,"TypeError",msg,paramVal)}function rangeError(err,paramName,validRange,methodName){var method;var param;var msg;method=_prepMethod(methodName);param=_prepParam(paramName);msg="out-of-range "+param+" for "+method+" call";if($is.str(validRange))msg+="\nvalid range: `"+validRange+"`";else if($is.arr(validRange))msg+="\nvalid options:"+_mkOptions(validRange);return _setErrorProps(err,"RangeError",msg)}return MK_ERR}return $mkErrs}();var $strIncl=function $strInclPrivateScope(){var $strIncl=
"includes"in STR_PROTO&&$is.fun(STR_PROTO["includes"])?function $strIncl(src,val){return src["includes"](val)}:function $strIncl(src,val){return src["indexOf"](val)!==-1};return $strIncl}();function $cloneArr(src){var clone;var key;clone=new ARR(src["length"]);for(key in src)if($own(src,key))clone[key]=src[key];return clone}function $cloneFun(func){function funcCopy(){return func["apply"](NIL,arguments)}var key;for(key in func)if($own(func,key))funcCopy[key]=func[key];return funcCopy}function $cloneObj(obj){var clone;
var key;clone={};for(key in obj)if($own(obj,key))clone[key]=obj[key];return clone}var $cloneRegx=function $cloneRegxPrivateScope(){var _escape=function _escapePrivateScope(){return/\n/["source"]!=="\\n"?function _escape(src){return src["replace"](/\\/g,"\\\\")}:function _escape(src){return src}}();function $cloneRegx(src,flags){var source;source=_escape(src["source"]);return flags?new REGX(source,flags):new REGX(source)}return $cloneRegx}();function $escRegx(source){return source["replace"](/[\\^$.*+?|(){}[\]]/g,
"\\$\x26")}var $getFlags=function $getFlagsPrivateScope(){var _GLOBAL=/g/;var _FLAGS=function _FLAGS_PrivateScope(){var flags;flags={};flags["ignoreCase"]="i";flags["multiline"]="m";flags["global"]="g";if("sticky"in REGX_PROTO)flags["sticky"]="y";if("unicode"in REGX_PROTO)flags["unicode"]="u";return flags}();function $getFlags(src,forceGlobal){var flags;var key;flags="";for(key in _FLAGS)if($own(_FLAGS,key)&&src[key])flags+=_FLAGS[key];return!!forceGlobal&&!_GLOBAL["test"](flags)?flags+"g":flags}
return $getFlags}();function $inArr(src,val){var len;var i;len=src["length"];i=-1;while(++i<len)if(src[i]===val)return YES;return NO}function $inObj(src,val){var key;for(key in src)if($own(src,key)&&src[key]===val)return YES;return NO}function $inStr(src,val){val=$mkStr(val);return!src?!val:!val?YES:$strIncl(src,val)}function $match(src,patt){if($is.regx(patt))return patt["test"](src);patt=$mkStr(patt);return!src?!patt:!patt?YES:$strIncl(src,patt)}function $merge(dest,src){var key;for(key in src)if($own(src,
key))dest[key]=src[key];return dest}var $ownEnum=function $ownEnumPrivateScope(){var _hasEnum=OBJ_PROTO["propertyIsEnumerable"];function $ownEnum(src,key){return $own(src,key)&&_hasEnum["call"](src,key)}return $ownEnum}();function $sliceArr(src,start,end){var result;var len;var ii;var i;len=src["length"];if($is.void(start))start=0;if($is.void(end))end=len;if(start<0)start+=len;if(start<0)start=0;if(end>len)end=len;else if(end<0)end+=len;if(start>=end)return[];result=new ARR(end-start);ii=start-1;
i=0;while(++ii<end)result[i++]=src[ii];return result}function $sliceStr(src,start,end){var len;len=src["length"];if($is.void(start))start=0;if($is.void(end))end=len;if(start<0)start+=len;if(start<0)start=0;if(end>len)end=len;else if(end<0)end+=len;return start>=end?"":src["substring"](start,end)}function $splitKeys(keys){var separator;if(!keys)return[""];separator=$strIncl(keys,", ")?", ":$strIncl(keys,",")?",":$strIncl(keys,"|")?"|":" ";return keys["split"](separator)}var $addSlash=function $addSlashPrivateScope(){var _END_SLASH=
/\/$/;function $addSlash(path){return _END_SLASH["test"](path)?path:path+"/"}return $addSlash}();var $fixEol=function $fixEolPrivateScope(){var _EOLS={"CRLF":function fixEolCRLF(src){return src["replace"](/\r?\n|\r\n?/g,"\r\n")},"CR":function fixEolCR(src){return src["replace"](/\r?\n/g,"\r")},"LF":function fixEolLF(src){return src["replace"](/\r\n?/g,"\n")}};function $fixEol(src,eol){return _EOLS[eol](src)}return $fixEol}();function $hasOpt(opts,opt){return $own(opts,opt)&&!$is.void(opts[opt])}var $mkdir=
function $mkdirPrivateScope(){var _mkdir=FS["mkdirSync"];function $mkdir(path){if(!$is.dir(path))_mkdir(path)}return $mkdir}();var $pathname=function $pathnamePrivateScope(){var _DIRNAME=/^.*[\/\\]/;var _END_SLASH=/[\/\\]$/;function $pathname(path){path=path["replace"](_END_SLASH,"");return path["replace"](_DIRNAME,"")}return $pathname}();var $readDir=FS["readdirSync"];var $readFile=FS["readFileSync"];var $writeFile=FS["writeFileSync"];var is=function isPrivateScope(){function is(types,val){var nullable;
var checks;var vals;switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #types defined");case 1:throw _mkErr(new ERR,"no #val defined");case 2:vals=NO;break;default:vals=YES;break}if(!$is.str(types))throw _mkTypeErr(new TYPE_ERR,"types",types,"string");if(!types)throw _mkErr(new ERR,"invalid empty #types `string`");if(_hasSpecial("*",types))return YES;checks=_getChecks(types);if(!checks)throw _mkRangeErr(new RANGE_ERR,"types","https://github.com/imaginate/vitals/wiki/vitals.is-types");nullable=
_getNullable(types);return vals?_checkVals(checks,arguments,nullable):_checkVal(checks,val,nullable)}is["main"]=is;function isNull(val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #val defined","null");case 1:return $is.nil(val);default:return _are(arguments,$is.nil)}}is["null"]=isNull;is["nil"]=isNull;function isUndefined(val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #val defined","undefined");case 1:return $is.void(val);default:return _are(arguments,$is.none)}}
is["undefined"]=isUndefined;is["void"]=isUndefined;function isBoolean(val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #val defined","boolean");case 1:return $is.bool(val);default:return _are(arguments,$is.bool)}}is["boolean"]=isBoolean;is["bool"]=isBoolean;function isString(val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #val defined","string");case 1:return $is.str(val);default:return _are(arguments,$is.str)}}is["string"]=isString;is["str"]=isString;function isNonEmptyString(val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,
"no #val defined","_string");case 1:return $is._str(val);default:return _are(arguments,$is._str)}}is["_string"]=isNonEmptyString;is["_str"]=isNonEmptyString;function isNumber(val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #val defined","number");case 1:return $is.num(val);default:return _are(arguments,$is.num)}}is["number"]=isNumber;is["num"]=isNumber;function isNonZeroNumber(val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #val defined","_number");case 1:return $is._num(val);
default:return _are(arguments,$is._num)}}is["_number"]=isNonZeroNumber;is["_num"]=isNonZeroNumber;function isNan(val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #val defined","nan");case 1:return $is.nan(val);default:return _are(arguments,$is.nan)}}is["nan"]=isNan;function isObject(val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #val defined","object");case 1:return $is.obj(val);default:return _are(arguments,$is.obj)}}is["object"]=isObject;is["obj"]=isObject;function isObjectOrFunction(val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,
"no #val defined","_object");case 1:return $is._obj(val);default:return _are(arguments,$is._obj)}}is["_object"]=isObjectOrFunction;is["_obj"]=isObjectOrFunction;function isFunction(val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #val defined","function");case 1:return $is.fun(val);default:return _are(arguments,$is.fun)}}is["func"]=isFunction;is["fun"]=isFunction;try{is["fn"]=isFunction;is["function"]=isFunction}catch(e){}function isArray(val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,
"no #val defined","array");case 1:return $is.arr(val);default:return _are(arguments,$is.arr)}}is["array"]=isArray;is["arr"]=isArray;function isArrayOrArguments(val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #val defined","_array");case 1:return $is._arr(val);default:return _are(arguments,$is._arr)}}is["_array"]=isArrayOrArguments;is["_arr"]=isArrayOrArguments;function isRegExp(val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #val defined","regexp");case 1:return $is.regx(val);
default:return _are(arguments,$is.regx)}}is["regexp"]=isRegExp;is["regex"]=isRegExp;is["regx"]=isRegExp;is["re"]=isRegExp;function isDate(val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #val defined","date");case 1:return $is.date(val);default:return _are(arguments,$is.date)}}is["date"]=isDate;function isError(val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #val defined","error");case 1:return $is.err(val);default:return _are(arguments,$is.err)}}is["error"]=isError;
is["err"]=isError;function isArguments(val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #val defined","args");case 1:return $is.args(val);default:return _are(arguments,$is.args)}}is["args"]=isArguments;function isDocument(val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #val defined","document");case 1:return $is.doc(val);default:return _are(arguments,$is.doc)}}is["document"]=isDocument;is["doc"]=isDocument;function isElement(val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,
"no #val defined","element");case 1:return $is.elem(val);default:return _are(arguments,$is.elem)}}is["element"]=isElement;is["elem"]=isElement;function isEmpty(val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #val defined","empty");case 1:return $is.empty(val);default:return _are(arguments,$is.empty)}}is["empty"]=isEmpty;function isFrozen(val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #val defined","frozen");case 1:return _isFrozen(val);default:return _are(arguments,
_isFrozen)}}is["frozen"]=isFrozen;function isWholeNumber(val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #val defined","wholeNumber");case 1:return _isWhole(val);default:return _are(arguments,_isWhole)}}is["wholeNumber"]=isWholeNumber;is["whole"]=isWholeNumber;function isOddNumber(val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #val defined","oddNumber");case 1:return _isOdd(val);default:return _are(arguments,_isOdd)}}is["oddNumber"]=isOddNumber;is["odd"]=isOddNumber;
function isEvenNumber(val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #val defined","evenNumber");case 1:return _isEven(val);default:return _are(arguments,_isEven)}}is["evenNumber"]=isEvenNumber;is["even"]=isEvenNumber;function _are(vals,check){var i;i=vals["length"];while(i--)if(!check(vals[i]))return NO;return YES}function _isFrozen(val){if($is.nil(val))return NO;if(!$is._obj(val))throw _mkTypeErr(new TYPE_ERR,"val",val,"?Object|?Function","frozen");return $is.frozen(val)}function _isWhole(val){if(!$is.num(val))throw _mkTypeErr(new TYPE_ERR,
"val",val,"number","wholeNumber");return $is.whole(val)}function _isOdd(val){if(!$is.num(val))throw _mkTypeErr(new TYPE_ERR,"val",val,"number","oddNumber");if(!$is.whole(val))throw _mkRangeErr(new RANGE_ERR,"val","-?[0-9]+","oddNumber");return $is.odd(val)}function _isEven(val){if(!$is.num(val))throw _mkTypeErr(new TYPE_ERR,"val",val,"number","evenNumber");if(!$is.whole(val))throw _mkRangeErr(new RANGE_ERR,"val","-?[0-9]+","evenNumber");return $is.even(val)}function _checkVal(checks,val,nullable){var i;
i=checks["length"];while(i--)if(checks[i](val,nullable))return YES;return NO}function _checkVals(checks,vals,nullable){var i;i=vals["length"];while(--i)if(!_checkVal(checks,vals[i],nullable))return NO;return YES}var _TYPES=function _TYPES_PrivateScope(){var $types={};function _addTypes(section,types,nullableDefault){var type;for(type in types)if($own(types,type))_addType(section,type,types[type],nullableDefault)}function _addType(section,type,check,nullableDefault){if($own(_addType,section))check=
_addType[section](check);nullableDefault=nullableDefault!==NO;function typeCheck(val,nullable){if(!$is.bool(nullable))nullable=nullableDefault;return $is.nil(val)?nullable:check(val)}$types["_"+type]=typeCheck}function _addShortcuts(shortcuts){var shortcut;var type;for(shortcut in shortcuts)if($own(shortcuts,shortcut)){type="_"+shortcuts[shortcut];shortcut="_"+shortcut;$types[shortcut]=$types[type]}}function _addArrayType(eachCheck){function check(val){var i;if(!$is.arr(val))return NO;i=val["length"];
while(i--)if(!eachCheck(val[i]))return NO;return YES}return check}_addType["arrays"]=_addArrayType;function _addMapType(eachCheck){function check(val){var key;if(!$is.obj(val))return NO;for(key in val)if($own(val,key)&&!eachCheck(val[key]))return NO;return YES}return check}_addType["maps"]=_addMapType;_addTypes("primitives",{"undefined":$is.void,"boolean":$is.bool,"string":$is.str,"number":$is.num,"nan":$is.nan},NO);_addType("primitives","null",$is.nil);_addTypes("js_objects",{"object":$is.obj,"regexp":$is.regx,
"array":$is.arr,"error":$is.err,"date":$is.date});_addType("js_objects","arguments",$is.args);_addType("js_objects","function",$is.fun,NO);_addTypes("dom_objects",{"element":$is.elem,"document":$is.doc});_addType("others","empty",$is.empty);_addTypes("arrays",{"undefineds":$is.void,"nulls":$is.nil,"booleans":$is.bool,"strings":$is.str,"numbers":$is.num,"nans":$is.nan,"objects":$is.obj,"functions":$is.fun,"regexps":$is.regx,"arrays":$is.arr,"dates":$is.date,"errors":$is.err,"elements":$is.elem,"documents":$is.doc});
_addTypes("maps",{"undefinedmap":$is.void,"nullmap":$is.nil,"booleanmap":$is.bool,"stringmap":$is.str,"numbermap":$is.num,"nanmap":$is.nan,"objectmap":$is.obj,"functionmap":$is.func,"regexpmap":$is.regex,"arraymap":$is.arr,"datemap":$is.date,"errormap":$is.err,"elementmap":$is.elem,"documentmap":$is.doc});_addShortcuts({"nil":"null","bool":"boolean","str":"string","num":"number","void":"undefined","obj":"object","func":"function","fun":"function","fn":"function","regex":"regexp","regx":"regexp","re":"regexp",
"arr":"array","err":"error","args":"arguments","elem":"element","doc":"document","undefinedes":"undefineds","voids":"undefineds","nils":"nulls","strs":"strings","nums":"numbers","bools":"booleans","objs":"objects","funcs":"functions","funs":"functions","fns":"functions","regexes":"regexps","regexs":"regexps","res":"regexps","arrs":"arrays","errs":"errors","elems":"elements","docs":"documents","voidmap":"undefinedmap","nilmap":"nullmap","strmap":"stringmap","nummap":"numbermap","boolmap":"booleanmap",
"objmap":"objectmap","funcmap":"functionmap","funmap":"functionmap","fnmap":"functionmap","regexmap":"regexpmap","regxmap":"regexpmap","remap":"regexpmap","arrmap":"arraymap","errmap":"errormap","elemmap":"elementmap","docmap":"documentmap"});return $types}();var _ALL_SPECIALS=/[^a-z\|]/g;var _SPECIALS=function _SPECIALS_PrivateScope(){var _PIPE=/\|/;var _EXCLAMATION_POINT=/\!/;var _QUESTION_MARK=/\?/;var _EQUAL_SIGN=/\=/;var _ANY=/\*|any/;function hasPipe(val){return _PIPE["test"](val)}function hasExPoint(val){return _EXCLAMATION_POINT["test"](val)}
function hasQuestMark(val){return _QUESTION_MARK["test"](val)}function hasEqSign(val){return _EQUAL_SIGN["test"](val)}function hasAnyGlob(val){return _ANY["test"](val)}var SPECIALS={"|":hasPipe,"!":hasExPoint,"?":hasQuestMark,"\x3d":hasEqSign,"*":hasAnyGlob};return SPECIALS}();function _hasSpecial(special,types){return _SPECIALS[special](types)}function _getChecks(types){var checks;var type;var i;if(_hasSpecial("\x3d",types))types+="|undefined";types=types["toLowerCase"]();types=types["replace"](_ALL_SPECIALS,
"");checks=types["split"]("|");i=checks["length"];while(i--){type="_"+checks[i];if(!$own(_TYPES,type))return NIL;checks[i]=_TYPES[type]}return checks["length"]?checks:NIL}function _getNullable(types){var override;var ensure;var negate;ensure=_hasSpecial("?",types);negate=_hasSpecial("!",types);override=ensure&&negate?NO:ensure||negate;return override?!negate&&ensure:VOID}var _MK_ERR=$mkErrs("is");var _mkErr=_MK_ERR.error;var _mkTypeErr=_MK_ERR.typeError;var _mkRangeErr=_MK_ERR.rangeError;return is}();
vitals["is"]=is;var copy=function copyPrivateScope(){function copy(val,deep){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #val defined");case 1:break;default:if(!$is.void(deep)&&!$is.bool(deep))throw _mkTypeErr(new TYPE_ERR,"deep",deep,"boolean\x3d");}return!$is._obj(val)?val:$is.fun(val)?_copyFunc(val,deep):$is._arr(val)?_copyArr(val,deep):$is.regx(val)?_copyRegex(val):_copyObj(val,deep)}copy["main"]=copy;function copyObject(source,deep){switch(arguments["length"]){case 0:throw _mkErr(new ERR,
"no #source defined","object");case 1:break;default:if(!$is.void(deep)&&!$is.bool(deep))throw _mkTypeErr(new TYPE_ERR,"deep",deep,"boolean\x3d","object");}if(!$is.obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object","object");return _copyObj(source,deep)}copy["object"]=copyObject;copy["obj"]=copyObject;function copyArray(source,deep){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","array");case 1:break;default:if(!$is.void(deep)&&!$is.bool(deep))throw _mkTypeErr(new TYPE_ERR,
"deep",deep,"boolean\x3d","array");}if(!$is.obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"(!Array|!Arguments|!Object)","array");if(!$is.arrish(source))throw _mkErr(new ERR,"#source failed `array-like` test (#source."+"length must be a whole `number` that is `0` or more)","array");return _copyArr(source,deep)}copy["array"]=copyArray;copy["arr"]=copyArray;copy["args"]=copyArray;function copyRegExp(source,flags){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined",
"regexp");case 1:break;default:if($is.str(flags)){if(!$is.flags(flags))throw _mkRangeErr(new RANGE_ERR,"flags",$is.flags.SRC,"regexp");}else if(!$is.void(flags))throw _mkTypeErr(new TYPE_ERR,"flags",flags,"string\x3d","regexp");}if(!$is.regx(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!RegExp","regexp");return _copyRegex(source,flags)}copy["regexp"]=copyRegExp;copy["regex"]=copyRegExp;copy["regx"]=copyRegExp;copy["re"]=copyRegExp;function copyFunction(source,deep){switch(arguments["length"]){case 0:throw _mkErr(new ERR,
"no #source defined","function");case 1:break;default:if(!$is.void(deep)&&!$is.bool(deep))throw _mkTypeErr(new TYPE_ERR,"deep",deep,"boolean\x3d","function");}if(!$is.fun(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Function","function");return _copyFunc(source,deep)}copy["func"]=copyFunction;copy["fun"]=copyFunction;try{copy["fn"]=copyFunction;copy["function"]=copyFunction}catch(e){}function _copyObj(obj,deep){return deep?_mergeDeep({},obj):$merge({},obj)}function _copyArr(obj,deep){var arr;
arr=new ARR(obj["length"]);return deep?_mergeDeep(arr,obj):$merge(arr,obj)}function _copyRegex(src,flags){var flags;flags=_getFlags(src,flags);return $cloneRegx(src,flags)}function _copyFunc(func,deep){function funcCopy(){return func["apply"](NIL,arguments)}return deep?_mergeDeep(funcCopy,func):$merge(funcCopy,func)}var _MOD_FLAGS=/^[\+\-]/;function _addFlags(FLAGS,flags){var flag;var len;var i;len=flags["length"];i=-1;while(++i<len){flag=flags[i];FLAGS[flag]=true}return FLAGS}function _getFlags(src,
flags){var flag;if($is.void(flags))return $getFlags(src);if(!_MOD_FLAGS["test"](flags))return flags;var FLAGS=_mkFlags(src);function _modFlags(match,sign,flags){var flagsArray;flagsArray=flags["split"]("");if(sign==="+")_addFlags(FLAGS,flagsArray);else _rmFlags(FLAGS,flagsArray);return""}flags.replace(/([\+\-])([imgyu]+)/g,_modFlags);flags="";for(flag in FLAGS)if($own(FLAGS,flag)&&FLAGS[flag]&&!$inStr(flags,flag))flags+=flag;return flags}function _mkFlags(src){var result;var flags;var flag;var len;
var i;result={};flags=$getFlags(src)["split"]("");len=flags["length"];i=-1;while(++i<len){flag=flags[i];result[flag]=true}return result}function _rmFlags(FLAGS,flags){var flag;var len;var i;len=flags["length"];i=-1;while(++i<len){flag=flags[i];FLAGS[flag]=false}return FLAGS}function _mergeDeep(dest,source){var key;for(key in source)if($own(source,key))dest[key]=copy(source[key],YES);return dest}var _MK_ERR=$mkErrs("copy");var _mkErr=_MK_ERR.error;var _mkTypeErr=_MK_ERR.typeError;var _mkRangeErr=_MK_ERR.rangeError;
return copy}();vitals["copy"]=copy;var cut=function cutPrivateScope(){function cut(source,val,thisArg){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined");case 1:throw _mkErr(new ERR,"no #val defined");case 2:if($is.str(source))return $is.arr(val)?_cutPatterns(source,val):_cutPattern(source,val);if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function|!Array|!Arguments|string");if($is.args(source))source=$sliceArr(source);return $is.fun(val)?
$is.arr(source)?_filterArr(source,val,VOID):_filterObj(source,val,VOID):$is.arr(val)?_cutProps(source,val):_cutProp(source,val);default:if($is.str(source)){val=$sliceArr(arguments,1);return _cutPatterns(source,val)}if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function|!Array|!Arguments|string");if($is.args(source))source=$sliceArr(source);if($is.fun(val)){if(!$is.nil(thisArg)&&!$is.void(thisArg)&&!$is.obj(thisArg))throw _mkTypeErr(new TYPE_ERR,"thisArg",thisArg,"?Object\x3d");
return $is.arr(source)?_filterArr(source,val,thisArg):_filterObj(source,val,thisArg)}val=$sliceArr(arguments,1);return _cutProps(source,val)}}cut["main"]=cut;function cutProperty(source,val,thisArg){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","property");case 1:throw _mkErr(new ERR,"no #val defined","property");case 2:if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function|!Array|!Arguments","property");if($is.args(source))source=$sliceArr(source);
return $is.fun(val)?$is.arr(source)?_filterArr(source,val,VOID):_filterObj(source,val,VOID):_cutProp(source,val);default:if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function|!Array|!Arguments","property");if($is.args(source))source=$sliceArr(source);if($is.fun(val)){if(!$is.nil(thisArg)&&!$is.void(thisArg)&&!$is.obj(thisArg))throw _mkTypeErr(new TYPE_ERR,"thisArg",thisArg,"?Object\x3d","property");return $is.arr(source)?_filterArr(source,val,thisArg):_filterObj(source,
val,thisArg)}return _cutProp(source,val)}}cut["property"]=cutProperty;cut["prop"]=cutProperty;function cutKey(source,key){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","key");case 1:throw _mkErr(new ERR,"no #key defined","key");}if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function","key");return _cutKey(source,key)}cut["key"]=cutKey;function cutIndex(source,index,toIndex){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined",
"index");case 1:throw _mkErr(new ERR,"no #index defined","index");case 2:if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Array|!Arguments|!Object|!Function","index");if(!$is.arrish(source))throw _mkErr(new ERR,"#source failed `array-like` test (#source."+"length must be a whole `number` that is `0` or more)","index");if(!$is.num(index))throw _mkTypeErr(new TYPE_ERR,"index",index,"number","index");if(!$is.whole(index))throw _mkErr(new ERR,"invalid #index `number` ("+"must be a whole `number`)",
"index");if(!$is.arr(source))source=$sliceArr(source);return _cutIndex(source,index,VOID);default:if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Array|!Arguments|!Object|!Function","index");if(!$is.arrish(source))throw _mkErr(new ERR,"#source failed `array-like` test (#source."+"length must be a whole `number` that is `0` or more)","index");if(!$is.num(index))throw _mkTypeErr(new TYPE_ERR,"index",index,"number","index");if(!$is.whole(index))throw _mkErr(new ERR,"invalid #index `number` ("+
"must be a whole `number`)","index");if(!$is.void(toIndex)){if(!$is.num(toIndex))throw _mkTypeErr(new TYPE_ERR,"toIndex",toIndex,"number","index");if(!$is.whole(index))throw _mkErr(new ERR,"invalid #toIndex `number` ("+"must be a whole `number`)","index");}if(!$is.arr(source))source=$sliceArr(source);return _cutIndex(source,index,toIndex)}}cut["index"]=cutIndex;cut["i"]=cutIndex;function cutType(source,type){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","type");case 1:throw _mkErr(new ERR,
"no #type defined","type");}if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function|!Array|!Arguments","type");if(!$is.str(type))throw _mkTypeErr(new TYPE_ERR,"type",type,"string","type");if($is.args(source))source=$sliceArr(source);if($is.empty(source)){is(type,"");return source}return _cutType(source,type)}cut["type"]=cutType;function cutValue(source,val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","value");case 1:throw _mkErr(new ERR,
"no #val defined","value");}if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function|!Array|!Arguments","value");if($is.args(source))source=$sliceArr(source);return _cutVal(source,val)}cut["value"]=cutValue;cut["val"]=cutValue;function cutPattern(source,pattern){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","pattern");case 1:throw _mkErr(new ERR,"no #pattern defined","pattern");}if(!$is.str(source))throw _mkTypeErr(new TYPE_ERR,"source",
source,"string","pattern");return _cutPattern(source,pattern)}cut["pattern"]=cutPattern;cut["patt"]=cutPattern;function cutProperties(source,val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","properties");case 1:throw _mkErr(new ERR,"no #val defined","properties");case 2:break;default:val=$sliceArr(arguments,1);break}if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function|!Array|!Arguments","properties");if($is.args(source))source=$sliceArr(source);
return $is.arr(val)?_cutProps(source,val):_cutProp(source,val)}cut["properties"]=cutProperties;cut["props"]=cutProperties;function cutKeys(source,key){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","keys");case 1:throw _mkErr(new ERR,"no #key defined","keys");case 2:break;default:key=$sliceArr(arguments,1);break}if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function","keys");return $is.arr(key)?_cutKeys(source,key):_cutKey(source,key)}cut["keys"]=
cutKeys;function cutIndexes(source,index){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","indexes");case 1:throw _mkErr(new ERR,"no #index defined","indexes");case 2:break;default:index=$sliceArr(arguments,1);break}if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Array|!Arguments|!Object|!Function","indexes");if(!$is.arrish(source))throw _mkErr(new ERR,"#source failed `array-like` test (#source."+"length must be a whole `number` that is `0` or more)",
"indexes");if(!$is.arr(source))source=$sliceArr(source);if(!$is.arr(index)){if(!$is.num(index))throw _mkTypeErr(new TYPE_ERR,"index",index,"(!Array\x3cnumber\x3e|...number)","indexes");if(!$is.whole(index))throw _mkErr(new ERR,"invalid #index `number` ("+"must be a whole `number`)","indexes");return _cutIndex(source,index)}if(!_isNumArr(index))throw _mkTypeErr(new TYPE_ERR,"index",index,"(!Array\x3cnumber\x3e|...number)","indexes");if(!_isWholeNumArr(index))throw _mkErr(new ERR,"an invalid #index `number` ("+
"every #index must be a whole `number`)","indexes");return _cutIndexes(source,index)}cut["indexes"]=cutIndexes;cut["ii"]=cutIndexes;function cutValues(source,val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","values");case 1:throw _mkErr(new ERR,"no #val defined","values");case 2:break;default:val=$sliceArr(arguments,1);break}if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function|!Array|!Arguments","values");if($is.args(source))source=
$sliceArr(source);return $is.arr(val)?_cutVals(source,val):_cutVal(source,val)}cut["values"]=cutValues;cut["vals"]=cutValues;function cutPatterns(source,pattern){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","patterns");case 1:throw _mkErr(new ERR,"no #pattern defined","patterns");case 2:break;default:pattern=$sliceArr(arguments,1);break}if(!$is.str(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"string","patterns");return $is.arr(pattern)?_cutPatterns(source,
pattern):_cutPattern(source,pattern)}cut["patterns"]=cutPatterns;cut["patts"]=cutPatterns;function _cutProp(source,val){return $is.arr(source)?$is.num(val)&&$is.whole(val)?_spliceKey(source,val):_spliceVal(source,val):$is.str(val)||$is.regx(val)?_deleteKey(source,val):_deleteVal(source,val)}function _cutProps(source,vals){return $is.arr(source)?_isIntArr(vals)?_spliceKeys(source,vals):_spliceVals(source,vals):$is.str(vals[0])||$is.regx(vals[0])?_deleteKeys(source,vals):_deleteVals(source,vals)}function _cutKey(source,
key){if($own(source,key))delete source[key];return source}function _cutKeys(source,keys){var len;var i;len=keys["length"];i=-1;while(++i<len)source=_cutKey(source,keys[i]);return source}function _cutIndex(source,key,toKey){var len;len=source["length"];if(key<0)key+=len;if(key>=len)return source;if($is.void(toKey)){if(key<0)return source;source["splice"](key,1);return source}if(key<0)key=0;if(toKey>len)toKey=len;else if(toKey<0)toKey+=len;if(key>=toKey)return source;source["splice"](key,toKey-key);
return source}function _cutIndexes(source,keys){return _spliceKeys(source,keys)}function _cutType(source,type){return $is.arr(source)?_spliceValByType(source,type):_deleteValByType(source,type)}function _cutVal(source,val){return $is.arr(source)?_spliceVal(source,val):_deleteVal(source,val)}function _cutVals(source,vals){return $is.arr(source)?_spliceVals(source,vals):_deleteVals(source,vals)}function _cutPattern(source,pattern){if(!$is.regx(pattern)){pattern=$mkStr(pattern);pattern=$escRegx(pattern);
pattern=new REGX(pattern,"g")}return source["replace"](pattern,"")}function _cutPatterns(source,patterns){var len;var i;len=patterns["length"];i=-1;while(++i<len)source=_cutPattern(source,patterns[i]);return source}function _deleteKey(source,key,useMatch){var pattern;if($is.void(useMatch))useMatch=$is.regx(key);if(!useMatch){if($own(source,key))delete source[key];return source}pattern=key;for(key in source)if($own(source,key)&&$match(key,pattern))delete source[key];return source}function _deleteKeys(source,
keys){var useMatch;var len;var i;useMatch=$is.regx(keys[0]);len=keys["length"];i=-1;while(++i<len)source=_deleteKey(source,keys[i],useMatch);return source}function _deleteVal(source,val){var key;for(key in source)if($own(source,key)&&source[key]===val)delete source[key];return source}function _deleteValByType(source,type){var key;for(key in source)if($own(source,key)&&is(type,source[key]))delete source[key];return source}function _deleteVals(source,vals){var len;var i;len=vals["length"];i=-1;while(++i<
len)source=_deleteVal(source,vals[i]);return source}function _spliceKey(source,key){var len;len=source["length"];if(key<0)key+=len;if(key<0||key>=len)return source;source["splice"](key,1);return source}function _spliceKeys(source,keys){var first;var count;var i;if(!source["length"]||!keys["length"])return source;if(keys["length"]===1)return _spliceKey(source,keys[0]);var sorted=_sortIndexes(keys,source["length"]);i=sorted.first["length"];while(i--){first=sorted.first[i];count=sorted.last[i]-first+
1;source["splice"](first,count)}return source}function _spliceVal(source,val){var i;i=source["length"];while(i--)if(source[i]===val)source["splice"](i,1);return source}function _spliceValByType(source,type){var i;i=source["length"];while(i--)if(is(type,source[i]))source["splice"](i,1);return source}function _spliceVals(source,vals){var val;var len;var ii;var i;len=vals["length"];i=source["length"];while(i--){val=source[i];ii=len;while(ii--)if(vals[ii]===val){source["splice"](i,1);break}}return source}
function _filterObj(source,filter,thisArg){var src;var key;if(!$is.void(thisArg))filter=_bind(filter,thisArg);src=filter["length"]>2?$is.fun(source)?$cloneFun(source):$cloneObj(source):source;switch(filter["length"]){case 0:for(key in src)if($own(src,key)&&!filter())delete source[key];break;case 1:for(key in src)if($own(src,key)&&!filter(src[key]))delete source[key];break;case 2:for(key in src)if($own(src,key)&&!filter(src[key],key))delete source[key];break;default:for(key in src)if($own(src,key)&&
!filter(src[key],key,src))delete source[key];break}return source}function _filterArr(source,filter,thisArg){var src;var i;if(!$is.void(thisArg))filter=_bind(filter,thisArg);src=filter["length"]>2?$cloneArr(source):source;i=src["length"];switch(filter["length"]){case 0:while(i--)if(!filter())source["splice"](i,1);break;case 1:while(i--)if(!filter(src[i]))source["splice"](i,1);break;case 2:while(i--)if(!filter(src[i],i))source["splice"](i,1);break;default:while(i--)if(!filter(src[i],i,src))source["splice"](i,
1);break}return source}var _sortIndexes=function(){function sortIndexes(indexes,sourceLen){setup();run(indexes,sourceLen);return result()}var $first;var $last;function setup(){$first=[];$last=[]}function run(indexes,sourceLen){var index;var len;var i;len=indexes["length"];i=0;index=parse(indexes[i],sourceLen);while(index===-1&&++i<len)index=parse(indexes[i],sourceLen);push(index);while(++i<len){index=parse(indexes[i],sourceLen);if(index!==-1)sort(index,0,$last["length"])}}function result(){var SORTED_INDEXES=
{first:$first,last:$last};return SORTED_INDEXES}function parse(index,len){if(index<0)index+=len;return index<0||index>=len?-1:index}function push(index){$first["push"](index);$last["push"](index)}function unshift(index){$first["unshift"](index);$last["unshift"](index)}function insert(index,pos){$first["splice"](pos,0,index);$last["splice"](pos,0,index)}function remove(pos){$first["splice"](pos,1);$last["splice"](pos,1)}function sort(index,left,right){var mid;var min;mid=left+right>>>1;min=$first[mid];
if(index<min)comparePrev(index,left,mid);else if(index>$last[mid])compareNext(index,mid,right)}function comparePrev(index,left,mid){var prev;var min;var max;min=$first[mid];if(!mid){if(index===--min)$first[mid]=index;else unshift(index);return}prev=mid-1;max=$last[prev];if(index===--min)if(index===++max){$last[prev]=$last[mid];remove(mid)}else $first[mid]=index;else if(index>max)if(index===++max)$last[prev]=index;else insert(index,mid);else sort(index,left,prev)}function compareNext(index,mid,right){var next;
var min;var max;next=mid+1;max=$last[mid];if(next===$last["length"]){if(index===++max)$last[mid]=index;else push(index);return}min=$first[next];if(index===++max)if(index===--min){$last[mid]=$last[next];remove(next)}else $last[mid]=index;else if(index<min)if(index===--min)$first[next]=index;else insert(index,next);else sort(index,next,right)}return sortIndexes}();function _bind(func,thisArg){switch(func["length"]){case 0:return function filter(){return func["call"](thisArg)};case 1:return function filter(val){return func["call"](thisArg,
val)};case 2:return function filter(val,key){return func["call"](thisArg,val,key)}}return function filter(val,key,obj){return func["call"](thisArg,val,key,obj)}}function _isIntArr(vals){var propVal;var len;var i;len=vals["length"];i=-1;while(++i<len){propVal=vals[i];if(!$is.num(propVal)||!$is.whole(propVal))return NO}return YES}function _isNumArr(val){var len;var i;if(!$is.arr(val))return NO;len=val["length"];i=-1;while(++i<len)if(!$is.num(val[i]))return NO;return YES}function _isWholeNumArr(nums){var len;
var i;len=nums["length"];i=-1;while(++i<len)if(!$is.whole(nums[i]))return NO;return YES}var _MK_ERR=$mkErrs("cut");var _mkErr=_MK_ERR.error;var _mkTypeErr=_MK_ERR.typeError;return cut}();vitals["cut"]=cut;var each=function eachPrivateScope(){function each(source,iteratee,thisArg){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined");case 1:throw _mkErr(new ERR,"no #iteratee defined");case 2:break;default:if(!$is.nil(thisArg)&&!$is.void(thisArg)&&!$is.obj(thisArg))throw _mkTypeErr(new TYPE_ERR,
"thisArg",thisArg,"?Object\x3d");break}if(!$is.fun(iteratee))throw _mkTypeErr(new TYPE_ERR,"iteratee",iteratee,"!function(*\x3d, (string|number)\x3d, (!Object|!Function|!Array)\x3d)");if($is.num(source)){if(!$is.whole(source))throw _mkErr(new ERR,"invalid #source `number` ("+"must be whole `number`)");return _eachCycle(source,iteratee,thisArg)}if($is.str(source))source=$splitKeys(source);else if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function|!Array|!Arguments|string|number");
return $is._arr(source)?_eachArr(source,iteratee,thisArg):_eachObj(source,iteratee,thisArg)}each["main"]=each;function eachObject(source,iteratee,thisArg){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","object");case 1:throw _mkErr(new ERR,"no #iteratee defined","object");case 2:break;default:if(!$is.nil(thisArg)&&!$is.void(thisArg)&&!$is.obj(thisArg))throw _mkTypeErr(new TYPE_ERR,"thisArg",thisArg,"?Object\x3d","object");break}if(!$is.fun(iteratee))throw _mkTypeErr(new TYPE_ERR,
"iteratee",iteratee,"!function(*\x3d, string\x3d, (!Object|!Function)\x3d)","object");if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function","object");return _eachObj(source,iteratee,thisArg)}each["object"]=eachObject;each["obj"]=eachObject;function eachArray(source,iteratee,thisArg){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","array");case 1:throw _mkErr(new ERR,"no #iteratee defined","array");case 2:break;default:if(!$is.nil(thisArg)&&
!$is.void(thisArg)&&!$is.obj(thisArg))throw _mkTypeErr(new TYPE_ERR,"thisArg",thisArg,"?Object\x3d","array");break}if(!$is.fun(iteratee))throw _mkTypeErr(new TYPE_ERR,"iteratee",iteratee,"!function(*\x3d, number\x3d, !Array\x3d)","array");if($is.str(source))source=$splitKeys(source);else if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Array|!Arguments|!Object|!Function|string","array");else if(!$is.arrish(source))throw _mkErr(new ERR,"#source failed `array-like` test (#source."+
"length must be a whole `number` that is `0` or more)","array");return _eachArr(source,iteratee,thisArg)}each["array"]=eachArray;each["arr"]=eachArray;function eachCycle(cycles,iteratee,thisArg){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #cycles defined","cycle");case 1:throw _mkErr(new ERR,"no #iteratee defined","cycle");case 2:break;default:if(!$is.nil(thisArg)&&!$is.void(thisArg)&&!$is.obj(thisArg))throw _mkTypeErr(new TYPE_ERR,"thisArg",thisArg,"?Object\x3d","cycle");break}if(!$is.fun(iteratee))throw _mkTypeErr(new TYPE_ERR,
"iteratee",iteratee,"!function(number\x3d, number\x3d)","cycle");if(!$is.num(cycles))throw _mkTypeErr(new TYPE_ERR,"cycles",cycles,"number","cycle");if(!$is.whole(cycles))throw _mkErr(new ERR,"invalid #cycles `number` ("+"must be whole `number`)","cycle");return _eachCycle(cycles,iteratee,thisArg)}each["cycle"]=eachCycle;each["time"]=eachCycle;function _eachObj(source,iteratee,thisArg){var src;var key;if(!$is.void(thisArg))iteratee=_bindMap(iteratee,thisArg);src=iteratee["length"]>2?$is.fun(source)?
$cloneFun(source):$cloneObj(source):source;switch(iteratee["length"]){case 0:for(key in src)if($own(src,key))iteratee();break;case 1:for(key in src)if($own(src,key))iteratee(src[key]);break;case 2:for(key in src)if($own(src,key))iteratee(src[key],key);break;default:for(key in src)if($own(src,key))iteratee(src[key],key,src);break}return source}function _eachArr(source,iteratee,thisArg){var src;var len;var i;if(!$is.void(thisArg))iteratee=_bindMap(iteratee,thisArg);src=iteratee["length"]>2?$cloneArr(source):
source;len=src["length"];i=-1;switch(iteratee["length"]){case 0:while(++i<len)iteratee();break;case 1:while(++i<len)iteratee(src[i]);break;case 2:while(++i<len)iteratee(src[i],i);break;default:while(++i<len)iteratee(src[i],i,src);break}return source}function _eachCycle(cycles,iteratee,thisArg){var count;var cycle;if(!$is.void(thisArg))iteratee=_bindCycle(iteratee,thisArg);count=cycles>0?cycles:0;switch(iteratee["length"]){case 0:while(count--)iteratee();break;case 1:cycle=0;while(count--)iteratee(cycle++);
break;default:cycle=0;while(count--)iteratee(cycle++,cycles);break}return cycles}function _bindMap(func,thisArg){switch(func["length"]){case 0:return function iteratee(){return func["call"](thisArg)};case 1:return function iteratee(value){func["call"](thisArg,value)};case 2:return function iteratee(value,key){func["call"](thisArg,value,key)}}return function iteratee(value,key,source){func["call"](thisArg,value,key,source)}}function _bindCycle(func,thisArg){switch(func["length"]){case 0:return function iteratee(){return func["call"](thisArg)};
case 1:return function iteratee(cycle){return func["call"](thisArg,cycle)}}return function iteratee(cycle,cycles){return func["call"](thisArg,cycle,cycles)}}var _MK_ERR=$mkErrs("each");var _mkErr=_MK_ERR.error;var _mkTypeErr=_MK_ERR.typeError;return each}();vitals["each"]=each;var fill=function fillPrivateScope(){function fill(source,keys,val,start,end){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined");case 1:throw _mkErr(new ERR,"no #val defined");}if($is.nil(source))return NIL;
if($is.num(source))return _fillStr(source,keys);if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"?Array|?Object|?Function|?number");if($is.arr(source)){end=start;start=val;val=keys;if($is.num(start)){if(!$is.whole(start))throw _mkErr(new ERR,"invalid #start `number` ("+"must be whole `number`)");}else if(!$is.void(start))throw _mkTypeErr(new TYPE_ERR,"start",start,"number\x3d");if($is.num(end)){if(!$is.whole(end))throw _mkErr(new ERR,"invalid #end `number` ("+"must be whole `number`)");
}else if(!$is.void(end))throw _mkTypeErr(new TYPE_ERR,"end",end,"number\x3d");return _fillArr(source,val,start,end)}if(arguments["length"]===2)return _fillObj(source,keys);if($is.str(keys))keys=$splitKeys(keys);else if(!$is.arr(keys))throw _mkTypeErr(new TYPE_ERR,"keys",keys,"(!Array|string)\x3d");return _fillKeys(source,keys,val)}fill["main"]=fill;function fillObject(source,keys,val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","object");case 1:throw _mkErr(new ERR,
"no #val defined","object");case 2:if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function","object");return _fillObj(source,keys);default:if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function","object");if($is.str(keys))keys=$splitKeys(keys);else if(!$is.arr(keys))throw _mkTypeErr(new TYPE_ERR,"keys",keys,"(!Array|string)\x3d","object");return _fillKeys(source,keys,val)}}fill["object"]=fillObject;fill["obj"]=fillObject;function fillArray(source,
val,start,end){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","array");case 1:throw _mkErr(new ERR,"no #val defined","array");case 2:if($is.num(source))source=new ARR(source);else if(!$is.arr(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Array|number","array");return _fillArr(source,val,VOID,VOID);case 3:if($is.num(source))source=new ARR(source);else if(!$is.arr(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Array|number","array");if($is.num(start)){if(!$is.whole(start))throw _mkErr(new ERR,
"invalid #start `number` ("+"must be whole `number`)","array");}else if(!$is.void(start))throw _mkTypeErr(new TYPE_ERR,"start",start,"number\x3d","array");return _fillArr(source,val,start,VOID);default:if($is.num(source))source=new ARR(source);else if(!$is.arr(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Array|number","array");if($is.num(start)){if(!$is.whole(start))throw _mkErr(new ERR,"invalid #start `number` ("+"must be whole `number`)","array");}else if(!$is.void(start))throw _mkTypeErr(new TYPE_ERR,
"start",start,"number\x3d","array");if($is.num(end)){if(!$is.whole(end))throw _mkErr(new ERR,"invalid #end `number` ("+"must be whole `number`)","array");}else if(!$is.void(end))throw _mkTypeErr(new TYPE_ERR,"end",end,"number\x3d","array");return _fillArr(source,val,start,end)}}fill["array"]=fillArray;fill["arr"]=fillArray;function fillString(count,val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #count defined","string");case 1:throw _mkErr(new ERR,"no #val defined","string");}if(!$is.num(count))throw _mkTypeErr(new TYPE_ERR,
"count",count,"number","string");if(!$is.whole(count))throw _mkErr(new ERR,"invalid #count `number` ("+"must be whole `number`)","string");return _fillStr(count,val)}fill["string"]=fillString;fill["str"]=fillString;function _fillObj(obj,val){var key;for(key in obj)if($own(obj,key))obj[key]=val;return obj}function _fillKeys(obj,keys,val){var len;var i;len=keys["length"];i=-1;while(++i<len)obj[keys[i]]=val;return obj}function _fillArr(arr,val,start,end){var len;var i;len=arr["length"];if($is.void(start))start=
0;if($is.void(end))end=len;if(start<0)start+=len;if(start<0)start=0;if(end>len)end=len;else if(end<0)end+=len;if(start>=end)return arr;i=start-1;while(++i<end)arr[i]=val;return arr}function _fillStr(count,val){var str;if(count<1)return"";val=$mkStr(val);str="";while(count--)str+=val;return str}var _MK_ERR=$mkErrs("fill");var _mkErr=_MK_ERR.error;var _mkTypeErr=_MK_ERR.typeError;return fill}();vitals["fill"]=fill;var fuse=function fusePrivateScope(){function fuse(dest,val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,
"no #dest defined");case 1:throw _mkErr(new ERR,"no #val defined");case 2:if($is.str(dest))return $is.arr(val)?_fuseStrs(dest,val):_fuseStr(dest,val);if(!$is._obj(dest))throw _mkTypeErr(new TYPE_ERR,"dest",dest,"!Object|!Function|!Array|!Arguments|string");if($is.args(dest))dest=$sliceArr(dest);return $is.arr(dest)?_fuseArr(dest,val):$is.arr(val)?_fuseObjs(dest,val):_fuseObj(dest,val);default:val=$sliceArr(arguments,1);if($is.str(dest))return _fuseStrs(dest,val);if(!$is._obj(dest))throw _mkTypeErr(new TYPE_ERR,
"dest",dest,"!Object|!Function|!Array|!Arguments|string");if($is.args(dest))dest=$sliceArr(dest);return $is.arr(dest)?_fuseArrs(dest,val):_fuseObjs(dest,val)}}fuse["main"]=fuse;function fuseValue(dest,val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #dest defined","value");case 1:throw _mkErr(new ERR,"no #val defined","value");case 2:if($is.str(dest))return _fuseStr(dest,val);if(!$is._obj(dest))throw _mkTypeErr(new TYPE_ERR,"dest",dest,"!Object|!Function|!Array|!Arguments|string",
"value");if($is.args(dest))dest=$sliceArr(dest);return $is.arr(dest)?_fuseArrVal(dest,val):_fuseObjVal(dest,val);default:val=$sliceArr(arguments,1);if($is.str(dest))return _fuseStrs(dest,val);if(!$is._obj(dest))throw _mkTypeErr(new TYPE_ERR,"dest",dest,"!Object|!Function|!Array|!Arguments|string","value");if($is.args(dest))dest=$sliceArr(dest);return $is.arr(dest)?_fuseArrsVal(dest,val):_fuseObjsVal(dest,val)}}fuse["value"]=fuseValue;fuse["val"]=fuseValue;function fuseValueStart(dest,val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,
"no #dest defined","value.start");case 1:throw _mkErr(new ERR,"no #val defined","value.start");case 2:if($is.str(dest))return _fuseStrTop(dest,val);if(!$is._obj(dest))throw _mkTypeErr(new TYPE_ERR,"dest",dest,"!Object|!Function|!Array|!Arguments|string","value.start");if($is.args(dest))dest=$sliceArr(dest);return $is.arr(dest)?_fuseArrValTop(dest,val):_fuseObjValTop(dest,val);default:val=$sliceArr(arguments,1);if($is.str(dest))return _fuseStrsTop(dest,val);if(!$is._obj(dest))throw _mkTypeErr(new TYPE_ERR,
"dest",dest,"!Object|!Function|!Array|!Arguments|string","value.start");if($is.args(dest))dest=$sliceArr(dest);return $is.arr(dest)?_fuseArrsValTop(dest,val):_fuseObjsValTop(dest,val)}}fuse["value"]["start"]=fuseValueStart;fuse["value"]["top"]=fuseValueStart;fuse["val"]["start"]=fuseValueStart;fuse["val"]["top"]=fuseValueStart;function fuseObject(dest,val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #dest defined","object");case 1:throw _mkErr(new ERR,"no #val defined","object");case 2:if(!$is._obj(dest))throw _mkTypeErr(new TYPE_ERR,
"dest",dest,"!Object|!Function","object");return $is.arr(val)?_fuseObjs(dest,val):_fuseObj(dest,val);default:if(!$is._obj(dest))throw _mkTypeErr(new TYPE_ERR,"dest",dest,"!Object|!Function","object");val=$sliceArr(arguments,1);return _fuseObjs(dest,val)}}fuse["object"]=fuseObject;fuse["obj"]=fuseObject;function fuseArray(dest,val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #dest defined","array");case 1:throw _mkErr(new ERR,"no #val defined","array");case 2:if($is.args(dest))dest=
$sliceArr(dest);else if(!$is.arr(dest))throw _mkTypeErr(new TYPE_ERR,"dest",dest,"!Array|!Arguments","array");return _fuseArr(dest,val);default:if($is.args(dest))dest=$sliceArr(dest);else if(!$is.arr(dest))throw _mkTypeErr(new TYPE_ERR,"dest",dest,"!Array|!Arguments","array");val=$sliceArr(arguments,1);return _fuseArrs(dest,val)}}fuse["array"]=fuseArray;fuse["arr"]=fuseArray;function fuseString(dest,val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #dest defined","string");case 1:throw _mkErr(new ERR,
"no #val defined","string");case 2:if(!$is.str(dest))throw _mkTypeErr(new TYPE_ERR,"dest",dest,"string","string");return $is.arr(val)?_fuseStrs(dest,val):_fuseStr(dest,val);default:if(!$is.str(dest))throw _mkTypeErr(new TYPE_ERR,"dest",dest,"string","string");val=$sliceArr(arguments,1);return _fuseStrs(dest,val)}}fuse["string"]=fuseString;fuse["str"]=fuseString;function _fuseObj(dest,val){if($is._obj(val))return $merge(dest,val);if(!$is.nil(val))dest[val]=VOID;return dest}function _fuseObjs(dest,
vals){var len;var i;len=vals["length"];i=-1;while(++i<len)dest=_fuseObj(dest,vals[i]);return dest}function _fuseObjVal(dest,val){dest[val]=VOID;return dest}function _fuseObjsVal(dest,vals){var val;var len;var i;len=vals["length"];i=-1;while(++i<len){val=vals[i];dest[val]=VOID}return dest}function _fuseObjValTop(dest,val){if(!$own(dest,val))dest[val]=VOID;return dest}function _fuseObjsValTop(dest,vals){var len;var i;len=vals["length"];i=-1;while(++i<len)dest=_fuseObjValTop(dest,vals[i]);return dest}
function _fuseArr(dest,val){if($is.arr(val))return dest["concat"](val);if(!$is.nil(val))dest["push"](val);return dest}function _fuseArrs(dest,vals){var len;var i;len=vals["length"];i=-1;while(++i<len)dest=_fuseArr(dest,vals[i]);return dest}function _fuseArrVal(dest,val){dest["push"](val);return dest}function _fuseArrsVal(dest,vals){var len;var i;len=vals["length"];i=-1;while(++i<len)dest["push"](vals[i]);return dest}function _fuseArrValTop(dest,val){dest["unshift"](val);return dest}function _fuseArrsValTop(dest,
vals){var len;var i;len=vals["length"];i=-1;while(++i<len)dest["unshift"](vals[i]);return dest}function _fuseStr(dest,val){return dest+$mkStr(val)}function _fuseStrs(dest,vals){var len;var i;len=vals["length"];i=-1;while(++i<len)dest+=$mkStr(vals[i]);return dest}function _fuseStrTop(dest,val){return $mkStr(val)+dest}function _fuseStrsTop(dest,vals){var len;var i;len=vals["length"];i=-1;while(++i<len)dest=$mkStr(vals[i])+dest;return dest}var _MK_ERR=$mkErrs("fuse");var _mkErr=_MK_ERR.error;var _mkTypeErr=
_MK_ERR.typeError;return fuse}();vitals["fuse"]=fuse;var get=function getPrivateScope(){function get(source,val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined");case 1:if($is.str(source))throw _mkErr(new ERR,"no #val defined");if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function|!Array|!Arguments|string");return $is._arr(source)?_allIndexes(source):_allKeys(source);default:if($is.str(source))return $is.regx(val)?_strVals(source,val):_strIndexes(source,
val);if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function|!Array|!Arguments|string");return $is._arr(source)?_byValIndexes(source,val):$is.regx(val)?_byKeyObjVals(source,val):_byValKeys(source,val)}}get["main"]=get;function getKeys(source,val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","keys");case 1:if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function","keys");return _allKeys(source);default:if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,
"source",source,"!Object|!Function","keys");return $is.regx(val)?_byKeyKeys(source,val):_byValKeys(source,val)}}get["keys"]=getKeys;function getKeysByKey(source,key){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","keys.byKey");case 1:throw _mkErr(new ERR,"no #key defined","keys.byKey");default:if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function","keys.byKey");return _byKeyKeys(source,key)}}get["keys"]["byKey"]=getKeysByKey;function getKeysByValue(source,
val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","keys.byValue");case 1:throw _mkErr(new ERR,"no #val defined","keys.byValue");default:if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function","keys.byValue");return _byValKeys(source,val)}}get["keys"]["byValue"]=getKeysByValue;get["keys"]["byVal"]=getKeysByValue;function getIndexes(source,val){var len;switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","indexes");
case 1:if($is.str(source))throw _mkErr(new ERR,"no #val defined","indexes");if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Array|!Arguments|!Object|!Function|string","indexes");if(!$is.arrish(source))throw _mkErr(new ERR,"#source failed `array-like` test (#source."+"length must be a whole `number` that is `0` or more)","indexes");return _allIndexes(source);default:if($is.str(source))return _strIndexes(source,val);if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,
"!Array|!Arguments|!Object|!Function|string","indexes");if(!$is.arrish(source))throw _mkErr(new ERR,"#source failed `array-like` test (#source."+"length must be a whole `number` that is `0` or more)","indexes");return _byValIndexes(source,val)}}get["indexes"]=getIndexes;get["ii"]=getIndexes;function getValues(source,val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","values");case 1:if($is.str(source))throw _mkErr(new ERR,"no #val defined","values");if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,
"source",source,"!Object|!Function|string","values");return _allObjVals(source);default:if($is.str(source))return _strVals(source,val);if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function|string","values");return _byKeyObjVals(source,val)}}get["values"]=getValues;get["vals"]=getValues;function _allKeys(src){var keys;var key;keys=[];for(key in src)if($own(src,key))keys["push"](key);return keys}function _byKeyKeys(src,pattern){var keys;var key;if(!$is.regx(pattern))pattern=
$mkStr(pattern);keys=[];for(key in src)if($own(src,key)&&$match(key,pattern))keys["push"](key);return keys}function _byValKeys(src,val){var keys;var key;keys=[];for(key in src)if($own(src,key)&&src[key]===val)keys["push"](key);return keys}function _allObjVals(src){var vals;var key;vals=[];for(key in src)if($own(src,key))vals["push"](src[key]);return vals}function _byKeyObjVals(src,pattern){var vals;var key;if(!$is.regx(pattern))pattern=$mkStr(pattern);vals=[];for(key in src)if($own(src,key)&&$match(key,
pattern))vals["push"](src[key]);return vals}function _allIndexes(src){var indexes;var len;var i;len=src["length"];indexes=new ARR(len);i=-1;while(++i<len)indexes[i]=i;return indexes}function _byValIndexes(src,val){var indexes;var len;var i;indexes=[];len=src["length"];i=-1;while(++i<len)if(src[i]===val)indexes["push"](i);return indexes}function _strIndexes(src,pattern){return $is.regx(pattern)?_byRegexStrIndexes(src,pattern):_byStrStrIndexes(src,pattern)}function _strVals(src,pattern){return $is.regx(pattern)?
_byRegexStrVals(src,pattern):_byStrStrVals(src,pattern)}function _byRegexStrIndexes(src,patt){var indexes;var result;var flags;flags=$getFlags(patt,YES);patt=$cloneRegx(patt,flags);indexes=[];result=patt["exec"](src);while(result){indexes["push"](result["index"]);result=patt["exec"](src)}return indexes}function _byStrStrIndexes(src,pattern){var indexes;var i;pattern=$mkStr(pattern);indexes=[];i=src["indexOf"](pattern);while(i!==-1){indexes["push"](i);i=src["indexOf"](pattern,++i)}return indexes}function _byRegexStrVals(src,
patt){var result;var flags;var vals;flags=$getFlags(patt,YES);patt=$cloneRegx(patt,flags);vals=[];result=patt["exec"](src);while(result){vals["push"](result[0]);result=patt["exec"](src)}return vals}function _byStrStrVals(src,pattern){var vals;var i;pattern=$mkStr(pattern);vals=[];i=src["indexOf"](pattern);while(i!==-1){vals["push"](pattern);i=src["indexOf"](pattern,++i)}return vals}var _MK_ERR=$mkErrs("get");var _mkErr=_MK_ERR.error;var _mkTypeErr=_MK_ERR.typeError;var _mkRangeErr=_MK_ERR.rangeError;
return get}();vitals["get"]=get;var has=function hasPrivateScope(){function has(source,val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined");case 1:throw _mkErr(new ERR,"no #val defined");}if($is.nil(source))return NO;if($is.str(source))return $match(source,val);if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"?Object|?Function|?Array|?Arguments|?string");return $is._arr(source)?$inArr(source,val):$is.regx(val)?_ownMatch(source,val):$own(source,val)}
has["main"]=has;function hasKey(source,key){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","key");case 1:throw _mkErr(new ERR,"no #key defined","key");}if($is.nil(source))return NO;if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"?Object|?Function","key");return $own(source,key)}has["key"]=hasKey;function hasValue(source,val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","value");case 1:throw _mkErr(new ERR,"no #val defined",
"value");}if($is.nil(source))return NO;if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"?Object|?Function|?Array|?Arguments","value");return $is._arr(source)?$inArr(source,val):$inObj(source,val)}has["value"]=hasValue;has["val"]=hasValue;function hasPattern(source,pattern){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","pattern");case 1:throw _mkErr(new ERR,"no #pattern defined","pattern");}if(!$is.str(source))throw _mkTypeErr(new TYPE_ERR,"source",
source,"string","pattern");return $match(source,pattern)}has["pattern"]=hasPattern;function hasSubstring(source,val){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","substring");case 1:throw _mkErr(new ERR,"no #val defined","substring");}if(!$is.str(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"string","substring");return $inStr(source,val)}has["substring"]=hasSubstring;has["substr"]=hasSubstring;function hasEnumerableKey(source,key){switch(arguments["length"]){case 0:throw _mkErr(new ERR,
"no #source defined","enumerableKey");case 1:throw _mkErr(new ERR,"no #key defined","enumerableKey");}if($is.nil(source))return NO;if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"?Object|?Function","enumerableKey");return $ownEnum(source,key)}has["enumerableKey"]=hasEnumerableKey;has["enumerable"]=hasEnumerableKey;has["enumKey"]=hasEnumerableKey;try{has["enum"]=hasEnumerableKey}catch(e){}function _ownMatch(src,patt){var key;for(key in src)if($own(src,key)&&patt["test"](key))return YES;
return NO}var _MK_ERR=$mkErrs("has");var _mkErr=_MK_ERR.error;var _mkTypeErr=_MK_ERR.typeError;return has}();vitals["has"]=has;var remap=function remapPrivateScope(){function remap(source,iteratee,replacement,thisArg){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined");case 1:throw _mkErr(new ERR,"no #iteratee defined");case 2:if($is.str(source))throw _mkErr(new ERR,"no #replacement defined");if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function|!Array|!Arguments|string");
if(!$is.fun(iteratee))throw _mkTypeErr(new TYPE_ERR,"iteratee",iteratee,"!function(*\x3d, (string|number)\x3d, (!Object|!Function|!Array)\x3d): *");return $is._arr(source)?_remapArr(source,iteratee,VOID):_remapObj(source,iteratee,VOID);case 3:if($is.str(source))return _remapStr(source,iteratee,replacement,VOID);break;default:if($is.str(source)){if(!$is.nil(thisArg)&&!$is.void(thisArg)&&!$is.obj(thisArg))throw _mkTypeErr(new TYPE_ERR,"thisArg",thisArg,"?Object\x3d");return _remapStr(source,iteratee,
replacement,thisArg)}break}thisArg=replacement;if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function|!Array|!Arguments|string");if(!$is.fun(iteratee))throw _mkTypeErr(new TYPE_ERR,"iteratee",iteratee,"!function(*\x3d, (string|number)\x3d, (!Object|!Function|!Array)\x3d): *");if(!$is.nil(thisArg)&&!$is.void(thisArg)&&!$is.obj(thisArg))throw _mkTypeErr(new TYPE_ERR,"thisArg",thisArg,"?Object\x3d");return $is._arr(source)?_remapArr(source,iteratee,thisArg):_remapObj(source,
iteratee,thisArg)}remap["main"]=remap;function remapObject(source,iteratee,thisArg){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","object");case 1:throw _mkErr(new ERR,"no #iteratee defined","object");case 2:if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function","object");if(!$is.fun(iteratee))throw _mkTypeErr(new TYPE_ERR,"iteratee",iteratee,"!function(*\x3d, string\x3d, (!Object|!Function)\x3d): *","object");return _remapObj(source,
iteratee,VOID);default:if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function","object");if(!$is.fun(iteratee))throw _mkTypeErr(new TYPE_ERR,"iteratee",iteratee,"!function(*\x3d, string\x3d, (!Object|!Function)\x3d): *","object");if(!$is.nil(thisArg)&&!$is.void(thisArg)&&!$is.obj(thisArg))throw _mkTypeErr(new TYPE_ERR,"thisArg",thisArg,"?Object\x3d","object");return _remapObj(source,iteratee,thisArg)}}remap["object"]=remapObject;remap["obj"]=remapObject;function remapArray(source,
iteratee,thisArg){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","array");case 1:throw _mkErr(new ERR,"no #iteratee defined","array");case 2:if($is.str(source))source=$splitKeys(source);else if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Array|!Arguments|!Object|!Function|string","array");else if(!$is.arrish(source))throw _mkErr(new ERR,"#source failed `array-like` test (#source."+"length must be a whole `number` that is `0` or more)","array");if(!$is.fun(iteratee))throw _mkTypeErr(new TYPE_ERR,
"iteratee",iteratee,"!function(*\x3d, number\x3d, !Array\x3d): *","array");return _remapArr(source,iteratee,VOID);default:if($is.str(source))source=$splitKeys(source);else if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Array|!Arguments|!Object|!Function|string","array");else if(!$is.arrish(source))throw _mkErr(new ERR,"#source failed `array-like` test (#source."+"length must be a whole `number` that is `0` or more)","array");if(!$is.fun(iteratee))throw _mkTypeErr(new TYPE_ERR,
"iteratee",iteratee,"!function(*\x3d, number\x3d, !Array\x3d): *","array");if(!$is.nil(thisArg)&&!$is.void(thisArg)&&!$is.obj(thisArg))throw _mkTypeErr(new TYPE_ERR,"thisArg",thisArg,"?Object\x3d","array");return _remapArr(source,iteratee,thisArg)}}remap["array"]=remapArray;remap["arr"]=remapArray;function remapString(source,pattern,replacement,thisArg){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","string");case 1:throw _mkErr(new ERR,"no #pattern defined","string");
case 2:throw _mkErr(new ERR,"no #replacement defined","string");case 3:if(!$is.str(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"string","string");return _remapStr(source,pattern,replacement,VOID);default:if(!$is.str(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"string","string");if(!$is.nil(thisArg)&&!$is.void(thisArg)&&!$is.obj(thisArg))throw _mkTypeErr(new TYPE_ERR,"thisArg",thisArg,"?Object\x3d","string");return _remapStr(source,pattern,replacement,thisArg)}}remap["string"]=
remapString;remap["str"]=remapString;function _remapObj(source,iteratee,thisArg){var obj;var key;obj={};if(iteratee["length"]>2)source=$is.fun(source)?$cloneFun(source):$cloneObj(source);if(!$is.void(thisArg))iteratee=_bindIteratee(iteratee,thisArg);switch(iteratee["length"]){case 0:for(key in source)if($own(source,key))obj[key]=iteratee();break;case 1:for(key in source)if($own(source,key))obj[key]=iteratee(source[key]);break;case 2:for(key in source)if($own(source,key))obj[key]=iteratee(source[key],
key);break;default:for(key in source)if($own(source,key))obj[key]=iteratee(source[key],key,source);break}return obj}function _remapArr(source,iteratee,thisArg){var arr;var len;var i;if(iteratee["length"]>2)source=$cloneArr(source);if(!$is.void(thisArg))iteratee=_bindIteratee(iteratee,thisArg);len=source["length"];arr=new ARR(len);i=-1;switch(iteratee["length"]){case 0:while(++i<len)arr[i]=iteratee();break;case 1:while(++i<len)arr[i]=iteratee(source[i]);break;case 2:while(++i<len)arr[i]=iteratee(source[i],
i);break;default:while(++i<len)arr[i]=iteratee(source[i],i,source);break}return arr}function _remapStr(source,pattern,replacement,thisArg){if(!source)return source;if(!$is.regx(pattern)){pattern=$mkStr(pattern);if(!pattern)return source;pattern=$escRegx(pattern);pattern=new REGX(pattern,"g")}if(!$is.fun(replacement))replacement=$mkStr(replacement);else if(!$is.void(thisArg))replacement=_bindReplacement(replacement,thisArg);return source["replace"](pattern,replacement)}function _bindIteratee(func,
thisArg){switch(func["length"]){case 0:return function iteratee(){return func["call"](thisArg)};case 1:return function iteratee(value){return func["call"](thisArg,value)};case 2:return function iteratee(value,key){return func["call"](thisArg,value,key)}}return function iteratee(value,key,source){return func["call"](thisArg,value,key,source)}}function _bindReplacement(func,thisArg){switch(func["length"]){case 0:return function replacement(){return func["call"](thisArg)};case 1:return function replacement(match){return func["call"](thisArg,
match)};case 2:return function replacement(match,offset){return func["call"](thisArg,match,offset)};case 3:return function replacement(match,offset,source){return func["call"](thisArg,match,offset,source)};case 4:return function replacement(match,p1,offset,source){return func["call"](thisArg,match,p1,offset,source)};case 5:return function replacement(match,p1,p2,offset,source){return func["call"](thisArg,match,p1,p2,offset,source)};case 6:return function replacement(match,p1,p2,p3,offset,source){return func["call"](thisArg,
match,p1,p2,p3,offset,source)}}return function replacement(match,p1,p2,p3,p4,offset,source){return func["apply"](thisArg,arguments)}}var _MK_ERR=$mkErrs("remap");var _mkErr=_MK_ERR.error;var _mkTypeErr=_MK_ERR.typeError;return remap}();vitals["remap"]=remap;var roll=function rollPrivateScope(){function roll(base,source,iteratee,thisArg){var hasBase;switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined");case 1:throw _mkErr(new ERR,"no #iteratee defined");case 2:iteratee=source;
source=base;hasBase=NO;break;case 3:if(!$is.fun(iteratee)){thisArg=iteratee;iteratee=source;source=base;hasBase=NO;break}default:hasBase=YES;break}if(!$is.fun(iteratee))throw _mkTypeErr(new TYPE_ERR,"iteratee",iteratee,"!function("+"*\x3d, *\x3d, (string|number)\x3d, (!Object|!Function|!Array)\x3d): *");if(!$is.nil(thisArg)&&!$is.void(thisArg)&&!$is.obj(thisArg))throw _mkTypeErr(new TYPE_ERR,"thisArg",thisArg,"?Object\x3d");if($is.num(source)){if(!hasBase)throw _mkErr(new ERR,"no #base defined ("+
"#base is required with a `number` #source)");if(!$is.whole(source))throw _mkErr(new ERR,"invalid #source `number` ("+"must be whole `number`)");return _rollCycle(base,source,iteratee,thisArg)}if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function|!Array|!Arguments|number");return $is._arr(source)?hasBase?_rollBaseArr(base,source,iteratee,thisArg):_rollArr(source,iteratee,thisArg):hasBase?_rollBaseObj(base,source,iteratee,thisArg):_rollObj(source,iteratee,thisArg)}roll["main"]=
roll;function rollUp(base,source,iteratee,thisArg){var hasBase;switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","up");case 1:throw _mkErr(new ERR,"no #iteratee defined","up");case 2:iteratee=source;source=base;hasBase=NO;break;case 3:if(!$is.fun(iteratee)){thisArg=iteratee;iteratee=source;source=base;hasBase=NO;break}default:hasBase=YES;break}if(!$is.fun(iteratee))throw _mkTypeErr(new TYPE_ERR,"iteratee",iteratee,"!function("+"*\x3d, (string|number)\x3d, (!Object|!Function|!Array)\x3d): *",
"up");if(!$is.nil(thisArg)&&!$is.void(thisArg)&&!$is.obj(thisArg))throw _mkTypeErr(new TYPE_ERR,"thisArg",thisArg,"?Object\x3d","up");if($is.num(source)){if(!hasBase)throw _mkErr(new ERR,"no #base defined ("+"#base is required with a `number` #source)","up");if(!$is.whole(source))throw _mkErr(new ERR,"invalid #source `number` ("+"must be whole `number`)","up");return _rollCycleUp(base,source,iteratee,thisArg)}if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function|!Array|!Arguments|number",
"up");return $is._arr(source)?hasBase?_rollBaseArrUp(base,source,iteratee,thisArg):_rollArrUp(source,iteratee,thisArg):hasBase?_rollBaseObjUp(base,source,iteratee,thisArg):_rollObjUp(source,iteratee,thisArg)}roll["up"]=rollUp;function rollDown(base,source,iteratee,thisArg){var hasBase;switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","down");case 1:throw _mkErr(new ERR,"no #iteratee defined","down");case 2:iteratee=source;source=base;hasBase=NO;break;case 3:if(!$is.fun(iteratee)){thisArg=
iteratee;iteratee=source;source=base;hasBase=NO;break}default:hasBase=YES;break}if(!$is.fun(iteratee))throw _mkTypeErr(new TYPE_ERR,"iteratee",iteratee,"!function("+"*\x3d, (string|number)\x3d, (!Object|!Function|!Array)\x3d): *","down");if(!$is.nil(thisArg)&&!$is.void(thisArg)&&!$is.obj(thisArg))throw _mkTypeErr(new TYPE_ERR,"thisArg",thisArg,"?Object\x3d","down");if($is.num(source)){if(!hasBase)throw _mkErr(new ERR,"no #base defined ("+"#base is required with a `number` #source)","down");if(!$is.whole(source))throw _mkErr(new ERR,
"invalid #source `number` ("+"must be whole `number`)","down");return _rollCycleDown(base,source,iteratee,thisArg)}if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object|!Function|!Array|!Arguments|number","down");return $is._arr(source)?hasBase?_rollBaseArrDown(base,source,iteratee,thisArg):_rollArrDown(source,iteratee,thisArg):hasBase?_rollBaseObjDown(base,source,iteratee,thisArg):_rollObjDown(source,iteratee,thisArg)}roll["down"]=rollDown;function _rollObj(source,iteratee,
thisArg){var loaded;var result;var key;if(iteratee["length"]>3)source=$is.fun(source)?$cloneFun(source):$cloneObj(source);if(!$is.void(thisArg))iteratee=_bindPrevMap(iteratee,thisArg);loaded=NO;result=VOID;switch(iteratee["length"]){case 0:case 1:for(key in source)if($own(source,key))if(loaded)result=iteratee(result);else{result=source[key];loaded=YES}break;case 2:for(key in source)if($own(source,key))if(loaded)result=iteratee(result,source[key]);else{result=source[key];loaded=YES}break;case 3:for(key in source)if($own(source,
key))if(loaded)result=iteratee(result,source[key],key);else{result=source[key];loaded=YES}break;default:for(key in source)if($own(source,key))if(loaded)result=iteratee(result,source[key],key,source);else{result=source[key];loaded=YES}break}return result}function _rollBaseObj(result,source,iteratee,thisArg){var key;if(iteratee["length"]>3)source=$is.fun(source)?$cloneFun(source):$cloneObj(source);if(!$is.void(thisArg))iteratee=_bindPrevMap(iteratee,thisArg);switch(iteratee["length"]){case 0:case 1:for(key in source)if($own(source,
key))result=iteratee(result);break;case 2:for(key in source)if($own(source,key))result=iteratee(result,source[key]);break;case 3:for(key in source)if($own(source,key))result=iteratee(result,source[key],key);break;default:for(key in source)if($own(source,key))result=iteratee(result,source[key],key,source);break}return result}function _rollObjUp(source,iteratee,thisArg){var loaded;var result;var key;if(iteratee["length"]>2)source=$is.fun(source)?$cloneFun(source):$cloneObj(source);if(!$is.void(thisArg))iteratee=
_bindMap(iteratee,thisArg);loaded=NO;result=VOID;switch(iteratee["length"]){case 0:for(key in source)if($own(source,key))if(loaded)result+=iteratee();else{result=source[key];loaded=YES}break;case 1:for(key in source)if($own(source,key))if(loaded)result+=iteratee(source[key]);else{result=source[key];loaded=YES}break;case 2:for(key in source)if($own(source,key))if(loaded)result+=iteratee(source[key],key);else{result=source[key];loaded=YES}break;default:for(key in source)if($own(source,key))if(loaded)result+=
iteratee(source[key],key,source);else{result=source[key];loaded=YES}break}return result}function _rollBaseObjUp(result,source,iteratee,thisArg){var key;if(iteratee["length"]>2)source=$is.fun(source)?$cloneFun(source):$cloneObj(source);if(!$is.void(thisArg))iteratee=_bindMap(iteratee,thisArg);switch(iteratee["length"]){case 0:for(key in source)if($own(source,key))result+=iteratee();break;case 1:for(key in source)if($own(source,key))result+=iteratee(source[key]);break;case 2:for(key in source)if($own(source,
key))result+=iteratee(source[key],key);break;default:for(key in source)if($own(source,key))result+=iteratee(source[key],key,source);break}return result}function _rollObjDown(source,iteratee,thisArg){var loaded;var result;var key;if(iteratee["length"]>2)source=$is.fun(source)?$cloneFun(source):$cloneObj(source);if(!$is.void(thisArg))iteratee=_bindMap(iteratee,thisArg);loaded=NO;result=VOID;switch(iteratee["length"]){case 0:for(key in source)if($own(source,key))if(loaded)result-=iteratee();else{result=
source[key];loaded=YES}break;case 1:for(key in source)if($own(source,key))if(loaded)result-=iteratee(source[key]);else{result=source[key];loaded=YES}break;case 2:for(key in source)if($own(source,key))if(loaded)result-=iteratee(source[key],key);else{result=source[key];loaded=YES}break;default:for(key in source)if($own(source,key))if(loaded)result-=iteratee(source[key],key,source);else{result=source[key];loaded=YES}break}return result}function _rollBaseObjDown(result,source,iteratee,thisArg){var key;
if(iteratee["length"]>2)source=$is.fun(source)?$cloneFun(source):$cloneObj(source);if(!$is.void(thisArg))iteratee=_bindMap(iteratee,thisArg);switch(iteratee["length"]){case 0:for(key in source)if($own(source,key))result-=iteratee();break;case 1:for(key in source)if($own(source,key))result-=iteratee(source[key]);break;case 2:for(key in source)if($own(source,key))result-=iteratee(source[key],key);break;default:for(key in source)if($own(source,key))result-=iteratee(source[key],key,source);break}return result}
function _rollArr(source,iteratee,thisArg){var result;var len;var i;if(iteratee["length"]>3)source=$cloneArr(source);if(!$is.void(thisArg))iteratee=_bindPrevMap(iteratee,thisArg);len=source["length"];result=len>0?source[0]:VOID;i=0;switch(iteratee["length"]){case 0:case 1:while(++i<len)result=iteratee(result);break;case 2:while(++i<len)result=iteratee(result,source[i]);break;case 3:while(++i<len)result=iteratee(result,source[i],i);break;default:while(++i<len)result=iteratee(result,source[i],i,source);
break}return result}function _rollBaseArr(result,source,iteratee,thisArg){var len;var i;if(iteratee["length"]>3)source=$cloneArr(source);if(!$is.void(thisArg))iteratee=_bindPrevMap(iteratee,thisArg);len=source["length"];i=-1;switch(iteratee["length"]){case 0:case 1:while(++i<len)result=iteratee(result);break;case 2:while(++i<len)result=iteratee(result,source[i]);break;case 3:while(++i<len)result=iteratee(result,source[i],i);break;default:while(++i<len)result=iteratee(result,source[i],i,source);break}return result}
function _rollArrUp(source,iteratee,thisArg){var result;var len;var i;if(iteratee["length"]>2)source=$cloneArr(source);if(!$is.void(thisArg))iteratee=_bindMap(iteratee,thisArg);len=source["length"];result=len>0?source[0]:VOID;i=0;switch(iteratee["length"]){case 0:while(++i<len)result+=iteratee();break;case 1:while(++i<len)result+=iteratee(source[i]);break;case 2:while(++i<len)result+=iteratee(source[i],i);break;default:while(++i<len)result+=iteratee(source[i],i,source);break}return result}function _rollBaseArrUp(result,
source,iteratee,thisArg){var len;var i;if(iteratee["length"]>2)source=$cloneArr(source);if(!$is.void(thisArg))iteratee=_bindMap(iteratee,thisArg);len=source["length"];i=-1;switch(iteratee["length"]){case 0:while(++i<len)result+=iteratee();break;case 1:while(++i<len)result+=iteratee(source[i]);break;case 2:while(++i<len)result+=iteratee(source[i],i);break;default:while(++i<len)result+=iteratee(source[i],i,source);break}return result}function _rollArrDown(source,iteratee,thisArg){var result;var len;
var i;if(iteratee["length"]>2)source=$cloneArr(source);if(!$is.void(thisArg))iteratee=_bindMap(iteratee,thisArg);len=source["length"];result=len>0?source[0]:VOID;i=0;switch(iteratee["length"]){case 0:while(++i<len)result-=iteratee();break;case 1:while(++i<len)result-=iteratee(source[i]);break;case 2:while(++i<len)result-=iteratee(source[i],i);break;default:while(++i<len)result-=iteratee(source[i],i,source);break}return result}function _rollBaseArrDown(result,source,iteratee,thisArg){var len;var i;
if(iteratee["length"]>2)source=$cloneArr(source);if(!$is.void(thisArg))iteratee=_bindMap(iteratee,thisArg);len=source["length"];i=-1;switch(iteratee["length"]){case 0:while(++i<len)result-=iteratee();break;case 1:while(++i<len)result-=iteratee(source[i]);break;case 2:while(++i<len)result-=iteratee(source[i],i);break;default:while(++i<len)result-=iteratee(source[i],i,source);break}return result}function _rollCycle(result,cycles,iteratee,thisArg){var count;var cycle;if(!$is.void(thisArg))iteratee=_bindPrevCycle(iteratee,
thisArg);count=cycles>0?cycles:0;switch(iteratee["length"]){case 0:case 1:while(count--)result=iteratee(result);break;case 2:cycle=0;while(count--)result=iteratee(result,cycle++);break;default:cycle=0;while(count--)result=iteratee(result,cycle++,cycles);break}return result}function _rollCycleUp(result,cycles,iteratee,thisArg){var count;var cycle;if(!$is.void(thisArg))iteratee=_bindCycle(iteratee,thisArg);count=cycles>0?cycles:0;switch(iteratee["length"]){case 0:while(count--)result+=iteratee();break;
case 1:cycle=0;while(count--)result+=iteratee(cycle++);break;default:cycle=0;while(count--)result+=iteratee(cycle++,cycles);break}return result}function _rollCycleDown(result,cycles,iteratee,thisArg){var count;var cycle;if(!$is.void(thisArg))iteratee=_bindCycle(iteratee,thisArg);count=cycles>0?cycles:0;switch(iteratee["length"]){case 0:while(count--)result-=iteratee();break;case 1:cycle=0;while(count--)result-=iteratee(cycle++);break;default:cycle=0;while(count--)result-=iteratee(cycle++,cycles);
break}return result}function _bindMap(func,thisArg){switch(func["length"]){case 0:return function iteratee(){return func["call"](thisArg)};case 1:return function iteratee(propValue){return func["call"](thisArg,propValue)};case 2:return function iteratee(propValue,key){return func["call"](thisArg,propValue,key)}}return function iteratee(propValue,key,source){return func["call"](thisArg,propValue,key,source)}}function _bindPrevMap(func,thisArg){switch(func["length"]){case 0:return function iteratee(){return func["call"](thisArg)};
case 1:return function iteratee(prevValue){return func["call"](thisArg,prevValue)};case 2:return function iteratee(prevValue,propValue){return func["call"](thisArg,prevValue,propValue)};case 3:return function iteratee(prevValue,propValue,key){return func["call"](thisArg,prevValue,propValue,key)}}return function iteratee(prevValue,propValue,key,source){return func["call"](thisArg,prevValue,propValue,key,source)}}function _bindCycle(func,thisArg){switch(func["length"]){case 0:return function iteratee(){return func["call"](thisArg)};
case 1:return function iteratee(cycle){return func["call"](thisArg,cycle)}}return function iteratee(cycle,cycles){return func["call"](thisArg,cycle,cycles)}}function _bindPrevCycle(func,thisArg){switch(func["length"]){case 0:return function iteratee(){return func["call"](thisArg)};case 1:return function iteratee(prevValue){return func["call"](thisArg,prevValue)};case 2:return function iteratee(prevValue,cycle){return func["call"](thisArg,prevValue,cycle)}}return function iteratee(prevValue,cycle,
cycles){return func["call"](thisArg,prevValue,cycle,cycles)}}var _MK_ERR=$mkErrs("roll");var _mkErr=_MK_ERR.error;var _mkTypeErr=_MK_ERR.typeError;return roll}();vitals["roll"]=roll;var same=function samePrivateScope(){function same(val1,val2){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #val1 defined");case 1:throw _mkErr(new ERR,"no #val2 defined");}return val1===val2}same["main"]=same;function sameLoose(val1,val2){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #val1 defined",
"loose");case 1:throw _mkErr(new ERR,"no #val2 defined","loose");}return val1==val2}same["loose"]=sameLoose;same["ish"]=sameLoose;var _MK_ERR=$mkErrs("same");var _mkErr=_MK_ERR.error;return same}();vitals["same"]=same;var sew=function fusePrivateScope(){function sew(val){switch(arguments["length"]){case 0:return"";case 1:return $is.arr(val)?_sew(val):$mkStr(val);default:return _sew(arguments)}}sew["main"]=sew;function _sew(vals){var result;var len;var i;result="";len=vals["length"];i=-1;while(++i<
len)result+=$mkStr(vals[i]);return result}return sew}();vitals["sew"]=sew;var slice=function slicePrivateScope(){function slice(source,start,end){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined");case 1:if(!$is.void(start)){if(!$is.num(start))throw _mkTypeErr(new TYPE_ERR,"start",start,"number\x3d");if(!$is.whole(start))throw _mkErr(new ERR,"invalid #start `number` ("+"must be whole `number`)");}break;default:if(!$is.void(end)){if(!$is.num(end))throw _mkTypeErr(new TYPE_ERR,
"end",end,"number\x3d");if(!$is.whole(end))throw _mkErr(new ERR,"invalid #end `number` ("+"must be whole `number`)");}if(!$is.void(start)){if(!$is.num(start))throw _mkTypeErr(new TYPE_ERR,"start",start,"number\x3d");if(!$is.whole(start))throw _mkErr(new ERR,"invalid #start `number` ("+"must be whole `number`)");}}if($is.nil(source))return NIL;if($is.str(source))return $sliceStr(source,start,end);if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"?Array|?Arguments|?Object|?Function|?string");
if(!$is.arrish(source))throw _mkErr(new ERR,"#source failed `array-like` test (#source."+"length must be a whole `number` that is `0` or more)");return $sliceArr(source,start,end)}slice["main"]=slice;function sliceArray(source,start,end){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","array");case 1:if(!$is.void(start)){if(!$is.num(start))throw _mkTypeErr(new TYPE_ERR,"start",start,"number\x3d","array");if(!$is.whole(start))throw _mkErr(new ERR,"invalid #start `number` ("+
"must be whole `number`)","array");}break;default:if(!$is.void(end)){if(!$is.num(end))throw _mkTypeErr(new TYPE_ERR,"end",end,"number\x3d","array");if(!$is.whole(end))throw _mkErr(new ERR,"invalid #end `number` ("+"must be whole `number`)","array");}if(!$is.void(start)){if(!$is.num(start))throw _mkTypeErr(new TYPE_ERR,"start",start,"number\x3d","array");if(!$is.whole(start))throw _mkErr(new ERR,"invalid #start `number` ("+"must be whole `number`)","array");}}if($is.nil(source))return NIL;if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,
"source",source,"?Array|?Arguments|?Object|?Function","array");if(!$is.arrish(source))throw _mkErr(new ERR,"#source failed `array-like` test (#source."+"length must be a whole `number` that is `0` or more)","array");return $sliceArr(source,start,end)}slice["array"]=sliceArray;slice["arr"]=sliceArray;function sliceString(source,start,end){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","string");case 1:if(!$is.void(start)){if(!$is.num(start))throw _mkTypeErr(new TYPE_ERR,
"start",start,"number\x3d","string");if(!$is.whole(start))throw _mkErr(new ERR,"invalid #start `number` ("+"must be whole `number`)","string");}break;default:if(!$is.void(end)){if(!$is.num(end))throw _mkTypeErr(new TYPE_ERR,"end",end,"number\x3d","string");if(!$is.whole(end))throw _mkErr(new ERR,"invalid #end `number` ("+"must be whole `number`)","string");}if(!$is.void(start)){if(!$is.num(start))throw _mkTypeErr(new TYPE_ERR,"start",start,"number\x3d","string");if(!$is.whole(start))throw _mkErr(new ERR,
"invalid #start `number` ("+"must be whole `number`)","string");}}if(!$is.str(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"string","string");return $sliceStr(source,start,end)}slice["string"]=sliceString;slice["str"]=sliceString;var _MK_ERR=$mkErrs("slice");var _mkErr=_MK_ERR.error;var _mkTypeErr=_MK_ERR.typeError;return slice}();vitals["slice"]=slice;var stringify=function fusePrivateScope(){function stringify(val){if(!arguments["length"])throw _mkErr(new ERR,"no #val defined");return $mkStr(val)}
stringify["main"]=stringify;var _MK_ERR=$mkErrs("stringify");var _mkErr=_MK_ERR.error;return stringify}();vitals["stringify"]=stringify;var to=function toPrivateScope(){var to={};function toString(val,separator){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #val defined","string");case 1:return $mkStr(val);default:if($is.void(separator))return $mkStr(val);if(!$is.arr(val))throw _mkErr(new ERR,"invalid #separator defined ("+"only allowed with an `array` #val)","string");if(!$is.str(separator))throw _mkTypeErr(new TYPE_ERR,
"separator",separator,"string\x3d","string");return val["join"](separator)}}to["string"]=toString;to["str"]=toString;function toNumber(val){if(arguments["length"]<1)throw _mkErr(new ERR,"no #val defined","number");if($is.num(val))return val;if($is.nil(val))return 0;if($is.bool(val))return val?1:0;if(!$is.str(val))throw _mkTypeErr(new TYPE_ERR,"val",val,"?string|?number|?boolean","number");val=NUM(val);if($is.nan(val))throw _mkRangeErr(new RANGE_ERR,"val","https://github.com/"+"imaginate/vitals/wiki/vitals.to#user-content-number",
"number");return val}to["number"]=toNumber;to["num"]=toNumber;function toBoolean(val){if(arguments["length"]<1)throw _mkErr(new ERR,"no #val defined","boolean");return!!val}to["boolean"]=toBoolean;to["bool"]=toBoolean;function toArray(val,separator){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #val defined","array");case 1:if($is.num(val))return new ARR(val);if(!$is.str(val))throw _mkTypeErr(new TYPE_ERR,"val",val,"string|number","array");return $splitKeys(val);default:if($is.num(val)){if(!$is.void(separator))throw _mkErr(new ERR,
"invalid #separator defined ("+"only allowed with a `string` #val)","array");return new ARR(val)}if(!$is.str(val))throw _mkTypeErr(new TYPE_ERR,"val",val,"string|number","array");if(!$is.regx(separator))separator=$mkStr(separator);return val["split"](separator)}}to["array"]=toArray;to["arr"]=toArray;function toRegExp(source,flags){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","regexp");case 1:if(!$is.str(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"string",
"regexp");return new REGX(source);default:if(!$is.str(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"string","regexp");if($is.void(flags))return new REGX(source);if(!$is.str(flags))throw _mkTypeErr(new TYPE_ERR,"flags",flags,"string\x3d","regexp");return new REGX(source,flags)}}to["regexp"]=toRegExp;to["regex"]=toRegExp;to["re"]=toRegExp;function toUpperCase(source){if(arguments["length"]<1)throw _mkErr(new ERR,"no #source defined","upperCase");if(!$is.str(source))throw _mkTypeErr(new TYPE_ERR,
"source",source,"string","upperCase");return source["toUpperCase"]()}to["upperCase"]=toUpperCase;to["upper"]=toUpperCase;function toLowerCase(source){if(arguments["length"]<1)throw _mkErr(new ERR,"no #source defined","lowerCase");if(!$is.str(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"string","lowerCase");return source["toLowerCase"]()}to["lowerCase"]=toLowerCase;to["lower"]=toLowerCase;var _MK_ERR=$mkErrs("to");var _mkErr=_MK_ERR.error;var _mkTypeErr=_MK_ERR.typeError;var _mkRangeErr=
_MK_ERR.rangeError;return to}();vitals["to"]=to;var until=function untilPrivateScope(){function until(end,source,iteratee,thisArg){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #end defined");case 1:throw _mkErr(new ERR,"no #iteratee defined");case 2:iteratee=source;if(!$is.fun(iteratee))throw _mkTypeErr(new TYPE_ERR,"iteratee",iteratee,"!function("+"*\x3d, (string|number)\x3d, (!Object|!Function|!Array)\x3d): *");return _untilEnd(end,iteratee);case 3:if($is.fun(source)&&($is.nil(iteratee)||
$is.void(iteratee)||$is.obj(iteratee))){thisArg=iteratee;iteratee=source;return _untilEnd(end,iteratee,thisArg)}break;default:if(!$is.nil(thisArg)&&!$is.void(thisArg)&&!$is.obj(thisArg))throw _mkTypeErr(new TYPE_ERR,"thisArg",thisArg,"?Object\x3d");break}if(!$is.fun(iteratee))throw _mkTypeErr(new TYPE_ERR,"iteratee",iteratee,"!function("+"*\x3d, (string|number)\x3d, (!Object|!Function|!Array)\x3d): *");if($is.num(source)){if(!$is.whole(source))throw _mkErr(new ERR,"invalid #source `number` ("+"must be whole `number`)");
return _untilCycle(end,source,iteratee,thisArg)}if($is.str(source))source=$splitKeys(source);else if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"(!Object|!Function|!Array|!Arguments|string|number)\x3d");return $is._arr(source)?_untilArr(end,source,iteratee,thisArg):_untilObj(end,source,iteratee,thisArg)}until["main"]=until;function untilObject(end,source,iteratee,thisArg){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #end defined","object");case 1:throw _mkErr(new ERR,
"no #source defined","object");case 2:throw _mkErr(new ERR,"no #iteratee defined","object");case 3:break;default:if(!$is.nil(thisArg)&&!$is.void(thisArg)&&!$is.obj(thisArg))throw _mkTypeErr(new TYPE_ERR,"thisArg",thisArg,"?Object\x3d","object");break}if(!$is.fun(iteratee))throw _mkTypeErr(new TYPE_ERR,"iteratee",iteratee,"!function("+"*\x3d, string\x3d, (!Object|!Function)\x3d): *","object");if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"(!Object|!Function)","object");return _untilObj(end,
source,iteratee,thisArg)}until["object"]=untilObject;until["obj"]=untilObject;function untilArray(end,source,iteratee,thisArg){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #end defined","array");case 1:throw _mkErr(new ERR,"no #source defined","array");case 2:throw _mkErr(new ERR,"no #iteratee defined","array");case 3:break;default:if(!$is.nil(thisArg)&&!$is.void(thisArg)&&!$is.obj(thisArg))throw _mkTypeErr(new TYPE_ERR,"thisArg",thisArg,"?Object\x3d","array");break}if(!$is.fun(iteratee))throw _mkTypeErr(new TYPE_ERR,
"iteratee",iteratee,"!function("+"*\x3d, number\x3d, !Array\x3d): *","array");if($is.str(source))source=$splitKeys(source);else if(!$is._obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Array|!Arguments|!Object|!Function|string","array");else if(!$is.arrish(source))throw _mkErr(new ERR,"#source failed `array-like` test (#source."+"length must be a whole `number` that is `0` or more)","array");return _untilArr(end,source,iteratee,thisArg)}until["array"]=untilArray;until["arr"]=untilArray;
function untilCycle(end,cycles,iteratee,thisArg){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #end defined","cycle");case 1:throw _mkErr(new ERR,"no #cycles defined","cycle");case 2:throw _mkErr(new ERR,"no #iteratee defined","cycle");case 3:break;default:if(!$is.nil(thisArg)&&!$is.void(thisArg)&&!$is.obj(thisArg))throw _mkTypeErr(new TYPE_ERR,"thisArg",thisArg,"?Object\x3d","cycle");break}if(!$is.fun(iteratee))throw _mkTypeErr(new TYPE_ERR,"iteratee",iteratee,"!function(number\x3d, number\x3d): *",
"cycle");if(!$is.num(cycles))throw _mkTypeErr(new TYPE_ERR,"cycles",cycles,"number","cycle");if(!$is.whole(cycles))throw _mkErr(new ERR,"invalid #cycles `number` ("+"must be whole `number`)","cycle");return _untilCycle(end,cycles,iteratee,thisArg)}until["cycle"]=untilCycle;until["time"]=untilCycle;function _untilEnd(end,iteratee,thisArg){var cycle;if(!$is.void(thisArg))iteratee=_bindEnd(iteratee,thisArg);if(iteratee["length"]>0){cycle=0;while(iteratee(cycle++)!==end);}else while(iteratee()!==end);
return YES}function _untilObj(end,source,iteratee,thisArg){var key;if(iteratee["length"]>2)source=$is.fun(source)?$cloneFun(source):$cloneObj(source);if(!$is.void(thisArg))iteratee=_bindMap(iteratee,thisArg);switch(iteratee["length"]){case 0:for(key in source)if($own(source,key))if(iteratee()===end)return YES;break;case 1:for(key in source)if($own(source,key))if(iteratee(source[key])===end)return YES;break;case 2:for(key in source)if($own(source,key))if(iteratee(source[key],key)===end)return YES;
break;default:for(key in source)if($own(source,key))if(iteratee(source[key],key,source)===end)return YES;break}return NO}function _untilArr(end,source,iteratee,thisArg){var len;var i;if(iteratee["length"]>2)source=$cloneArr(source);if(!$is.void(thisArg))iteratee=_bindMap(iteratee,thisArg);len=source["length"];i=-1;switch(iteratee["length"]){case 0:while(++i<len)if(iteratee()===end)return YES;break;case 1:while(++i<len)if(iteratee(source[i])===end)return YES;break;case 2:while(++i<len)if(iteratee(source[i],
i)===end)return YES;break;default:while(++i<len)if(iteratee(source[i],i,source)===end)return YES;break}return NO}function _untilCycle(end,cycles,iteratee,thisArg){var count;var cycle;if(!$is.void(thisArg))iteratee=_bindCycle(iteratee,thisArg);count=cycles>0?cycles:0;switch(iteratee["length"]){case 0:while(count--)if(iteratee()===end)return YES;break;case 1:cycle=0;while(count--)if(iteratee(cycle++)===end)return YES;break;default:cycle=0;while(count--)if(iteratee(cycle++,cycles)===end)return YES;break}return NO}
function _bindEnd(func,thisArg){return func["length"]<1?function iteratee(){return func["call"](thisArg)}:function iteratee(cycle){return func["call"](thisArg,cycle)}}function _bindMap(func,thisArg){switch(func["length"]){case 0:return function iteratee(){return func["call"](thisArg)};case 1:return function iteratee(value){func["call"](thisArg,value)};case 2:return function iteratee(value,key){func["call"](thisArg,value,key)}}return function iteratee(value,key,source){func["call"](thisArg,value,key,
source)}}function _bindCycle(func,thisArg){switch(func["length"]){case 0:return function iteratee(){return func["call"](thisArg)};case 1:return function iteratee(cycle){return func["call"](thisArg,cycle)}}return function iteratee(cycle,cycles){return func["call"](thisArg,cycle,cycles)}}var _MK_ERR=$mkErrs("until");var _mkErr=_MK_ERR.error;var _mkTypeErr=_MK_ERR.typeError;return until}();vitals["until"]=until;var amend=function amendPrivateScope(){function amend(source,props,val,descriptor,strongType,
setter){var byKey;switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined");case 1:throw _mkErr(new ERR,"no #props defined");case 2:if(!$is.obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object");if($is.str(props))props=$splitKeys(props);if(!$is.obj(props))throw _mkTypeErr(new TYPE_ERR,"props",props,"!Object\x3cstring, *\x3e|!Array\x3cstring\x3e|string");if($is.arr(props))throw _mkErr(new ERR,"no #val defined");return _amendProps(source,props,VOID,VOID,VOID);case 3:if(!$is.obj(source))throw _mkTypeErr(new TYPE_ERR,
"source",source,"!Object");if($is.str(props))props=$splitKeys(props);if(!$is.obj(props))throw _mkTypeErr(new TYPE_ERR,"props",props,"!Object\x3cstring, *\x3e|!Array\x3cstring\x3e|string");byKey=$is.arr(props);if(byKey)return _amendPropsByKey(source,props,val,VOID,VOID,VOID);descriptor=val;strongType=VOID;setter=VOID;if($is.str(descriptor)){strongType=descriptor;descriptor=VOID}else if($is.fun(descriptor)){setter=descriptor;descriptor=VOID}break;case 4:if(!$is.obj(source))throw _mkTypeErr(new TYPE_ERR,
"source",source,"!Object");if($is.str(props))props=$splitKeys(props);if(!$is.obj(props))throw _mkTypeErr(new TYPE_ERR,"props",props,"!Object\x3cstring, *\x3e|!Array\x3cstring\x3e|string");byKey=$is.arr(props);if(byKey)if($is.str(descriptor)){strongType=descriptor;descriptor=VOID}else{if($is.fun(descriptor)){setter=descriptor;descriptor=VOID}}else{strongType=descriptor;descriptor=val;setter=VOID;if($is.fun(strongType)){setter=strongType;strongType=VOID;if($is.str(descriptor)){strongType=descriptor;
descriptor=VOID}}}break;case 5:if(!$is.obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object");if($is.str(props))props=$splitKeys(props);if(!$is.obj(props))throw _mkTypeErr(new TYPE_ERR,"props",props,"!Object\x3cstring, *\x3e|!Array\x3cstring\x3e|string");byKey=$is.arr(props);if(byKey){if($is.fun(strongType)){setter=strongType;strongType=VOID;if($is.str(descriptor)){strongType=descriptor;descriptor=VOID}}}else{setter=strongType;strongType=descriptor;descriptor=val}break;default:if(!$is.obj(source))throw _mkTypeErr(new TYPE_ERR,
"source",source,"!Object");if($is.str(props))props=$splitKeys(props);if(!$is.obj(props))throw _mkTypeErr(new TYPE_ERR,"props",props,"!Object\x3cstring, *\x3e|!Array\x3cstring\x3e|string");byKey=$is.arr(props);if(!byKey){setter=strongType;strongType=descriptor;descriptor=val}break}if(!$is.void(descriptor)&&!$is.obj(descriptor))throw _mkTypeErr(new TYPE_ERR,"descriptor",descriptor,"!Object\x3d");if(!$is.void(strongType)&&!$is.str(strongType))throw _mkTypeErr(new TYPE_ERR,"strongType",strongType,"string\x3d");
if(!$is.void(setter)&&!$is.fun(setter))throw _mkTypeErr(new TYPE_ERR,"setter",setter,"(!function(*, *): *)\x3d");if(strongType)if(byKey){if(!is(strongType+"\x3d",val))throw _mkTypeErr(new TYPE_ERR,"val",val,strongType+"\x3d");}else if(!_strongTypeCheckProps(strongType,props))throw _mkTypeErr(new TYPE_ERR,"props property value",props,strongType);return byKey?_amendPropsByKey(source,props,val,descriptor,strongType,setter):_amendProps(source,props,descriptor,strongType,setter)}amend["main"]=amend;function amendConfig(source,
props,descriptor){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","config");case 1:throw _mkErr(new ERR,"no #props defined","config");case 2:if(!$is.obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object","config");if($is.str(props))props=$splitKeys(props);if($is.arr(props))throw _mkErr(new ERR,"no #descriptor defined","config");if(!is("!objMap",props))throw _mkTypeErr(new TYPE_ERR,"props",props,"!Object\x3cstring, !Object\x3e|!Array\x3cstring\x3e|string",
"config");if(!_hasKeys(source,props))throw _mkErr(new ERR,"at least one property key name in the "+"#props did not exist in the #source","config");return _amendConfigs(source,props);default:if(!$is.obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object","config");if($is.str(props))props=$splitKeys(props);if(!$is.obj(props))throw _mkTypeErr(new TYPE_ERR,"props",props,"!Object\x3cstring, !Object\x3e|!Array\x3cstring\x3e|string","config");if($is.arr(props)){if(!$is.obj(descriptor))throw _mkTypeErr(new TYPE_ERR,
"descriptor",descriptor,"!Object\x3d","config");props=_setupConfigs(props,descriptor)}else if(!is("!objMap",props))throw _mkTypeErr(new TYPE_ERR,"props",props,"!Object\x3cstring, !Object\x3e|!Array\x3cstring\x3e|string","config");if(!_hasKeys(source,props))throw _mkErr(new ERR,"at least one property key name in the "+"#props did not exist in the #source","config");return _amendConfigs(source,props)}}amend["config"]=amendConfig;function amendProperty(source,key,val,descriptor,strongType,setter){var byKey;
switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","property");case 1:throw _mkErr(new ERR,"no #key defined","property");case 2:throw _mkErr(new ERR,"no #val or #descriptor defined","property");case 3:if(_isDescriptor(val)){descriptor=val;val=descriptor["value"]}break;case 4:if($is.str(descriptor)){strongType=descriptor;descriptor=VOID}else if($is.fun(descriptor)){setter=descriptor;descriptor=VOID}if(_isDescriptor(val)){descriptor=val;val=descriptor["value"]}break;case 5:if($is.fun(strongType)){setter=
strongType;strongType=VOID;if($is.str(descriptor)){strongType=descriptor;descriptor=VOID}}if(_isDescriptor(val)){descriptor=val;val=descriptor["value"]}break}if(!$is.obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object","property");if(!$is.str(key))throw _mkTypeErr(new TYPE_ERR,"key",key,"string","property");if(!$is.void(descriptor)&&!$is.obj(descriptor))throw _mkTypeErr(new TYPE_ERR,"descriptor",descriptor,"!Object\x3d","property");if(!$is.void(strongType)&&!$is.str(strongType))throw _mkTypeErr(new TYPE_ERR,
"strongType",strongType,"string\x3d","property");if(!$is.void(setter)&&!$is.fun(setter))throw _mkTypeErr(new TYPE_ERR,"setter",setter,"(!function(*, *): *)\x3d","property");if(!!strongType&&!is(strongType+"\x3d",val))throw _mkTypeErr(new TYPE_ERR,"val",val,strongType+"\x3d","property");if(descriptor&&(strongType||setter)&&$own(descriptor,"writable"))throw _mkErr(new ERR,"invalid data #descriptor used with defined "+"#strongType or #setter","property");return _amendProp(source,key,val,descriptor,strongType,
setter)}amend["property"]=amendProperty;amend["prop"]=amendProperty;function amendPropertyConfig(source,key,descriptor){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","property.config");case 1:throw _mkErr(new ERR,"no #key defined","property.config");case 2:throw _mkErr(new ERR,"no #descriptor defined","property.config");}if(!$is.obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object","property.config");if(!$is.str(key))throw _mkTypeErr(new TYPE_ERR,"key",
key,"string","property.config");if(!$is.obj(descriptor))throw _mkTypeErr(new TYPE_ERR,"descriptor",descriptor,"!Object","property.config");if(!$own(source,key))throw _mkErr(new ERR,"undefined #key name in #source","property.config");return _amendConfig(source,key,descriptor)}amend["property"]["config"]=amendPropertyConfig;amend["prop"]["config"]=amendPropertyConfig;function amendProperties(source,props,val,descriptor,strongType,setter){var byKey;switch(arguments["length"]){case 0:throw _mkErr(new ERR,
"no #source defined","properties");case 1:throw _mkErr(new ERR,"no #props defined","properties");case 2:if(!$is.obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object","properties");if($is.str(props))props=$splitKeys(props);if(!$is.obj(props))throw _mkTypeErr(new TYPE_ERR,"props",props,"!Object\x3cstring, *\x3e|!Array\x3cstring\x3e|string","properties");if($is.arr(props))throw _mkErr(new ERR,"no #val defined","properties");return _amendProps(source,props,VOID,VOID,VOID);case 3:if(!$is.obj(source))throw _mkTypeErr(new TYPE_ERR,
"source",source,"!Object","properties");if($is.str(props))props=$splitKeys(props);if(!$is.obj(props))throw _mkTypeErr(new TYPE_ERR,"props",props,"!Object\x3cstring, *\x3e|!Array\x3cstring\x3e|string","properties");byKey=$is.arr(props);if(byKey)return _amendPropsByKey(source,props,val,VOID,VOID,VOID);descriptor=val;strongType=VOID;setter=VOID;if($is.str(descriptor)){strongType=descriptor;descriptor=VOID}else if($is.fun(descriptor)){setter=descriptor;descriptor=VOID}break;case 4:if(!$is.obj(source))throw _mkTypeErr(new TYPE_ERR,
"source",source,"!Object","properties");if($is.str(props))props=$splitKeys(props);if(!$is.obj(props))throw _mkTypeErr(new TYPE_ERR,"props",props,"!Object\x3cstring, *\x3e|!Array\x3cstring\x3e|string","properties");byKey=$is.arr(props);if(byKey)if($is.str(descriptor)){strongType=descriptor;descriptor=VOID}else{if($is.fun(descriptor)){setter=descriptor;descriptor=VOID}}else{strongType=descriptor;descriptor=val;setter=VOID;if($is.fun(strongType)){setter=strongType;strongType=VOID;if($is.str(descriptor)){strongType=
descriptor;descriptor=VOID}}}break;case 5:if(!$is.obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object","properties");if($is.str(props))props=$splitKeys(props);if(!$is.obj(props))throw _mkTypeErr(new TYPE_ERR,"props",props,"!Object\x3cstring, *\x3e|!Array\x3cstring\x3e|string","properties");byKey=$is.arr(props);if(byKey){if($is.fun(strongType)){setter=strongType;strongType=VOID;if($is.str(descriptor)){strongType=descriptor;descriptor=VOID}}}else{setter=strongType;strongType=descriptor;
descriptor=val}break;default:if(!$is.obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object","properties");if($is.str(props))props=$splitKeys(props);if(!$is.obj(props))throw _mkTypeErr(new TYPE_ERR,"props",props,"!Object\x3cstring, *\x3e|!Array\x3cstring\x3e|string","properties");byKey=$is.arr(props);if(!byKey){setter=strongType;strongType=descriptor;descriptor=val}break}if(!$is.void(descriptor)&&!$is.obj(descriptor))throw _mkTypeErr(new TYPE_ERR,"descriptor",descriptor,"!Object\x3d",
"properties");if(!$is.void(strongType)&&!$is.str(strongType))throw _mkTypeErr(new TYPE_ERR,"strongType",strongType,"string\x3d","properties");if(!$is.void(setter)&&!$is.fun(setter))throw _mkTypeErr(new TYPE_ERR,"setter",setter,"(!function(*, *): *)\x3d","properties");if(strongType)if(byKey){if(!is(strongType+"\x3d",val))throw _mkTypeErr(new TYPE_ERR,"val",val,strongType+"\x3d","properties");}else if(!_strongTypeCheckProps(strongType,props))throw _mkTypeErr(new TYPE_ERR,"props property value",props,
strongType,"properties");return byKey?_amendPropsByKey(source,props,val,descriptor,strongType,setter):_amendProps(source,props,descriptor,strongType,setter)}amend["properties"]=amendProperties;amend["props"]=amendProperties;function amendPropertiesConfig(source,props,descriptor){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #source defined","properties.config");case 1:throw _mkErr(new ERR,"no #props defined","properties.config");case 2:if(!$is.obj(source))throw _mkTypeErr(new TYPE_ERR,
"source",source,"!Object","properties.config");if($is.str(props))props=$splitKeys(props);if($is.arr(props))throw _mkErr(new ERR,"no #descriptor defined","properties.config");if(!is("!objMap",props))throw _mkTypeErr(new TYPE_ERR,"props",props,"!Object\x3cstring, !Object\x3e|!Array\x3cstring\x3e|string","properties.config");if(!_hasKeys(source,props))throw _mkErr(new ERR,"at least one property key name in the "+"#props did not exist in the #source","properties.config");return _amendConfigs(source,props);
default:if(!$is.obj(source))throw _mkTypeErr(new TYPE_ERR,"source",source,"!Object","properties.config");if($is.str(props))props=$splitKeys(props);if(!$is.obj(props))throw _mkTypeErr(new TYPE_ERR,"props",props,"!Object\x3cstring, !Object\x3e|!Array\x3cstring\x3e|string","properties.config");if($is.arr(props)){if(!$is.obj(descriptor))throw _mkTypeErr(new TYPE_ERR,"descriptor",descriptor,"!Object\x3d","properties.config");props=_setupConfigs(props,descriptor)}else if(!is("!objMap",props))throw _mkTypeErr(new TYPE_ERR,
"props",props,"!Object\x3cstring, !Object\x3e|!Array\x3cstring\x3e|string","properties.config");if(!_hasKeys(source,props))throw _mkErr(new ERR,"at least one property key name in the "+"#props did not exist in the #source","properties.config");return _amendConfigs(source,props)}}amend["properties"]["config"]=amendPropertiesConfig;amend["props"]["config"]=amendPropertiesConfig;function _amendProp(obj,key,val,descriptor,strongType,setter){descriptor=descriptor||NIL;descriptor=_getDescriptor(descriptor,
!!strongType||!!setter);strongType=_getStrongType(strongType);descriptor=strongType||setter?_setupDescriptorByKeyWithSetter(val,descriptor,strongType,setter):_isAccessor(descriptor)?$cloneObj(descriptor):_setupDescriptorByKey(val,descriptor);return _ObjDefineProp(obj,key,descriptor)}function _amendProps(obj,props,descriptor,strongType,setter){descriptor=_getDescriptor(descriptor||NIL,!!strongType||!!setter);strongType=_getStrongType(strongType);props=!!strongType||!!setter?_setupPropsWithSetter(props,
descriptor,strongType,setter):_setupProps(props,descriptor);return _ObjDefineProps(obj,props)}function _amendPropsByKey(obj,props,val,descriptor,strongType,setter){descriptor=_getDescriptor(descriptor||NIL,!!strongType||!!setter);strongType=_getStrongType(strongType);props=!!strongType||!!setter?_setupPropsByKeyWithSetter(props,val,descriptor,strongType,setter):_setupPropsByKey(props,val,descriptor);return _ObjDefineProps(obj,props)}function _amendConfig(obj,key,descriptor){return _ObjDefineProp(obj,
key,descriptor)}function _amendConfigs(obj,props){return _ObjDefineProps(obj,props)}var _DATA_DESCRIPTOR={"writable":YES,"enumerable":YES,"configurable":YES};var _ACCESSOR_DESCRIPTOR={"enumerable":YES,"configurable":YES};var _DESCRIPTOR_PROPS={"get":YES,"set":YES,"value":YES,"writable":YES,"enumerable":YES,"configurable":YES};function _setupDescriptor(val,descriptor){var prop;prop=$cloneObj(descriptor);val=_isDescriptor(val)?val:{"value":val};return $merge(prop,val)}function _setupDescriptorWithSetter(val,
descriptor,strongType,setter){var prop;prop=$cloneObj(descriptor);if(_isDescriptor(val)){prop=$merge(prop,val);if($own(prop,"writable")||_isAccessor(prop))return prop;val=prop["value"];prop=_cloneAccessor(prop)}prop=_setupGetSet(val,prop,strongType,setter);return prop}function _setupDescriptorByKey(val,descriptor){var prop;prop=$cloneObj(descriptor);prop["value"]=val;return prop}function _setupDescriptorByKeyWithSetter(val,descriptor,strongType,setter){var prop;prop=$cloneObj(descriptor);prop=_setupGetSet(val,
prop,strongType,setter);return prop}function _setupGetSet(val,descriptor,strongType,setter){descriptor["get"]=function get(){return val};descriptor["set"]=strongType&&setter?function set(newVal){if(!strongType(newVal))throw _mkStrongTypeErr(new TYPE_ERR,"invalid data type for property value: `"+newVal+"`");val=setter(newVal,val)}:strongType?function set(newVal){if(!strongType(newVal))throw _mkStrongTypeErr(new TYPE_ERR,"invalid data type for property value: `"+newVal+"`");val=newVal}:function set(newVal){val=
setter(newVal,val)};return descriptor}function _isDescriptor(val){var key;if(!$is.obj(val))return NO;for(key in val)if($own(val,key)&&!$own(_DESCRIPTOR_PROPS,key))return NO;return YES}function _isData(obj){return $is.obj(obj)&&($own(obj,"value")||$own(obj,"writable"))}function _isAccessor(obj){return $is.obj(obj)&&($own(obj,"get")||$own(obj,"set"))}function _cloneAccessor(descriptor){var accessor;var key;accessor={};for(key in descriptor)if($own(descriptor,key)&&key!=="value")accessor[key]=descriptor[key];
return accessor}function _getDescriptor(descriptor,hasSetter){var defaultDescriptor;if(hasSetter&&_isData(descriptor)){defaultDescriptor={};if($is.bool(descriptor["enumerable"]))defaultDescriptor["enumerable"]=descriptor["enumerable"];if($is.bool(descriptor["configurable"]))defaultDescriptor["configurable"]=descriptor["configurable"];descriptor=defaultDescriptor}defaultDescriptor=hasSetter||_isAccessor(descriptor)?_ACCESSOR_DESCRIPTOR:_DATA_DESCRIPTOR;defaultDescriptor=$cloneObj(defaultDescriptor);
return $merge(defaultDescriptor,descriptor)}function _getStrongType(strongType){return strongType&&function strongTypeCheck(newVal){return is(strongType,newVal)}}var _HAS_DEFINE_PROPS=function _HAS_DEFINE_PROPS_PrivateScope(){var descriptor;var name;var obj;var key;name="defineProperties";if(!(name in OBJ)||!$is.fun(OBJ[name]))return NO;name="defineProperty";if(!(name in OBJ)||!$is.fun(OBJ[name]))return NO;obj={};descriptor={};descriptor["value"]=obj;descriptor["enumerable"]=NO;try{OBJ[name](obj,
"key",descriptor);for(key in obj)if(key==="key")return NO}catch(e){return NO}return obj["key"]===obj}();var _ObjDefineProp=function _ObjDefinePropPrivateScope(){if(_HAS_DEFINE_PROPS)return OBJ["defineProperty"];return function defineProperty(obj,key,descriptor){obj[key]=$own(descriptor,"get")?descriptor["get"]():descriptor["value"];return obj}}();var _ObjDefineProps=function _ObjDefinePropsPrivateScope(){if(_HAS_DEFINE_PROPS)return OBJ["defineProperties"];return function defineProperties(obj,props){var descriptor;
var key;for(key in props)if($own(props,key)){descriptor=props[key];obj[key]=$own(descriptor,"get")?descriptor["get"]():descriptor["value"]}return obj}}();function _setupProps(props,descriptor){var newProps;var key;newProps={};for(key in props)if($own(props,key))newProps[key]=_setupDescriptor(props[key],descriptor);return newProps}function _setupPropsWithSetter(props,descriptor,strongType,setter){var newProps;var key;newProps={};for(key in props)if($own(props,key))newProps[key]=_setupDescriptorWithSetter(props[key],
descriptor,strongType,setter);return newProps}function _setupPropsByKey(keys,val,descriptor){var setupDesc;var props;var len;var i;setupDesc=_isAccessor(descriptor)?function setupDesc(val,desc){return $cloneObj(desc)}:_setupDescriptorByKey;props={};len=keys["length"];i=-1;while(++i<len)props[keys[i]]=setupDesc(val,descriptor);return props}function _setupPropsByKeyWithSetter(keys,val,descriptor,strongType,setter){var props;var len;var i;props={};len=keys["length"];i=-1;while(++i<len)props[keys[i]]=
_setupDescriptorByKeyWithSetter(val,descriptor,strongType,setter);return props}function _setupConfigs(keys,desc){var props;var len;var i;props={};len=keys["length"];i=-1;while(++i<len)props[keys[i]]=desc;return props}function _hasKeys(source,obj){var key;for(key in obj)if($own(obj,key)&&!$own(source,key))return NO;return YES}function _strongTypeCheckProps(strongType,props){var key;var val;strongType+="\x3d";for(key in props)if($own(props,key)){val=props[key];if(_isDescriptor(val)){if($own(val,"writable"))continue;
val=val["value"]}if(!is(strongType,val))return NO}return YES}function _mkStrongTypeErr(err,msg){err["__setter"]=YES;err["setter"]=YES;err["__type"]=YES;err["type"]=YES;err["name"]="TypeError";err["message"]=msg;err["msg"]=msg;return err}var _MK_ERR=$mkErrs("amend");var _mkErr=_MK_ERR.error;var _mkTypeErr=_MK_ERR.typeError;return amend}();vitals["amend"]=amend;var create=function createPrivateScope(){function create(proto,props,val,descriptor,strongType,setter){var args;switch(arguments["length"]){case 0:throw _mkErr(new ERR,
"no #proto defined");case 1:if(!$is.nil(proto)&&!$is.obj(proto))throw _mkTypeErr(new TYPE_ERR,"proto",proto,"?Object");return $mkObj(proto);default:if(!$is.nil(proto)&&!$is.obj(proto))throw _mkTypeErr(new TYPE_ERR,"proto",proto,"?Object");args=$sliceArr(arguments);args[0]=$mkObj(proto);return amend["apply"](NIL,args)}}create["main"]=create;function createObject(proto,props,val,descriptor,strongType,setter){var args;switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #proto defined","object");
case 1:if(!$is.nil(proto)&&!$is.obj(proto))throw _mkTypeErr(new TYPE_ERR,"proto",proto,"?Object","object");return $mkObj(proto);default:if(!$is.nil(proto)&&!$is.obj(proto))throw _mkTypeErr(new TYPE_ERR,"proto",proto,"?Object","object");args=$sliceArr(arguments);args[0]=$mkObj(proto);return amend["apply"](NIL,args)}}create["object"]=createObject;create["obj"]=createObject;var _MK_ERR=$mkErrs("create");var _mkErr=_MK_ERR.error;var _mkTypeErr=_MK_ERR.typeError;return create}();vitals["create"]=create;
var freeze=function freezePrivateScope(){function freeze(obj,deep){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #obj defined");case 1:if($is.nil(obj))return NIL;if(!$is._obj(obj))throw _mkTypeErr(new TYPE_ERR,"obj",obj,"?Object|?Function");return _freeze(obj);default:if(!$is.void(deep)&&!$is.bool(deep))throw _mkTypeErr(new TYPE_ERR,"deep",deep,"boolean\x3d");if($is.nil(obj))return NIL;if(!$is._obj(obj))throw _mkTypeErr(new TYPE_ERR,"obj",obj,"?Object|?Function");return deep?_deepFreeze(obj):
_freeze(obj)}}freeze["main"]=freeze;function freezeObject(obj,deep){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #obj defined","object");case 1:if($is.nil(obj))return NIL;if(!$is._obj(obj))throw _mkTypeErr(new TYPE_ERR,"obj",obj,"?Object|?Function","object");return _freeze(obj);default:if(!$is.void(deep)&&!$is.bool(deep))throw _mkTypeErr(new TYPE_ERR,"deep",deep,"boolean\x3d","object");if($is.nil(obj))return NIL;if(!$is._obj(obj))throw _mkTypeErr(new TYPE_ERR,"obj",obj,"?Object|?Function",
"object");return deep?_deepFreeze(obj):_freeze(obj)}}freeze["object"]=freezeObject;freeze["obj"]=freezeObject;var _ObjectFreeze=function _ObjectFreezePolyfillPrivateScope(){var objectFreeze;if(!("freeze"in OBJ)||!$is.fun(OBJ["freeze"]))return function freeze(obj){return obj};objectFreeze=OBJ["freeze"];try{objectFreeze(function(){});return objectFreeze}catch(e){return function freeze(obj){return $is.fun(obj)?obj:objectFreeze(obj)}}}();var _freeze=_ObjectFreeze;function _deepFreeze(obj){var key;for(key in obj)if($own(obj,
key)&&$is._obj(obj[key]))_deepFreeze(obj[key]);return _freeze(obj)}var _MK_ERR=$mkErrs("freeze");var _mkErr=_MK_ERR.error;var _mkTypeErr=_MK_ERR.typeError;return freeze}();vitals["freeze"]=freeze;var seal=function sealPrivateScope(){function seal(obj,deep){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #obj defined");case 1:if($is.nil(obj))return NIL;if(!$is._obj(obj))throw _mkTypeErr(new TYPE_ERR,"obj",obj,"?Object|?Function");return _seal(obj);default:if(!$is.void(deep)&&!$is.bool(deep))throw _mkTypeErr(new TYPE_ERR,
"deep",deep,"boolean\x3d");if($is.nil(obj))return NIL;if(!$is._obj(obj))throw _mkTypeErr(new TYPE_ERR,"obj",obj,"?Object|?Function");return deep?_deepSeal(obj):_seal(obj)}}seal["main"]=seal;function sealObject(obj,deep){switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #obj defined","object");case 1:if($is.nil(obj))return NIL;if(!$is._obj(obj))throw _mkTypeErr(new TYPE_ERR,"obj",obj,"?Object|?Function","object");return _seal(obj);default:if(!$is.void(deep)&&!$is.bool(deep))throw _mkTypeErr(new TYPE_ERR,
"deep",deep,"boolean\x3d","object");if($is.nil(obj))return NIL;if(!$is._obj(obj))throw _mkTypeErr(new TYPE_ERR,"obj",obj,"?Object|?Function","object");return deep?_deepSeal(obj):_seal(obj)}}seal["object"]=sealObject;seal["obj"]=sealObject;var _ObjectSeal=function _ObjectSealPolyfillPrivateScope(){var objectSeal;if(!("seal"in OBJ)||!$is.fun(OBJ["seal"]))return function seal(obj){return obj};objectSeal=OBJ["seal"];try{objectSeal(function(){});return objectSeal}catch(e){return function seal(obj){return $is.fun(obj)?
obj:objectSeal(obj)}}}();var _seal=_ObjectSeal;function _deepSeal(obj){var key;for(key in obj)if($own(obj,key)&&$is._obj(obj[key]))_deepSeal(obj[key]);return _seal(obj)}var _MK_ERR=$mkErrs("seal");var _mkErr=_MK_ERR.error;var _mkTypeErr=_MK_ERR.typeError;return seal}();vitals["seal"]=seal;var run=function runPrivateScope(){function run(cmd,opts){var result;var args;var bin;switch(arguments["length"]){case 0:throw _mkErr(new ERR,"no #cmd defined");case 1:opts=$cloneObj(_DFLT_OPTS);break;default:if($is.void(opts)||
$is.nil(opts)){opts=$cloneObj(_DFLT_OPTS);break}if(!$is.obj(opts))throw _mkTypeErr(new TYPE_ERR,"opts",opts,"?Object\x3d");opts=$cloneObj(opts);if(!$hasOpt(opts,"catchExit"))opts["catchExit"]=YES;else if(!$is.bool(opts["catchExit"]))throw _mkTypeErr(new TYPE_ERR,"opts.catchExit",opts["catchExit"],"boolean\x3d");if(!$hasOpt(opts,"buffer"))opts["buffer"]=NO;else if(!$is.bool(opts["buffer"]))throw _mkTypeErr(new TYPE_ERR,"opts.buffer",opts["buffer"],"boolean\x3d");if(!$hasOpt(opts,"encoding"))opts["encoding"]=
opts["buffer"]?VOID:"utf8";else if(!$is.str(opts["encoding"]))throw _mkTypeErr(new TYPE_ERR,"opts.encoding",opts["encoding"],"string\x3d");else if(!opts["encoding"])throw _mkErr(new ERR,"invalid empty #opts.encoding `string`");if(!$hasOpt(opts,"eol"))opts["eol"]=opts["buffer"]?NIL:"LF";else if($is.str(opts["eol"])){if(!$is.eol(opts["eol"]))throw _mkRangeErr(new RANGE_ERR,"opts.eol",["LF","CR","CRLF"]);opts["eol"]=opts["eol"]["toUpperCase"]()}else if(!$is.nil(opts["eol"]))throw _mkTypeErr(new TYPE_ERR,
"opts.eol",opts["eol"],"?string\x3d");break}if($is.str(cmd)){cmd=_trimSpace(cmd);cmd=cmd["split"](_ANY_SPACE)}else if($is._arr(cmd))cmd=$sliceArr(cmd);else throw _mkTypeErr(new TYPE_ERR,"cmd",cmd,"!Array|!Arguments|string");if(cmd["length"]<1)throw _mkErr(new ERR,"invalid empty #cmd defined");bin=cmd[0];args=$sliceArr(cmd,1);if(!bin)throw _mkErr(new ERR,"invalid empty #cmd defined");result=_spawn(bin,args,opts);if(result["error"])throw _mkErr(new ERR,'"'+result["error"]["toString"]()+'"');if(opts["catchExit"]&&
result["status"])throw _mkErr(new ERR,"Failed exit code: "+_getExitCode(result["status"])+" - ");return _cleanStdout(result["stdout"],opts["eol"],opts["buffer"])}run["main"]=run;var _DFLT_OPTS={"eol":"LF","buffer":NO,"catchExit":YES,"encoding":"utf8"};function _cleanStdout(stdout,eol,preferBuffer){if(!$is.str(stdout)){if(preferBuffer)return stdout;stdout=stdout["toString"]()}return $is.str(eol)?$fixEol(stdout,eol):stdout}var _spawn=CP["spawnSync"];var _EXIT_CODES=["Uncaught Fatal Exception","(unused exit code)",
"Internal JavaScript Parse Error","Internal JavaScript Evaluation Error","Fatal Error","Non-function Internal Exception Handler","Internal Exception Handler Run-Time Failure","Uncaught Exception","Invalid Argument","Internal JavaScript Run-Time Failure","(unused exit code)","Invalid Debug Argument"];function _getExitCode(code){return code>=128?code+" - UNIX Signal Exit":code+" - "+_EXIT_CODES[--code]}var _ANY_SPACE=/[ \t]+/;var _END_SPACE=/[ \t]+$/;var _START_SPACE=/^[ \t]+/;function _trimSpace(src){src=
src["replace"](_START_SPACE,"");return src["replace"](_END_SPACE,"")}var _MK_ERR=$mkErrs("run");var _mkErr=_MK_ERR.error;var _mkTypeErr=_MK_ERR.typeError;var _mkRangeErr=_MK_ERR.rangeError;return run}();vitals["run"]=run;vitals["VERSION"]=VERSION;module.exports=vitals})(this);